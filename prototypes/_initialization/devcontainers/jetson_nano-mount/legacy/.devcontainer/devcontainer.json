{
  "name": "jetson-nano-lt4-20",
  "build": {
    "dockerfile": "Dockerfile"
  },
  "remoteUser": "vscode",
  // ðŸ‘‡ Features to add to the Dev Container. More info: https://containers.dev/implementors/features.
  "features": {
    "ghcr.io/meaningful-ooo/devcontainer-features/fish:1": {},
    "ghcr.io/devcontainers/features/github-cli:1": {}
    // "ghcr.io/devcontainers/features/python:1": {
    //   "version": "3.11",
    //   "installTools": true,
    //   "toolsToInstall": "black,pytest",
    //   "installJupyterlab": true
    // }
  },
  "containerEnv": {
    "DISPLAY": "localhost:10.0",
    "XAUTHORITY": "/tmp/.Xauthority"
  },
  "runArgs": [
    "--runtime",
    "nvidia", // Ensure NVIDIA runtime is used for GPU access
    "--network",
    "host",
    "--gpus",
    "all",
    // "--shm-size", "2gb", // Allocate shared memory
    "--device",
    "/dev/video0", // Access to video input devices
    "--volume",
    "/tmp/.X11-unix:/tmp/.X11-unix", // X11 forwarding for GUI apps
    "--volume",
    "/home/jsnano/.Xauthority:/tmp/.Xauthority:rw", // X authority
    "--privileged" // may be required to access hardware and devices fully
  ],
  // may be required to add "--privileged"?
  // ðŸ‘‡ Use 'forwardPorts' to make a list of ports inside the container available locally.
  // "forwardPorts": [],

  // ðŸ‘‡ Use 'postCreateCommand' to run commands after the container is created.
  "postCreateCommand": "pip install --upgrade pip && pip install -r requirements_dev.txt",

  // ðŸ‘‡ Configure tool-specific properties.
  "customizations": {
    "vscode": {
      "extensions": [
        "ms-python.python",
        "njpwerner.autodocstring",
        "ms-toolsai.jupyter",
        "ms-python.black-formatter"
      ]
    }
  }

  // ðŸ‘‡ Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
  // "remoteUser": "root"
}

/*
# check jetson-nano's cuda version
ðŸ§® cat /usr/local/cuda/version.txt
>> CUDA Version 10.2.300

# check jetson-nano's cuda version
ðŸ§® dpkg -l | grep libcudnn
>> 8.2.1.32-1+cuda


# check jetson-nano's L4T (Linux for Tegra) version ; https://developer.nvidia.com/embedded/linux-tegra-r3275
ðŸ§® head -n 1 /etc/nv_tegra_release
>> R32 (release), REVISION: 7.5,
Jetson Linux 32.7.5 is included as part of JetPack 4.6.5



v4l2-ctl --list-devices

If Using A -> J SSH with X11 Forwarding:

Connect from A to J using:
ssh -X user@jetson-nano
xhost +local:

https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/

error..
    "ghcr.io/devcontainers/features/nvidia-cuda:1": {
      "installCudnn": true,
      "cudaVersion": "10.2",
      "cudnnVersion": "8.2.1"
    },


Issue: CUDA Mismatch
Base Image and CUDA Compatibility:
Your Dockerfile uses the nvcr.io/nvidia/l4t-base:r32.7.1 image, which corresponds to Ubuntu 18.04 (Bionic), whereas the CUDA feature in devcontainer.json seems to be pulling dependencies for Ubuntu 20.04 (evident from URLs like https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64).
This discrepancy causes the installation of CUDA 10.2 to fail because the base image (for JetPack 4.6.x) is aligned with CUDA repositories for Ubuntu 18.04 only.

*/
