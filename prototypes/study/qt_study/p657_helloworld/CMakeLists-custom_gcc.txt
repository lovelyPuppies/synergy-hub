cmake_minimum_required(VERSION 3.19)
project(testQt LANGUAGES CXX)

# ‚òëÔ∏è If you use a custom GCC (e.g., GCC 14.2) instead of the Qt6 built-in GCC üìÖ 2024-12-29 01:45:42
#   , you must explicitly set the CMAKE_PREFIX_PATH to locate Qt6's CMake configuration files.
set(CMAKE_PREFIX_PATH "$ENV{HOME}/Qt/6.8.0/gcc_64/lib/cmake")

find_package(Qt6 6.5 REQUIRED COMPONENTS Core Widgets LinguistTools)

qt_standard_project_setup()

qt_add_executable(testQt
    WIN32 MACOSX_BUNDLE
    main.cpp
    CustomWidget.cpp
    CustomWidget.h
)

qt_add_translations(
    TARGETS testQt
    # TS_FILES testQt_ko_KR.ts
)

target_link_libraries(testQt
    PRIVATE
        Qt::Core
        Qt::Widgets
)

include(GNUInstallDirs)

install(TARGETS testQt
    BUNDLE  DESTINATION .
    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
)

qt_generate_deploy_app_script(
    TARGET testQt
    OUTPUT_SCRIPT deploy_script
    NO_UNSUPPORTED_PLATFORM_ERROR
)
install(SCRIPT ${deploy_script})

