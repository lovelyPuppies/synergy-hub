/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9.1 */

#ifndef PB_TEST_MESSAGE_PB_H_INCLUDED
#define PB_TEST_MESSAGE_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _test_Example {
    bool has_value;
    int32_t value;
} test_Example;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define test_Example_init_default                {false, 0}
#define test_Example_init_zero                   {false, 0}

/* Field tags (for use in manual encoding/decoding) */
#define test_Example_value_tag                   1

/* Struct field encoding specification for nanopb */
#define test_Example_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, INT32,    value,             1)
#define test_Example_CALLBACK NULL
#define test_Example_DEFAULT NULL

extern const pb_msgdesc_t test_Example_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define test_Example_fields &test_Example_msg

/* Maximum encoded size of messages (where known) */
#define TEST_MESSAGE_PB_H_MAX_SIZE               test_Example_size
#define test_Example_size                        11

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
