📰📰 [Project] LSP 사용해서 Rust로 LSP 만드는 프로젝트?.. 
  neovim 보다는 helix 가 좋아보이긴 하는데... 아직 제대로 지원되는 것이 없다. fish-lsp 라는 것을 사용해봣지만 빌드까지 과정이 불편하고 충돌발생.
  찾아봤는데 현재까지 존재하는 구현된 fish LSP 가 없음. https://microsoft.github.io/language-server-protocol/implementors/servers/ 📅 2025-02-23 22:16:42
📰 다음 목표를.. 시니어 개발자 모집 공고 조건에 만족하는 일을 해보자?
  https://www.wanted.co.kr/wd/229077
  https://www.wanted.co.kr/wd/257910
  - E-commerce 필수.
  - 도메인 주도 설계 & 개발
  - AWS 환경에서 서비스 운영
  - 대용량 서비스에 대한 경험이
  - 기존 시스템을 MSA 환경으로 전환한 경험이 있으신 분
  - 대용량 서비스 개발 또는 운영 경험이 있으신 분
  - 이벤트 드리븐 아키텍처에 대한 경험이 있으신 분


  volta install yarn ... 느림..
    # >> success: installed and set yarn@4.5.1 as default

    cd $LOCAL_SHARE
    git clone https://github.com/ndonfris/fish-lsp
    cd fish-lsp
    # Recommended Dependencies: yarn@1.22.22, node@21.7.1, fish@3.7.1 from https://github.com/ndonfris/fish-lsp/?tab=readme-ov-file#installation
    yarn --version
    volta install yarn@1.22.22 && yarn --version
    yarn install

    sudo ln -s (pwd)/bin/fish-lsp /usr/local/bin/fish-lsp
    fish-lsp complete > ~/.config/fish/completions/fish-lsp.fish
기업: <keyword>: <기업>
  (주)에이스웍스코리아 ; https://www.saramin.co.kr/zf_user/company-info/view-inner-recruit?csn=dTVOQVNSck9VR25ZVTcvWUN5eFBTUT09
    https://www.jobplanet.co.kr/companies/138066/reviews/%EC%97%90%EC%9D%B4%EC%8A%A4%EC%9B%8D%EC%8A%A4%EC%BD%94%EB%A6%AC%EC%95%84
  보스 반도체 ; https://www.saramin.co.kr/zf_user/company-info/view-inner-recruit?csn=OWRUeHhBbmJ6ZXpDdHdqRTRSYml6QT09
    https://www.saramin.co.kr/zf_user/jobs/relay/view?rec_idx=49574710&view_type=search
  유비쿼스 ; https://www.saramin.co.kr/zf_user/company-info/view-inner-recruit?csn=VW12WjJLMVFnVGNmUEtiQ3ZYcnptQT09
    식사 맛있다고 함, 연봉 괜찮다고 함, 복지 괜찮다고 함, 단 야근 매일 한다고 함.
    https://www.jobplanet.co.kr/companies/385314/reviews/%EC%9C%A0%EB%B9%84%EC%BF%BC%EC%8A%A4
  현보 ; 
  ➡️ 긴트 ; https://www.wanted.co.kr/wd/251991
  //
  [청주]
  --------------------
  옵트에이아이 ; https://www.saramin.co.kr/zf_user/company-info/view-inner-recruit?csn=R1NScnY5elFFU0Y4VjVWdlZYd0wrQT09
    https://www.jobplanet.co.kr/companies/410180/interviews/%EC%98%B5%ED%8A%B8%EC%97%90%EC%9D%B4%EC%95%84%EC%9D%B4

📰 smart_pkg_delivery .. 이어서 할 것.. 비동기..
  https://mariadb.com/docs/server/connect/programming-languages/cpp/sample-app/
  https://www.boost.org/doc/libs/develop/libs/redis/doc/html/index.html
  https://formulae.brew.sh/formula/redis
  https://raspberrytips.com/install-mariadb-raspberry-pi/
  https://www.boost.org/doc/libs/1_87_0/libs/redis/doc/html/index.html#autotoc_md1
  https://en.wiktionary.org/wiki/consign

📰 Cross compile... BUILD_SHARED_LIBS ON, CMAKE_EXE_LINKER_FLAGS -static
   CMake의 BUILD_SHARED_LIBS나 CMAKE_EXE_LINKER_FLAGS는 표준 라이브러리(예: libc, libstdc++)에만 영향을 미칩니다.
   실무에서는 기본적으로 동적 링크 사용.
📰⭕ STM32 -> Semihosting
  * 내가 이거를 아래처럼 설치해서 사용했엇는데
    brew install arm-none-eabi-gcc arm-none-eabi-gdb
    이거 두개를 대신 stm32 디버깅하는데 사용할 수 있는지 모르겟음.
      sudo apt install gcc-arm-none-eabi gdb-multiarch
    실제로 프로젝젝트 진행할 때 테스트 필요.
    dpkg -L gcc-arm-none-eabi | grep bin

  * TODO: brew install open-ocd   // Required for Semihosting? 📅 2025-02-23 23:30:29
    https://www.designnews.com/embedded-systems/how-to-debug-a-microcontroller-using-visual-studio-code-vs-code-
      from https://community.st.com/t5/stm32-vscode-extension-mcus/debugging-with-openocd-and-stlink-v3-in-vscode/td-p/612674
    
    open-ocd: On-chip debugging, in-system programming, and boundary-scan testing.

    What is OpenOCD?
      - OpenOCD (Open On-Chip Debugger) is an open-source debugging tool for embedded systems.
      - It serves as a GDB server, allowing remote debugging via GDB.
      - Used for programming, debugging, and testing microcontrollers and embedded processors.
      - Supports various hardware debugging interfaces, including:
        - JTAG (Joint Test Action Group) 
        - SWD (Serial Wire Debug)
        - ST-LINK (STM32 debugging and flashing tool)
        - CMSIS-DAP (ARM standard debug interface)

    Debugging STM32 with OpenOCD:
      - To debug an STM32 board using OpenOCD, a hardware debugging interface such as ST-LINK or SWD is required.
      - For STM32F411RE Nucleo boards, which have a built-in ST-LINK module, no additional debugging hardware or pin connections are needed.
      - However, for standalone STM32F411RE MCUs (not on a Nucleo board), an external ST-LINK module and SWD pin connections are required.

    STM32CubeIDE primarily uses the ST-LINK GDB Server:
      - Official GDB server provided by STMicroelectronics.
      - Communicates directly with STM32 boards via ST-LINK.
      - Allows debugging STM32 without OpenOCD.

    However, OpenOCD is required for using Semihosting in VSCode.

    %shell> openocd -f interface/stlink.cfg -f target/stm32f4x.cfg -c "monitor arm semihosting enable"
    이후, launch.json
      {
        "name": "LLDB Debug with OpenOCD",
        "type": "lldb-dap",
        "request": "attach",
        "program": "${workspaceFolder}/build/your_firmware.elf",
        "gdb-remote-port": 3333,
        "gdb-remote-hostname": "localhost"
      }

    STM32 CubeMX
    https://formulae.brew.sh/formula/open-ocd
  * 윈도우용 임베디드 운영체제
    Windows CE(Embedded Compact)-> 후속작 -> Windows for IoT
    
  * STM32CubeMX에서 지원하는 Wi-Fi 모듈 ❓ 맞는지 확인 필요.
    STM32CubeMX에서 공식적으로 지원하는 Wi-Fi 모듈은 STMicroelectronics 자체 Wi-Fi 모듈입니다.
    예를 들면:
      ISM43362-M3G-L44 (Inventek Systems)
      ISM43340-M4G-L44
      SPWF01SA (ST 자체 Wi-Fi 모듈)
    ESP8266 은 없어서 직접 만들어야 한다 .
  * Alphine Linux on Raspberry Pi 4B ... with musl... https://wiki.alpinelinux.org/wiki/Alpine_on_ARM
    🆚 Alphine Linux (경량), Yocto (완전한 커스터마이징)
    ⚓ gdbserver ; https://en.wikipedia.org/wiki/Gdbserver

    ⚓📎 Musl ; https://en.wikipedia.org/wiki/Musl
      Musl is a C standard library intended for operating systems based on the Linux kernel, released under the MIT License
      https://musl.libc.org/
    ⚓📎 Newlib ; https://en.wikipedia.org/wiki/Newlib
      http://www.sourceware.org/newlib/
    ⚓ picolibc ; https://github.com/picolibc/picolibc/tree/main
      Picolibc is library offering standard C library APIs that targets small embedded systems with limited RAM.
      ❗ Picolibc was formed by blending code from 🪱 Newlib and 🪱 AVR Libc.
      https://keithp.com/picolibc/
      https://chromium.googlesource.com/chromiumos/third_party/zephyr/picolibc/+/b92edfda8ac6853772d87cadaeeeaa21b78609b6/README.md
      
      # Documentation
        ⚓ Building Picolibc ; https://github.com/picolibc/picolibc/blob/main/doc/build.md
        ⚓ Using Picolibc ; https://github.com/picolibc/picolibc/blob/main/doc/using.md
          gcc --specs=picolibc.specs -c foo.c
    ⚓ avr-libc ; https://github.com/avrdudes/avr-libc
📰 binfmt_misc  .. 정의 다시 보고 정리하기 (toolchain.txt 에)
  https://github.com/lovelyPuppies/QTonRaspberryPi
    https://en.wikipedia.org/wiki/Binfmt_misc
    https://github.com/multiarch/qemu-user-static
      ; 이 프로젝트는 QEMU를 컨테이너 내부에서도 사용할 수 있도록 하고, binfmt_misc를 설정하여 다중 아키텍처 실행을 지원함.
      컨테이너 내부에서만 적용되는 것이 아니라, 이 명령은 호스트 커널의 binfmt_misc 설정을 직접 수정합니다.
      설정이 완료되면, 해당 컨테이너는 종료되어도 호스트 시스템에서 다중 아키텍처 실행이 가능합니다.

    binfmt_misc란?
      binfmt_misc는 Linux 커널의 기능으로, 파일 포맷을 기반으로 특정 실행 파일을 처리할 해석기를 지정할 수 있습니다.
        예: ARM64 바이너리를 실행하면 자동으로 QEMU를 호출하여 실행.
      어떻게 동작하는가?
        바이너리를 실행하면, 커널은 해당 파일의 **헤더(파일의 첫 몇 바이트)**를 읽습니다.
        binfmt_misc에 등록된 매직 넘버(특정 헤더 값)와 비교하여, 어떤 해석기를 사용할지 결정합니다.
        만약 QEMU가 등록되어 있다면, 커널은 해당 바이너리를 QEMU를 통해 실행합니다.
    예를 들어, 리눅스에서 Windows 실행 파일(.exe)을 실행하거나, ARM 바이너리를 x86에서 실행할 때 사용됨.
    
  binfmt_misc 활성화 확인 방법
    ❯ cat /proc/sys/fs/binfmt_misc/status
    enabled
    ❯ ls /proc/sys/fs/binfmt_misc
    llvm-17-runtime.binfmt  llvm-19-runtime.binfmt  python3.12  register  status
    ❯ readelf -h study/cpp_study/vcpkg_study/build/debug-aarch64-linux-gnu-clang/fmt_example

    ELF Header:
      Magic:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00 
      Class:                             ELF64
      Data:                              2's complement, little endian
      Version:                           1 (current)
      OS/ABI:                            UNIX - System V
      ABI Version:                       0
      Type:                              DYN (Position-Independent Executable file)
      Machine:                           AArch64
      Version:                           0x1
      Entry point address:               0x5d2c0
      Start of program headers:          64 (bytes into file)
      Start of section headers:          7044040 (bytes into file)
      Flags:                             0x0
      Size of this header:               64 (bytes)
      Size of program headers:           56 (bytes)
      Number of program headers:         12
      Size of section headers:           64 (bytes)
      Number of section headers:         44
      Section header string table index: 42

    ❯ hexyl study/cpp_study/vcpkg_study/build/debug-aarch64-linux-gnu-clang/fmt_example | head -n 2
    ┌────────┬─────────────────────────┬─────────────────────────┬────────┬────────┐
    │00000000│ 7f 45 4c 46 02 01 01 00 ┊ 00 00 00 00 00 00 00 00 │•ELF•••⋄┊⋄⋄⋄⋄⋄⋄⋄⋄│

  
  🧮 %shell> rustc --print target-list
    https://llvm.org/doxygen/classllvm_1_1Triple.html
    

자동차용: 유라코퍼레이션 ; https://www.saramin.co.kr/zf_user/company-info/view-inner-recruit?csn=ei9KYXFOajFpSzFiSFBhRDdnZForZz09
📰❗ 전기 기사
  전기 신호를 증폭한다는 것은 전압을 증폭하는 것을 의미
  과전류를 견디려면
    - Capacitor (축전기)
      전류의 급격한 변화(서지)를 완화하거나 전류를 저장했다가 공급.
    - Fuse (퓨즈)
      과전류 발생 시 회로를 단락(끊어서) 보호.
    - Resistor (저항)
      전류의 흐름을 제한해 과전류를 예방.
    - Circuit Breaker (회로 차단기)
      일정 전류를 초과하면 자동으로 회로를 차단.

  과전압을 견디려면
    - Regulator (전압 레귤레이터)
      입력 전압을 안정된 일정 전압으로 조절.
    - Zener Diode (제너 다이오드)
      특정 전압 이상에서 전류를 흘려 과전압을 보호.
    - MOV (Metal Oxide Varistor, 배리스터)
      순간적인 고전압(서지)을 흡수해 회로를 보호.
    - Surge Protector (서지 보호기)
      낙뢰나 전력 스파이크 등의 고전압 충격을 차단.
    - Transformer (트랜스, 변압기)
      전압을 올리거나 낮추어 필요한 전압만 공급.


📰 Aumtoatmino
  📰 USB imaging tool
    https://github.com/pop-os/popsicle
    Popsicle is recommended over other tools like Etcher, Rufus, Ventoy, and dd
    , because of its ability to perform parallel flashing, making it highly efficient for creating multiple USB drives simultaneously

  Fish script..  
    help2man?
    // manpage 자동 생성 프로그램?

📰 PPT 
  Howto: 그룹화
    Drag elements
    Right click - Arrange - ✔️ Group

    
근데 HSE, LSE 에 둘 다 설정이 있던데? 둘 각 Crystal/Ceramic Resonator 로 설젛아면 뭐가 달라져?
학원 미니 프로젝트 아이디어
  ❓
    변경사항:
      STM32 1---버튼입력에 따른 명령 전송 via bluetooth----  STM32 2
      STM32 2 ---적재율 로그 전송. --- via wifi--- 라즈베리파이로

  Peripherals
    - UltraSnoic Sensor
      HC-SR-04
    - Servo Motor
      SG-90
    - Wifi Module
      ESP-01S ESP8266  // 3.3V
      https://www.espressif.com/sites/default/files/documentation/esp8266-technical_reference_en.pdf
    - Bluetooth Module
      HC-06     // 3.3V
`

  PA8: TIM1_CH1
    초음파 센서 Echo 핀에 물리적으로 연결, Rising Edge 처리.
  PA9: TIM1_CH2
    PA8에서 발생한 신호의 Falling Edge 처리(물리적 연결 불필요).
  PA10: GPIO_Output
    초음파 센서 Trigger
  PB7: TIM4_CH2

  PC6: USART6_RX

  Matter:
    Matter는 스마트 홈 기기 간의 호환성을 높이기 위해 설계된 오픈 소스 통신 프로토콜입니다.
    Apple, Google, Amazon, 그리고 Zigbee Alliance 등이 협력하여 만든 표준으로, 스마트 홈의 다양한 기기가 서로 원활히 연결되고 제어될 수 있도록 합니다.
    Matter를 사용하면 하나의 통합된 스마트 홈 환경에서 다양한 제조사의 기기를 서로 호환하며 제어할 수 있습니다.
  Zigbee:
    Zigbee는 저전력 무선 메시 네트워크 프로토콜로, 주로 IoT 기기 간의 통신을 위해 설계되었습니다.
    특히 저전력으로 장거리 통신이 가능하여 배터리로 구동되는 소형 IoT 장치에 적합합니다.
    Zigbee는 별도의 허브를 통해 다양한 기기와 연결할 수 있으며, 특히 조명, 센서, 스마트 잠금장치 등에서 널리 사용됩니다.


  ## 3. 스마트 쓰레기통 관리 시스템
    https://www.mermaidchart.com/app/projects/638a6e76-1714-4b3d-93c1-a0fa3196a871/diagrams/658593b0-9340-48f1-8359-cab46641bed1/version/v0.1/edit



    ```
    flowchart TD
        %% Declaration with styling

        subgraph "User Access Group"
            MobileApp["TCP Connector (Mobile App)"]:::user
            WebBrowser["Web Browser"]:::user
        end

        subgraph "Raspberry Pi Control Group"
            RaspberryPi["Raspberry Pi"]:::pi
            APM["Apache, MariaDB, PHP"]:::software
        end

        subgraph "Smart Trash Bin Unit"
          subgraph "External STM32 Control Group"
              ButtonModule["Button Module (Send Command)"]:::sensor
              BluetoothModuleExt["Bluetooth Module (External)"]:::software
          end
          subgraph "Internal STM32 Control Group"
            InternalSTM32["Internal STM32"]:::internal
            UltrasonicSensor["Ultrasonic Sensor (Load Measurement)"]:::sensor
            MotorControl["Motor Control Module"]:::actuator
            SubMotorControl["Sub Motor Control (Lid Open/Close)"]:::actuator
            LCD["LCD Display (Show Load Data)"]:::display
            BluetoothModuleInt["Bluetooth Module (Internal)"]:::software
            WiFiModule["WiFi Module"]:::software
          end
        end

        %% Processes
        ButtonModule -->|"Button Press (Send Command)"| BluetoothModuleExt:::command
        BluetoothModuleExt -->|"Transmit Command (via Bluetooth)"| RaspberryPi:::command
        RaspberryPi -->|"Forward Command to Internal STM32"| BluetoothModuleInt:::data
        BluetoothModuleInt -->|"Receive Command"| InternalSTM32:::data

        InternalSTM32 -->|"Load Level Measurement"| UltrasonicSensor:::sensor
        UltrasonicSensor -->|"Load Data"| InternalSTM32:::data
        InternalSTM32 -->|"Show Load Data"| LCD:::display
        InternalSTM32 -->|"Send Load Data"| WiFiModule:::data
        WiFiModule -->|"Send Load Data"| RaspberryPi:::data

        InternalSTM32 -->|"Lid Open/Close"| SubMotorControl:::command

        RaspberryPi -->|"Log Load Data and Commands"| APM:::log
        WebBrowser -->|"Access Logs and Statistics"| APM:::log

        %% Garbage Bag Sealing Command Group
        MobileApp -. "Garbage Bag Sealing Command" .-> APM
        APM -. "Garbage Bag Sealing Command" .-> RaspberryPi
        RaspberryPi -. "Garbage Bag Sealing Command" .-> InternalSTM32
        InternalSTM32 -->|"Garbage Bag Sealing Command"| MotorControl:::command

        %% Node and Edge Styling
        classDef external fill:#B3D9FF,stroke:#1C6EA4,stroke-width:2px;
        classDef internal fill:#C3FDB8,stroke:#4CAF50,stroke-width:2px;
        classDef pi fill:#FFE4B5,stroke:#FF8C00,stroke-width:2px;
        classDef user fill:#FFD1DC,stroke:#FF69B4,stroke-width:2px;
        classDef sensor fill:#F0E68C,stroke:#DAA520,stroke-width:1.5px;
        classDef actuator fill:#D8BFD8,stroke:#9932CC,stroke-width:1.5px;
        classDef software fill:#E0FFFF,stroke:#20B2AA,stroke-width:2px;
        classDef command stroke-dasharray: 5 5,stroke:#000,stroke-width:2px;
        classDef data stroke:#4682B4,stroke-width:2px;
        classDef log fill:#FFFACD,stroke:#FFD700,stroke-width:2px;
        classDef display fill:#E6E6FA,stroke:#8A2BE2,stroke-width:2px;

    ```

  - 목적**: 쓰레기통이 가득 차면
   알려주고, 쓰레기통이 열리고 닫히는 것을 자동화하여 위생적으로 관리하는 시스템.
  - **Architecture**:
    - **아두이노**: 초음파 센서로 쓰레기통 내부의 높이를 측정하여 가득 찼는지 여부 확인.
    - **라즈베리 파이**: MySQL 서버에 쓰레기통 상태 기록 및 관리, 알림 전송.
    - **STM32**: 서보 모터로 쓰레기통 뚜껑 자동 개폐.
  - **특징**: 쓰레기통이 일정 수준 이상 찼을 때 알림 전송. 쓰레기통에 손을 대지 않고 자동으로 열고 닫는 기능.
  - **Matter/Zigbee 적용 가능**: Zigbee로 쓰레기통 상태를 지속적으로 모니터링하거나 Matter를 통해 다른 스마트 홈 기기와 연동하여 알림 제공.


  STM 32 Ultrasnoic Sensor 
    ㅡ (via Bluetooth) -> "Waste Bin Load Percentage" message to Raspberry pi server (via socket)
    ㅡ (via I2C) -> "Waste Bin Load Percentage" message to LCD
    ㅡ (via Serial) -> via Submotor, open/close Trash Bin Lid
    ㅡ (via Serial) -> via Motor, tying the Trash Bag

  ---
  
📰 ❔  STM 으로 알람시계 만드는거 하겟다.. 시험.. servo.. datetime->min 코드 보기

📰⌨️ https://marketplace.visualstudio.com/items?itemName=smcpeak.default-keys-windows
  다른거 새로 맞춰야 함.. 확인해보기

📰 Interview ...
  Kernel level
    File System
      Block Device 🆚 Character Device..
        Buufer Cache 유무 차이
    Process Management
  
📰 Yocto, ROS2 as Docker container
  Yocto는 Incremental Build(증분 빌드)를 지원합니다. 변경 사항이 local.conf에만 영향을 미치므로, 기본적으로 변경된 설정에 따라 필요한 부분만 빌드합니다. 

  https://vmsoftwarehouse.com/yocto-docker-7-practices-for-linux-development

  📁📰 Directory 구성?

    $HOME/repos/yocto_project/
    ├── sources/
    │   ├── poky/                  # Poky source (shared)
    │   ├── meta-openembedded/     # OpenEmbedded layers (shared)
    │   ├── meta-raspberrypi/      # Layer for Raspberry Pi (shared)
    │   ├── meta-tegra/            # Layer for Nvidia Jetson Nano (shared)
    │   └── meta-custom/           # Custom layer (shared)
    ├── build-raspberrypi4/        # Build directory for Raspberry Pi 4
    │   └── conf/                  # Target-specific configuration files
    ├── build-raspberrypi3/        # Build directory for Raspberry Pi 3
    │   └── conf/                  # Target-specific configuration files
    ├── build-jetson-nano/         # Build directory for Nvidia Jetson Nano
    │   └── conf/                  # Target-specific configuration files
    └── downloads/                 # Downloaded sources (shared)  

📰 다음부터 ~ 할 때
  배포용 서비스 OS 에 설치: mraidb, php >>> 이거를 home manager 로 관리해볼까 (다음부터 ㅇㅇ)  >>> tech_stack 에 기록하기. 배포용 서비스에 사용하도록.
  
📰 내 SSD  1개 인식 안됨.. 본체 뜯어봐야함.. 해야함..
📰 Crawling
  https://docs.gimp.org/2.10/en/
    dt, dd, dl
  https://sourceware.org/glibc/manual/latest/html_mono/libc.html

📰 [Device] Raspberry Pi
  Managed by nix Home manager ; https://nixos.wiki/wiki/Nix_on_ARM
    ⚓ #️⃣ Screen share with VNC ; https://www.raspberrypi.com/documentation/computers/remote-access.html#screen-share-with-vnc
      https://tigervnc.org/
      sudo apt install -y tigervnc-viewer
📰⚓⭕ Cloud-init
  Infrasturcture as a Code

📰 Rust

  ⭕ WebAssembly(Wasm)와 같은 기술이 크로스 플랫폼 개발에서 주목받고 있습니다. Wasm은 다양한 프로그래밍 언어로 작성된 코드를 저수준 바이트코드로 컴파일하여 웹 브라우저에서 실행할 수 있게 해주는 기술로, 크로스 플랫폼의 미래로 부상하고 있습니다. 
    네, WebAssembly(Wasm)는 Rust로 작성된 프론트엔드와 밀접하게 연관되어 있습니다. Rust는 WebAssembly 지원이 뛰어나서, Rust로 작성된 코드를 브라우저에서 실행 가능한 WebAssembly 바이트코드로 컴파일하는 것이 최근 뜨고 있는 트렌드 중 하나입니다.
    https://github.com/rustwasm/wasm-bindgen
    https://github.com/rustwasm/wasm-pack

  LLVM 기반 컴파일러:
    Clang과 Rust는 모두 LLVM 백엔드를 사용합니다.
    Rust 컴파일러인 rustc는 Rust 소스를 LLVM 중간 표현(IR)로 변환한 뒤
      , LLVM을 통해 최종 바이너리를 생성합니다.
    Clang은 C/C++의 LLVM 프런트엔드 역할을 하기 때문에, LLVM을 공유한다는 점에서 공통점이 있습니다.


  https://pmnxis.github.io/posts/my_first_commerical_rust_embedded_product_1/

  📰 https://code.visualstudio.com/docs/languages/rust

  ## Install cargo-binstall plugin
  cargo install cargo-binstall
  # Install 'cargo-binstall', a plugin for 'cargo' that allows installing pre-built binaries of Rust packages.
  # This is faster than compiling from source, useful for packages like 'watchexec-cli'.

  ⚓ Cargo ; https://doc.rust-lang.org/cargo/index.html
    ⚓🔰 Installation ; https://doc.rust-lang.org/cargo/getting-started/installation.html
      ❌ %shell> curl https://sh.rustup.rs -sSf | sh
        # It seems that It performs "set -Ux ...path ..." in installation.
      ➡️ Install as homebrew privatly.
      >>
        Rustup metadata and toolchains will be installed into the Rustup
        home directory, located at:

          $HOME/.rustup

        This can be modified with the RUSTUP_HOME environmen노t variable.

        The Cargo home directory is located at:

          $HOME/.cargo

        This can be modified with the CARGO_HOME environment variable.

        The cargo, rustc, rustup and other commands will be added to
        Cargo's bin directory, located at:

          $HOME/.cargo/bin

        This path will then be added to your PATH environment variable by
        modifying the profile files located at:

          $HOME/.profile
          $HOME/.bashrc
          $HOME/.config/fish/conf.d/rustup.fish

        You can uninstall at any time with rustup self uninstall and
        these changes will be reverted.

  https://www.rust-lang.org/tools/install
    Uninstall Rust
      If at any point you would like to uninstall Rust, you can run rustup self uninstall. We'll miss you though!
  ⚓ Cargo 🔪 binstall ; https://github.com/cargo-bins/cargo-binstall
    cargo install cargo-binstall
  ⚓ Watchexec ; https://github.com/watchexec/watchexec
    🚨 Issues
      🚨 Issue: Bug 📰; when modify, It captures multiple times acording to text editor 📅 2024-11-13 21:01:18
        %shell> watchexec --emit-events-to=json-stdio --only-emit-events
      🚨 Issue: Bug 📰; when event capture and parse path, it can not pass to xargs 📅 2024-11-13 21:30:50
        watchexec -e fish --watch prototypes/_initialization/ubuntu/howto --fs-events create --emit-events-to=json-stdio echo | jq -r '.tags[] | select(.kind == "path") | .absolute' | xargs chmod u+x
    watchexec is a simple, standalone tool that watches a path and runs a command whenever it detects modifications.
    ⚓ Install ; https://github.com/watchexec/watchexec/blob/main/doc/packages.md
      cargo binstall watchexec-cli

  ⚓🚀 hexyl ; https://github.com/sharkdp/hexyl
    alternative of "od".?? 맞나? 필요할 때 설치.
📰 smaba nfs 설정.. 정확히는 init_samba 를 init_smaba_or_nfs 로 ...
📰 Raspberry pi installation automation
  =================
  Raspberry pi wifi 사용방법
    GNU nano 7.2                                                     /etc/wpa_supplicant/wpa_supplicant.conf                                                               
  ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
  update_config=1


  set target_dir $HOME/.local/share/raspberry-pi-imager
    mkdir -p $target_dir
    wget -P $target_dir https://downloads.raspberrypi.org/imager/imager_latest_amd64.deb
    sudo dpkg -i $target_dir/imager_latest_amd64.deb
    sudo apt install -y -f
    sudo rpi-imager
    : '
    General
      ✔️ Set hostname: pi19
      ✔️ Set username and pasword
        Username: pi
        Password: raspberry
      ✔️ Configure wirless LAN
        SSID: embA
        Password: embA1234
        Wirless LAN contry: GB
    Service
      ✔️ Advanced options - Enable SSH
    '
    
    ## 🆚 Example of why "ping pi19" fails on a general switch setup (like the ipTIME H605):
    #   The ipTIME H605 is a switching hub designed by EFM Networks. As a simple switch without routing functionality, it does not perform any DNS or hostname resolution.
    #   In this setup, "ping pi19" will fail because standard ping requests rely on a DNS server to convert hostnames to IP addresses
    #   , and no such DNS service is provided by the H605.
    #   "ping pi19.local" succeeds because it uses mDNS (Multicast DNS) for local network resolution, allowing .local addresses (e.g., "pi19.local") to be found without a DNS server
    #   , making it compatible with devices like Raspberry Pi on the local network.
    # Check network of Raspberry pi in local comptuer
    ping pi19.local

    # Connect pi computer by ssh
    ssh pi@pi19.local

    # Activate VNC (Virtual Network Computing) server in non-interactive mode
    # `nonint` enables non-interactive mode, allowing raspi-config to run without user prompts.
    # `do_vnc 0` specifically enables the VNC server (0 = enable, 1 = disable).
    sudo raspi-config nonint do_vnc 0

    ## 🆚 Note the difference between "remote-viewer" and "TigerVNC" regarding certificate handling.
    #   Both remote-viewer and TigerVNC are standard VNC clients, but remote-viewer cannot connect to "vnc://pi19.local:5900"
    #   because it lacks the ability to handle untrusted certificates. This limitation prevents remote-viewer from connecting to servers like RealVNC
    #   , which uses proprietary security protocols requiring certificate trust validation.
    #   TigerVNC, on the other hand, allows users to bypass untrusted certificate warnings, making it compatible with RealVNC.
    #   in remote-viewer: "Error: Unable to connect to the graphic server ... : The certificate is not trusted"

    sudo apt install -y tigervnc-viewer
    # Run this command and input id "pi" and password "raspberry"
    mkdir -p $HOME/logs

    nohup vncviewer pi19.local:5900 > $HOME/logs/vnc_pi19_local.log 2>&1 &


    Wifi control

    >>> check wifi status
      sudo iw wlan0 link
Sound
  3DIO
Drawing
  ⚓ Compositing ;https://en.wikipedia.org/wiki/Compositing  
    # Contents
      ⚓ Alpha compositing | Alpha blending ; https://en.wikipedia.org/wiki/Alpha_compositing


  XP-Pen Driver ... Gimp 에서 인식시키기
    * Deco LW:
      https://www.xp-pen.com/download/deco-lw.html
      ... download .deb file
      %shell> sudo dpkg -i XPPENLinux3.4.9-240607.deb
Compiler
  https://en.wikipedia.org/wiki/MLIR_(software)
  https://marketplace.visualstudio.com/items?itemName=llvm-vs-code-extensions.vscode-mlir
Python
  ⭕ mypy for static type checking
  ⭕ type-enforced for debug https://pypi.org/project/type-enforced/
  ⭕ MonkeyType for documentation ; 
  ⭕ types-protobuf with protobuf ; https://pypi.org/project/types-protobuf/
  pysides6 alternative of pyqt6
Machine Learning
  에이다 부스트 학습; 가능한 모든 커널을 가지고 이미지 전체를 스캔하여 하르 특징을 계산한다?
  https://docs.ultralytics.com/models/yolo-nas/
  MediaPipe
    MediaPipe API
      # Python
        # mp
          ⚓ Overview ; https://ai.google.dev/edge/api/mediapipe/python/mp

    https://github.com/google-ai-edge/mediapipe
      # Contents
        🔏 License: Apahce License 2.0

        These libraries and resources provide the core functionality for each MediaPipe Solution:
          🪱 MediaPipe Tasks: Cross-platform APIs and libraries for deploying solutions. Learn more.
          🪱 MediaPipe models: Pre-trained, ready-to-run models for use with each solution.
        These tools let you customize and evaluate solutions:
          🪱 MediaPipe Model Maker: Customize models for solutions with your data. Learn more.
          🪱 MediaPipe Studio: Visualize, evaluate, and benchmark solutions in your browser. Learn more.

      Fash Mesh ; https://github.com/google-ai-edge/mediapipe/blob/master/docs/solutions/face_mesh.md

    https://ai.google.dev/edge/mediapipe/solutions/guide
      https://ai.google.dev/edge/mediapipe/solutions/vision/face_landmarker
        # Models
          Face detection model, Face mesh model, Blendshape prediction model

    https://mediapipe-studio.webapps.google.com/demo/face_landmarker
      
    https://en.wikipedia.org/wiki/Facial_Action_Coding_System
      ... blendshape scores (coefficients representing facial expression) from https://ai.google.dev/edge/mediapipe/solutions/vision/face_landmarker
      https://mediapipe-studio.webapps.google.com/home
[📰 Interview]
  🆚 halt vs poweroff
    halt: 정지 상태로 만듦. 커널과 운영 체제를 종료한 뒤 하드웨어는 계속 켜진 상태로 남아 있는다.


Ubuntu Organizing... (additional information is needed)
  ⚓ GRUB(GRand Unified Bootloader)
    /boot/grub/grub.cfg in Ubuntu
  mount option
    0: Dump backup. 0 is not dump
    0: fcsk (File System check). 0s is not check
  ❔ Hard link, Soft link
    https://en.wikipedia.org/wiki/Hard_link
    https://en.wikipedia.org/wiki/Symbolic_link

Software Design Specification
  Software Design Design Method: -
  Hardware Constraints: -
Software 🔪 ChatGPT tip
  의견에는 구체적인 사례가 있는지 확인해볼 것.

**** Usecase, Class Diagram, Activity diagram
  유스케이스 다이어그램: 시스템과 사용자 간 상호작용을 설명하는 고수준 개요.
  활동 다이어그램: 유스케이스나 프로세스의 세부 흐름.
  상태 다이어그램: 객체의 상태 전이.
  시퀀스 다이어그램: 객체 간의 메시지 흐름.
  클래스 다이어그램: 시스템의 구조와 관계.

  추천 순서:
    유스케이스 다이어그램: 전체 시스템의 개요를 먼저 설명.
    활동 다이어그램: 주요 프로세스의 세부 흐름을 보여줌.
    시퀀스 다이어그램: 상호작용 흐름을 시각화.
    클래스 다이어그램: 시스템의 구조를 설명. 정적 구조.
    상태 다이어그램: 객체의 동적 상태 변화를 설명.

  기술문서는 서술형 X. 수학적으로.


BlazeFace (short-range)
  스마트폰 카메라나 웹캠에서 셀카 같은 이미지에서 하나 또는 여러 개의 얼굴을 감지하기 위한 가벼운 모델입니다. 이 모델은 단거리에서 전면 카메라 이미지에 최적화되어 있습니다. 이 모델 아키텍처는 사용자 지정 인코더가 있는 Single Shot Detector(SSD) 합성곱 네트워크 기술을 사용합니다. 자세한 내용은 Single Shot MultiBox Detector에 대한 연구 논문을 참조하세요.

PPT...
  이런 경우, 프로젝트의 기획 배경, 기술적인 설명, 개인적인 동기 순서로 나열하면 더 자연스럽게 흐름을 정리할 수 있습니다. 수정된 버전은 다음과 같습니다:

GaussianBlur, Sobel filter, 이진화, ConvexHull, Edge Area, Mask, HSV 색 처리.. 엣지 검출.. sobel maskvs canny edge, 캘리브레이션
  ...
🪱
  netpbm
    PNM (Portable AnyMap)
      PBM (Portable Bitmap)
      PGM (Portable Graymap)
      PPM (Portable Pixmap)
    pnmquant: PNM Quantization
      # pnmquant는 Netpbm 포맷(PNM) 이미지를 팔레트 색상 수를 줄이는(Quantization) 도구입니다
    pnmraw: PNM No raw.


  
📰 카카오톡 API.. authorization code..
📰 zoom-in, zoom-out 기능. 자동 추적 기능 만들기.. smooth 하게 움직이도록?
https://en.wikipedia.org/wiki/Docent
청년 안심주택 임대보증금지원 ; https://soco.seoul.go.kr/youth/main/contents.do?menuNo=400022
복지앱
상조보험




📰📰📰📰📰 >>>>>>>>>>
  >>>>>>>>> 음성으로부터 감정 분석하는 기술 필요...: 예: Cogito, Beyond Verbval, Affectiva, Nexmo (Vonage API)

  니다 -> X. 명사형으로 끝내는 것이 나은 듯?
  개인화된>> 제거
  자연어 처리(NLP) ..  해야 할듯. 생성형 AI 가 다 해 주는거아닌가? 문장으로부터 키워드를 추출해서 이미지를 생성하는 것이 아니라 동적인 이미지를 생성해야 해서.
  >> 가독성있게 추려달라...
  프라이빗 클라우드..

  디지털 앨범은 전통적인 사진첩을 디지털화한 것으로, 사용자들이 저장한 사진, 영상, 텍스트 기록 등을 한 곳에 모아 쉽게 관리할 수 있는 시스템입니다. 이 앨범은 사용자들이 자신만의 소중한 순간을 정리하고 언제든지 다시 확인할 수 있는 공간을 제공합니다. 특히 이 서비스에서는 음성 기록과 이미지, 위치 정보 등이 통합되어 기록되기 때문에, 이러한 데이터를 시각적으로 정리해주는 개인 맞춤형 기록 보관소 역할을 합니다.


====================================
AL/DL Momentu
  인텔 가우디 사피온??

자동차가.. 매우 보수적인 집단이었다..
  중국- BYD 체리, 그레이트볼?.. 자동ㅈ차 나오는주기가 2년ㄷㄷ?
전기차는.. 바퀴를 돌리는 동력이 화석기관에서 오냐 동력기관에서 오냐..
  오히려 하이브리드가 더 나을  수 있다?>
  iCQA? GQ 센서?..로우레벨 드라이버 경험해보는 것이 좋다.
  커널쪽을 좀 파봐라..
인텔이 서버쪽은강했는데 엣지가 약해서.. 엣지 분야를 개발중이다?
  Hands-on 을 같이하면서 써보는 것이 목표.



평서형 종결어미
해라체 (격식 반말, 평서형 다체)

Imagent Large scale Visual Recognition challenge. ILSVRC
  사람기준 5%.. 2015년 ResNet, GoogleNet-v4, SENet.. 오차율 계쏙 줄어듬..


딥러닝과 연역적인 방법이 다르다.
  딥러닝은.. 데이터셋 학습이 필요.
openvino.. pytorch 에서도 extension 쓸 수 있닫고 한다. 
  대신 성능 90/100%

AI Growth.
AI Products
  항만.. 불법ㅇ으로 들어오는 외노자 관리?
  LG energy solution, Hyundai, Hanwha, 롯데, 현대중공업, 네이버, View the Invisible, Know the Unknown (VUNO?)
  🚣 SAMSUNG Medison, DELL, Lottel, EMARt, Beart Lobotics, 신한은행, LG Energy Solution
    SAMSUNG Medison 가 가장 많이 일했다고 한다.
    NVIDIA 가 2년 보증이라서... intel 이랑 많이 일햇나?..
    애기..에게 뭔가 판단할 떄 사용?? 병원에서 쓰는거라 Watt 를 많이 못쓴다고 한다. 
    병원에서 기기들이 전력을 많이쓰면 문제가 생긴다. 저전력에서 구동가능한 것이 필요해서.. 인텔에서 굉장히 성공적인 케이스로 분류한다고 함.
    OpenVino - Intel
  완전 고성능은 NVIDIA, 중간 성능 기능으로 OpenVINO 가 적하다고 한다.
  >>>>> 면접볼때마다 여기에서는 다른 것을 할 수 있다 어필할 정도로. 공부해야 할듯.
AI 는 자연으로부터 영감을 많이 받았다고 한다.
삐삐삐-차량 소리.. 박쥐의 초음파..로..부터 영감을 받았다.
사이드?..어쩌구 저쩌구는 사막뱀의 열추적? 으로부터 영감을 바았다.
❓ 세임펜? 사진?을 집으면 어떤 동물인지 말해주는 제품?
  펫나우"와 같은 AI 기반 동물 인식 기술을 가리키는 것
주차관리시스템 ...
🆚 텐서플로우, pytorch 언제사용하나 물어볼가

❓ 면접.. 그거 지금 있는데 --> 지금 그럼 회사는 어떤 시스템을 사용하고 어떤 네트웤을 쓰고 계시나요?
  그 모델 같은 경우는 이런 모델은 낮춘다면 .. time-critical 하지 않아서 FPS 는 조금 떨어지겟지만, .. 어쩌구.. 

Image segementation
  설명: positioning 판단하죠? 사람 영역 이렇게 판단하죠?
OCR


인텔 코리아 곽우영
  CPG :Communication Product Group? 
  인텔 모바일, 타블릿.. 하는 조직

반도체: conductor, insulator 의 중간 물질..
  모든 가전제품에 들어가는..
  원자재: 갈륨, 실리콘.. ..

Indstur

World=changing Technology. 
  -- 
  Diriving Product Leadership


>>>>>> [Intel] Lunar Lake - AI PC
  On-Device.. NPU 자체가 없었다.
올해부터 나오는 PC는 On-Device 라고 명칭한다고 한다. NPU 탑재.
  그 중 Lunar Lake
  CPU, GPU, NPU 가 함께 내장된다는듯.
    HP GPU? LNC?

  45 TOPS 가 넘어야 On-Device 라고 한다고 한다.

  🪱 Intel - 포베로스는 칩렛 구조의 3D 반도체 적층 기술이다

  Lunar Lake - 🪱 MOP package (Memory on Package)
    Foveros
  
  * Ultimate Thin& Light Systems
    - Detachables
    - Premium Fanless Latops
    - Premium Modern T&L Latops
  ?? LNL Archiecture
  >>>> ❔ Lunar Lake Architecture

LPDRR5x x64, LPDRR6x x64
SoC 도식화된 그림?
AEP
  주로 인텔의 Optane DC Persistent Memory 기술과 관련된 용어로, Apache Pass라는 코드명을 가지고 있는 Intel's Optane DC Persistent Memory (AEP: Apache Pass)
System on a chip (SoC) ; System on a chip

* Motherboard. 앞/뒷면
  Heat sync.. IO Module.., 
  노트북에서 주로 열나는 분, Soc, 메모리, 파워
* Die = Tile?
🆚 Chips vs Dies, Chiplets vs Dielets
  The terms Chiplets and Dielets, are frequently used interchangeably but strictly speaking the suffix “let” indicates a diminutive size typically below 100mm2. Chips refer either to the design IP or to the packaged dies. Dies typically mean bare singulated instantiations of the chip design that are not packaged

  https://www.reddit.com/r/chipdesign/comments/1e9izse/chips_vs_dies_vs_chiplets_vs_dielets/?rdt=41376
  메모리간 CPU 간의 설계를 잘해야한다. 안그러면 메모리 성능이 깎인다. 둘이 모두 가까우면 좋겠지만..
    항상 이 부분이 문제라고 한다.
  삼성도 패키징을 잘한다고 한다. 근데 CPU 를 잘못만듦. intel, Tsmc 는 잘 만듦.
  Tsmc: 5nano, 10nano 를 잘한다고한다. 7anano,  >> tsmc 3 nano.. ? 반도체 수율 (Yield) 이 안좋아서 고민하고 있다고 한다. 정상적으로 작동하는 칩의 비율.
  intel: 14nano (5년 전).. 을 잘한다고 한다.

AI 연산을 하게 되면
  Relo, Convolution --> framework 에서불러주는 API 일 뿐이고.
    실제로 컴퓨터 내부에서는 3*3 -> ...
    CPU 는.. 곱하고 더하고.. 총 4번? 이 필요하다고 한다.
    GPU 같은 경우는: ...
      GPU 안에는 실제로는 GPGPU 를 쓴다고 한다. SIMD single instruction, muli data 를 지원?
    NLP: 
  GPGPU (General-Purpose computing on Graphics Processing Units)
  사피온이 리벨리온한테 통합이 됬고 퓨리오는 아직 좋은 성능을 못내고 있다고 함.
  ❓ 면접: CPU GPGPU, NPU 연산.. 내부 장치, TPU
  ㄱ기존의 pytorch 로 하면 one-stinrctuon - one-instruction 이엇지만
    ㅏㅎ나 하나더ㅏ고 곱하고 곱하고.. 
    몇가지 연산을 하나의 instruction..
    Compute Tile 2D
    OpenVino 를 쓰면 이거를 한번의 명령에 여러 개의 연산을 적용할 수 있다고 한다.
    oficcialy, OpenVino 는 인텔에서만 돌아간다고 한다.
  
    Lunar Lake는 **마이크로컨트롤러(Microcontroller)**
      https://en.wikipedia.org/wiki/General-purpose_computing_on_graphics_processing_units
    
GPG key 
  ⚓ https://en.wikipedia.org/wiki/GNU_Privacy_Guard
WARNING:absl:You are saving your model as an HDF5 file via model.save() or keras.saving.save_model(model). This file format is considered legacy. We recommend using instead the native Keras format, e.g. model.save('my_model.keras') or keras.saving.save_model(model, 'my_model.keras')
  absl은 Abseil이라는 라이브러리의 약자입니다. 이는 Google에서 제공하는 Python 로깅 및 유틸리티 라이브러리로, Keras에서 모델 저장 시 경고 메시지를 로깅하는 데 사용됩니다. Abseil은 로그 처리와 같이 표준 로깅을 보다 확장된 기능으로 제공하기 위해 종종 사용됩니다.
  
  
❓ 면접: 네트워크 ip 주소, 서브넷 마스크, 게이트웨이
https://rufus.ie/ko/

precetron? CNN, RNN ~ LLM ~ OpenVINO


SEO / 패싯?

Install List
  from class room..
    sudo apt install -y vim git-all htop net-tools tree mplayer mesa-utils  

  OpenVIno
    # https://docs.openvino.ai/2024/get-started/install-openvino.html
    🪠%shell> 
      wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
      sudo cp GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB /etc/apt/trusted.gpg.d/intel-sw-products.gpg
      echo "deb https://apt.repos.intel.com/openvino/2023 ubuntu22 main" | sudo tee /etc/apt/sources.list.d/intel-openvino-2023.list
      sudo apt update
      apt-cache search openvino
      sudo apt install -y openvino


  Whale
    🪠%shell> 
      wget https://installer-whale.pstatic.net/downloads/installers/naver-whale-stable_amd64.deb -O /tmp/naver-whale-stable_amd64.deb && \
      sudo dpkg -i /tmp/naver-whale-stable_amd64.deb
    🚨 (Issue: Bug); 📅 
    Uninstall; %shell> sudo apt remove -y naver-whale-stable

  Telegram
    🪠%shell> sudo snap install telegram-desktop
  zoom
    🪠%shell> sudo snap install zoom-client
    https://snapcraft.io/zoom-client
wget -O - https://raw.githubusercontent.com/p1ratrulezzz/telegram-linux-installer/master/telegram-installer.sh | bash



  

Commands
  ls -al         # == ll    ❓ 

📰👍 Snap은 리눅스에서 소프트웨어를 패키징하고 배포하는 새로운 방법입니다. Canonical (우분투를 개발하는 회사)에서 개발한 이 기술은 여러 리눅스 배포판에서 동일한 애플리케이션을 일관되게 설치하고 실행할 수 있도록 돕습니다. Snap의 주요 특징과 장점은 다음과 같습니다:
snap install telegram-desktop   # https://en.wikipedia.org/wiki/Snap_(software)
  https://github.com/canonical/snapcraft
  https://snapcraft.io/store
  e.g.
    snap find editor
    snap install telegram-desktop



https://telegram.org/dl/desktop/linux
pip install jupyter

(how-to); firefox, open the new tab with same url
  Alt + D 또는 F6을 눌러 주소 표시줄로 커서를 이동합니다.
  Alt + Enter를 누르면 현재 탭의 링크가 새 탭에서 열립니다.

  이거는 모든 브라우저 공통이야?
  Popup View for Google™ Translate ; https://addons.mozilla.org/ko/firefox/addon/dictionary-anywhere/

settings 
  in WSL
    📦 Rust ; https://www.rust-lang.org/tools/install
      %shell> curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
    📦 https://marketplace.visualstudio.com/items?itemName=rust-lang.rust-analyzer
      >>> Output
        Welcome to Rust!

        This will download and install the official compiler for the Rust
        programming language, and its package manager, Cargo.

        Rustup metadata and toolchains will be installed into the Rustup
        home directory, located at:

          /home/wbfw109v2/.rustup

        This can be modified with the RUSTUP_HOME environment variable.

        The Cargo home directory is located at:

          /home/wbfw109v2/.cargo

        This can be modified with the CARGO_HOME environment variable.

        The cargo, rustc, rustup and other commands will be added to
        Cargo's bin directory, located at:

          /home/wbfw109v2/.cargo/bin

        This path will then be added to your PATH environment variable by
        modifying the profile files located at:

          /home/wbfw109v2/.profile
          /home/wbfw109v2/.bashrc

        You can uninstall at any time with rustup self uninstall and
        these changes will be reverted.

        Current installation options:


          default host triple: x86_64-unknown-linux-gnu
            default toolchain: stable (default)
                      profile: default
          modify PATH variable: yes


========= 왕성식 교수님
=========-- 백재우 교수님   // 수치해석/수학
=========-- 김성근 교수님   // 컴퓨터 비전

AI
  Perceron ; https://en.wikipedia.org/wiki/Perceptron
  CNN ; https://en.wikipedia.org/wiki/Perceptron
    르네부터?
  RNN ; https://en.wikipedia.org/wiki/Recurrent_neural_network
  LSTM ; https://en.wikipedia.org/wiki/Long_short-term_memory
  LLM ; https://en.wikipedia.org/wiki/Large_language_model
    Transofmrer, GPT, Attension..?

  YOLO(You Only Look Once) ; https://arxiv.org/abs/1506.02640
  
  OpenVINO notebook
    iGPU
  Openmodel zoo

  Smart Factory
    Arduino/ Mult-threading_OTX/Smart Factory
    Simulation/Handson
  Team Project
    CVAT&OTX
    MSA 설계
    Computer visionAI 기술 동향
    BSPㄵ 두햐ㅜㄷㄷㄱ wjsakd
    LLM design guide
    개발 procses
    취업 멘토링
    발표 잘하는 방법
    최종 점검
    careeer 면담.

Ubuntu Settings - Printer install. type;     .ppd; PostScript Printer Description
  프린터 기능 설명, 프린터 옵션 제공, 프린터와의 호환성

spike neural network?
뉴로모픽 
git diff --name-only HEAD~5 HEAD

VCS
  %shell>
    cat ~/.gitconfig
  Software Development Lifecycle
    Requirement;  Speicifcation
    Design; Architecture
    Development
    Test; Quality
    Deployent; Release
    Maintenance;   Hotfix
  Centralized VCS vs. Distributed
  What is Git 📰.. 모두 설명..
    git add... stage, un-stage, working-dir
    git status     vs git log
      git log --oneline
    git reset hard, soft, mixd and revert
      💡 관점이: HEAD Poitner, commit history, staging area, working directrory .. 4개로 나뉨.
    git log --graph --decorate --abbrev-commit --all --pretty=oneline

  📰 Non-bare repository vs. Bare repository
    client-side vs server side?.. ㅇㅇ.. bare repo 는 클론도 가능.
  💡 GitHub CLI ; https://cli.github.com/
    Install ; https://github.com/cli/cli/blob/trunk/docs/install_linux.md
    gh auth login
    https://cli.github.com/manual/gh_repo_create
    gh repo create <repository-name> --public --source=. --remote=origin
    gh repo view <repository-name>
      gh repo view intel-05
    github milestone.. issue.. // Milestone은 특정 기한 또는 목표를 설정해 여러 Issue를 묶는 기능입니다.
      // 언제 사용하는지?
    git pull --rebase     vs .. git upll == get fetch + git merge
      A --- B --- C   (main)          # 로컬 브랜치 상태
             \
              D --- E   (origin/main)  # 원격 브랜치 상태

      A --- B --- D --- E --- C'   (main, origin/main)

  https://www.gnu.org/software/bash/manual/bash.html#index-HISTSIZE

  >>> https://tally.so/r/w7D05A
    git stash       # == git stash push
    git stash push -m ""    # stash 이름 지정

    git stash list
    git stash apply
    git stash pop
    git stash drop

    가장 최근 stash는 stash@{0}
    git stash clear

vim
  i       삽입 모드
  :       명령어 모드
    :wq   저장하고 종료
    :q!   저장하지 않고 강제 종료
  ESC     모드 종료
gnone terminal
redirction ; https://www.gnu.org/software/bash/manual/html_node/Redirections.html
  >   write       // Redirecting Output
  >>  append      // Appending Redirected Output
마일스톤
PR:
  Development
  Successfully merging this pull request may close these issues.

🪱 OAuth 동작 방식:
  사용자 권한 요청: rclone 같은 애플리케이션이 사용자의 Google Drive 파일에 접근하려고 할 때, Google은 사용자에게 해당 애플리케이션에 권한을 부여할지 묻습니다.
  사용자 동의: 사용자가 권한을 부여하면, Google은 해당 애플리케이션에 Access Token을 발급합니다. 이 토큰은 애플리케이션이 사용자의 데이터를 안전하게 접근할 수 있도록 해줍니다.
  Access Token 사용: 발급받은 토큰을 통해 애플리케이션은 Google API에 접근해 데이터를 요청하고 필요한 작업을 수행할 수 있습니다.
  리프레시 토큰: Access Token은 만료되기 때문에, 애플리케이션은 리프레시 토큰을 사용하여 새로운 Access Token을 얻어 지속적인 접근을 할 수 있습니다.

  * Oauth Client
    Role of the OAuth Client: Why is it called "Client" and not "Server"?
    OAuth Client typically refers to an application that requests data from a resource server (e.g., Google Drive). The term "client" is used because the application plays the role of the client in the OAuth process.

    Concept Explanation:
      OAuth Client: The entity requesting data (the application, e.g., rclone).
      OAuth Server (Authorization Server): The server responsible for authentication and authorization (e.g., Google OAuth server).
      Resource Server: The server that provides the actual data the client is trying to access (e.g., Google Drive).

    The OAuth Client accesses the resource server on behalf of the user and obtains an Access Token from the OAuth Server, which is then passed to the resource server. Therefore, the OAuth Client is the one requesting authentication and authorization, while the OAuth Server grants the authorization.
      The client is the user's application (e.g., rclone, Gimp) that requests permission via OAuth to access data on behalf of the user.
      The server is a service like Google or GitHub that grants this permission.

    Thus, the OAuth Client requests authorization from the server and retrieves data, making it appropriate to call it a "client."

📖 Book: 파이썬으로 배우는 머신러닝의 교과서 // 이토 마코토 지음. 박광수(아크몬드) 옮김. 한빛미디어, SE SHOEISHA
  http://www.hanbit.co.kr/src/10124


Bash Shell에서 Gimp를 실행하고, Shell을 종료해도 Gimp가 종료되지 않도록 하는 방법
  == nohup  gimp &    # 프로그램을 백그라운드로 실행하면서 그 프로세스를 no hang-up (쉘 종료) 로부터 보호.
  gimp  &
    dis own # 백그라운드 프로세스를 현재 쉘 세션에서 분리하여, Shell을 종료해도 Gimp가 종료되지 않도록 만듦

  setsi d gimp &   # setsid 명령은 프로그램을 새로운 세션에서 실행하기 때문에, 부모 Shell과 관계없이 독립적으로 실행됩니다.

Math
  🪱 Coprime integers; https://en.wikipedia.org/wiki/Coprime_integers
    In number theory, two integers a and b are coprime, relatively prime or mutually prime
  초월함수 ; https://en.wikipedia.org/wiki/Transcendental_function
    **다항식(Polynomial)**은 하나 이상의 변수와 그 변수에 대한 **계수(coefficient)**로 구성된 식으로, 변수의 지수가 음수나 분수가 아닌 자연수로 제한됩니다..
  
  다항식이 아닌 함수들
    지수함수 exex: 변수가 지수에 있는 함수는 다항식이 아닙니다.
      지수함수는 밑이 일정한 상수이고, **지수(제곱하는 값)**가 변수로 주어지는 함수입니다
    로그함수 ln⁡(x)ln(x): 변수가 로그 안에 있으면 다항식이 아닙니다.
    삼각함수 sin⁡(x),cos⁡(x)sin(x),cos(x): 주기적인 함수는 다항식이 아닙니다.
    분수 함수 1xx1​: 지수가 음수인 경우 다항식이 아닙니다.
  오일러 상수 e
  🪱 Euler's totient function
    ϕ 기호: ϕ(파이 또는 피)는 그리스 문
    오일러의 피 함수(Euler's Totient Function, ϕ(n))에 대한 설명입니다. 이 함수는 특정 정수 n보다 작거나 같은 양의 정수 중에서 n과 서로 소(즉, 최대공약수가 1인)인 수의 개수를 나타냅니다.
    만약 n=9n=9인 경우, 9와 서로 소인 수는 1, 2, 4, 5, 7, 8이므로 ϕ(9)=6ϕ(9)=6입니다.
      >>> 암호학에서 중요한 역할을 하며, RSA 알고리즘과 같은 암호 시스템에서 사용됩니다.
  totient ; https://en.wiktionary.org/wiki/totient
    (mathematics) The number of positive integers not greater than a specified integer that are relatively prime to it.
  🪱 relatively prime ; https://en.wiktionary.org/wiki/relatively_prime#English
    (mathematics, of a number) having no factors (except the number 1) in common with a specified other number or numbers.
      e.g. 24 is relatively prime to 35.


Gaussian function ; https://en.wikipedia.org/wiki/Gaussian_function
스칼라, 벡터
  https://en.wikipedia.org/wiki/Dot_product
    In mathematics, the dot product or scalar product[note 1] is an algebraic operation that takes two equal-length sequences of numbers (usually coordinate vectors), and returns a single number. 


  scalar: 양
    주로 기울이지 않은 일반 텍스트나 이탤릭체로 표기됨.
  vector: 크기와 방향
    주로 굵은 텍스트나 화살표 표시로 나타냄
    단위 벡터? 벡터를 그 크기로 나눈 값.
    
    inner product (내적)
      내적의 결과값은 스칼라.
    outer product
      외적의 결과값은 벡터
    
    투영?
    벡터의 연산
  
  Derivatives
  편미분? 차원을 늘린다? multivariable of partial derivatives... partial? round?

  dell =.. round x Gradient : Derviative of vector.. 
  gradient f.. n 차원..
  투명점???
  

  https://marketplace.visualstudio.com/items?itemName=shd101wyy.markdown-preview-enhanced
  
  퀴버?.. 이 graidant 의 방향?
  https://shd101wyy.github.io/markdown-preview-enhanced/#/



4. 행렬곱 (Matrix Multiplication)
  행렬곱은 여러 변수를 동시에 처리하기 위한 연산입니다. 그림에서, 작은 2x2 행렬과 벡터의 곱셈을 보여줍니다. 이 연산은 공간 변환이나 시스템의 복잡한 계산을 처리할 때 사용됩니다.
  예시:
  컴퓨터 그래픽스에서 3D 모델을 회전하거나 크기를 조정할 때 행렬곱을 사용합니다. 예를 들어, 3D 모델의 좌표를 저장한 행렬과 회전 변환을 나타내는 행렬을 곱하면, 회전된 객체의 새로운 위치를 얻을 수 있습니다.

Sigmoid function = ?? 
  1/(1 + e^(-z))



https://en.wikipedia.org/wiki/Gaussian_function

"양자 컴퓨팅에 대해 서론, 정의, 수학적 의미, 응용, 해석, 결론의 형식으로 구성해줘."


Testing.. Pylance Vscode
  "markdown-preview-enhanced.previewTheme": "github-dark.css",
  "python.analysis.inlayHints.callArgumentNames": "all",

❓>>>>>>>>>..........? 비전과제한거 resource/ 폴더 사라짐;;;...




https://tramamte.github.io/2018/07/ /rsa/
중국인의 나머지 정리


What is .. Variation Selector-16 (U+FE0F):

📰 Windows - font forge ; https://fontforge.org/en-US/downloads/windows-dl/
👍 https://marketplace.visualstudio.com/items?itemName=James-Yu.latex-workshop
  1. install Late xWorkshop
  2. The only requirement is a compatible LaTeX distribution in the system PATH. For example, TeX Live. We strongly recommend TeX Live. Other possible choices are:
    https://www.tug.org/texlive/
    sudo apt install -y texlive-full fonts-noto-color-emoji

  3. restart VSCode
    Notice that you have to restart VS Code and the operating system after changing the variable.
https://www.overleaf.com/learn/latex/Questions/Inserting_emojis_in_LaTeX_documents_on_Overleaf
  Why It’s Hard to Render Emojis Without \emoji{}:
    LaTeX's Text Rendering: Unlike modern word processors, LaTeX is very strict about font handling. Each character must be assigned a specific font that contains the glyph (in this case, the emoji). Without specific commands, LaTeX won’t switch between fonts automatically.
    Font Overriding: Even though fonts like Noto Sans CJK KR support a wide range of characters, they don't include emoji glyphs, which is why LaTeX needs explicit instructions to switch to Noto Color Emoji or a similar font when rendering emoji characters.



Cannot view file PDF file. File not found: file:///home/wbfw109v2/repo/synergy-hub/note/sorted_note/test.pdf
🚨 error: Recipe terminated with fatal error: spawn latexmk ENOENT.
  latexmk 도 설치 ㅣㄹ요한듯



🚨 error
  VSCode + LaTeX Workshop의 기본 LaTeX 엔진은 **pdflatex**입니다. 이 엔진은 대부분의 경우에서 작동하지만, Unicode 지원이 필요하거나 fontspec 같은 패키지를 사용할 때는 XeLaTeX 또는 LuaLaTeX로 변경해야 합니다.

  XeLaTeX 또는 LuaLaTeX
  
  Compiling
    Building the document
      LaTeX recipes
        https://github.com/James-Yu/LaTeX-Workshop/wiki/Compile#latex-recipes
  한글, 영어 지원하는 무료 폰트.. 구글 
    2. NotoNoto Sans CJK KR
    // how to usage
    \usepackage{fontspec} % XeLaTeX 또는 LuaLaTeX에서 폰트 사용을 위해 필요
    % Noto Sans CJK KR 폰트 설정
    \setmainfont{Noto Sans CJK KR}

    \usepackage{fontspec} % 폰트 설정을 위해 필요
    \setmainfont{Noto Sans CJK KR} % Noto Sans CJK KR 폰트 사용
    \usepackage{xcolor}   % 색상 설정을 위해 필요
    % 배경색과 글자색 설정
    \pagecolor{black}  % 페이지 배경을 검정색으로 설정
    \color{white}      % 글자색을 흰색으로 설정

아이다스 시스템.. 레이더 시스템..

퍼플렉서 티?

Gemini vs Omni..

AL/DL Momentum : chatGPT app for iOS
Zeta ; https://zeta-ai.io/ko    AI chatting bot service
  HER AI
AI 유명한 논문들이 컨퍼런스 statista. aiindex.org AI; (Source: Scopus.com, Crunchbase, VentureSource, Sand Hill Econometrics, Monster.com)

ImagNet large scale visual recognition
  2010 - NEC-UIUC Lin et al.
  2011 - XRCE Florent Perronnin, Jorge Sanchez
  2012 - AlexNet
  2013 - ZFNet
  2014 - GoogLeNet
  VGGNet (Second Winner)
  2015 - ResNet     // Alphago??
  2016 - GoogLeNet-v4
  2017 - SENet
AI is changing every market
  EMERGENCY RESPONSE
    Real-time emergency and crime response
  ENERGY
    Maximize production and uptime
  EDUCATION
    Transform the learning experience
  SMART CITIES
    Enhance safety, research, and more
  FINANCE
    Turn data into valuable intelligence
  HEALTH
    Revolutionize patient outcomes
  INDUSTRIAL
    Empower truly intelligent Industry 4.0
  MEDIA
    Create thrilling experiences
  RETAIL
    Transform stores and inventory
  SMART HOMES
    Enable homes that see, hear, and respond
  TELECOM
    Drive network and operational efficiency
  TRANSPORT
    Efficient and robust traffic systems

.. 프롬프트? 페르소나를 부여? AI??
릴리스에이아이(Lilys AI) ; 유튜브 요약 AI
??? 뉴로모픽 칩, 로이히, 라바 ..
LG 에너지 솔루션 - 불량품 검사에서도 AI 가 사용한다고 한다.

Sidewinder... 미사일.. 자동추적? , Ultrasound.. 자율주행 센서.


Deep Learning Workflow (생각하게 만들기)
  1. Problem Definition
    - DL Type
      ✔ Classification
      ✔ Detection
      ✔ Segmentation
      ✔ ...

  2. Data Preparation
    - Datasets
      ✔ Obtain data (ex, images, video, audio)
      ✔ Annotation

  3. Training
    - In-house model
    - Open model
    - Model training

  4. Optimization (Training)
    - Training optimization
      ✔ Accuracy

  5. Deployment (Inference)
    - Inference optimization
      ✔ Deploy model on edge

  단계 구분:
  - Use Case
  - Date-prep
  - Training
  - Optimization
  - Deployment

Neural style transfer ??? Colorization



Training 에서 Foreward, Backward
YOLO: Real-Time Object Detection
  피쳐맵?..을 만든다?

언제 optimization 을 해야하는가?
  - 도메인이 바뀌는 경우
  - FP16 vs FP32
Transfer learning
  Low-level Feature --> Mid-level featuer --> High-level Feature..
    



genetic algoirthm..


1950: Alan Turning - Turing test
1958: Frank Rosenblatt - perception
1969: Marvin Minsky - a book of 'Perceptrons'
  MLP 를 할 수 있는건 알았지만 너무 계산량이 많아서.. Perceptron 모델에 대한 한계
    ANd, NANd, OR, XOr.. perceptron이 라인하나로 
1986: david rumelhart -> Multi Layer Perceptron (MLP)
  계산량을 Back propagation 으로 줄임.. 근데 아무리 쌓아도 성능의 한계점이 보임..
1998: Yann Lecun - LeNet-5
  Hidden layer 가 깊어지면 back propagation 이 제대로 안됨.
  다 때려넣지 말고, 이미지의 특징을 추출해서 넣어보자. ㅇㅇ CNN 을 제안함
2012: Alex Krizhevsky - AlexNet
  GPU 도 처음 씀..

1986 (RNN.. recurrent 한 구조가 포함됨..)
  -> LSTM -> Seq2Seq -> ATtention -> Transformer -> GPT-1 -> BERT -> GPT-3
  transformer .. 원래는 병렬 처리가 안됬다. 위치에 따른 처리..


Neuron in our rains..
  전달되는 메커니즘이 뉴런..
  Unistab function, Sigmoid, Relu,
  Spiking neurl network 에서는 이를 그대로 묘사한다? integrate fire?
...
분포재조정.
normalize.. 에서 입실론 값?..
감마, 베타.. scale, and shift..

class activation map CAM. Segmentation, object detection.. 다음주..


activation functino 특징은: non-linear?해야한다
input -> Hypothesis
  relu 도 "1" 은 의미가 있다.
  측면 억제 효과?
  입출력단을

최대 gradiant 가 0.25라서 sigmoid 는 chaine rule 을 적용하기 어렵다. ; gradiant vanishing
Hyperbolic Tangent (Tanh) 도 마찬가지.    // RNN 계열은 이를 쓰고, ?? 다른 것은 RELU 를 많이 쓴다?고한다?
  --> Batch normalization ?? ..
    >>>?? nobatch+ 
      nobatch+sig --> 
      batch 를 쓰면 파라미터 수가 늘어서 안 쓰는 것이 낫나?
    backpropagation 에서 weighting 을 할 때 문제가생기기 대문에 해 줌.
  ReLu 는 graidant vanishing 문제가 거의 나오지 않지만 0 이하에서 너무 반응이 없어서 leakyReLU 를 만들엇다.
  레이어가 깊을 수록 업데이트가 사라져감.
graidant vanishing... ??????
??? 미분의 벡터형이 gradiant? 
Epoch& Iteration.. If batch size big (BGD?)
If Batch size is small(ㄶㅇ?)
batch 사이즈를 크게 하는것이 좋지만, 메모리 한계상...

알고리즘의 방향이 graidant 가 줄어드는 방향으로 학습을 택했다. 라서 gradiant decesnt 라고 이름으 정함.

    
underfitting, overfitting.. noise..
  eary_stopping
  🎖️ Dataset
    Train, Validation, Test
    4차원 데이터.. Batch * Height * Wdight * Channel
    ?? CNN은 4차원이고 ANN 은 3차원??..
    그림 해석.. "Epoch & Iteration & Batch"
dropout..


전장 시스템 ..?? 자동체. 현대자동차.
  CAN signal
  크러스터 시스템?
    My-come..? 마이컴? 
    여러가지 하드웨어적인 컨트롤도 하고, 여러가지 can signal 도 정의하고..
  자동차에서 제일 중요한 이슈.. battery drain..
    전장 시스템에 있는 mycom 도 다 꺼지는 것이 문제..

⌨️ Navigate Brackets
  Ctrl + Shift + \ 

  remove Brackets 
  Ctrl + Alt + BackSpace

전자쪽은 (C언어) 통일되어있지만
PLC 는 다 다르다고 함.. (base 가 기계쪽이라 그럼..)
  Hypervisor ..

중간 파일 만들고 pdf 파일만 다른 곳에 만들게 하는 방법
우뤼도 adam.. 정도 


⚓ Society of Automotive Engineers (SAE) International ; https://en.wikipedia.org/wiki/SAE_International
⚓ Self-driving car ; https://en.wikipedia.org/wiki/Self-driving_car
  #️⃣ Definitions ; https://en.wikipedia.org/wiki/Self-driving_car#Definitions
    #️⃣ SAE classification ; https://en.wikipedia.org/wiki/Self-driving_car#SAE_classification
Latex
  ⚓ Wikibooks - Latex ; https://en.wikibooks.org/wiki/LaTeX/
    ⚓💡 Mathematics ; https://en.wikibooks.org/wiki/LaTeX/Mathematics
      mathbf
  ⚓ Official Latex ; https://www.latex-project.org/help/documentation/
    # Typesetting complex mathematics
      # Specifically targeting the typesetting of mathematics is:
        ⚓ User’s Guide for the amsmath Package (Version 2.1) ; https://www.latex-project.org/help/documentation/amsldoc.pdf
  
  ⚓ Emoji Docs ; https://ctan.math.washington.edu/tex-archive/macros/luatex/latex/emoji/emoji-doc.pdf

  VSCOde extension
  @ suggestions
    Inserting Greek letters



Sigmoid
  https://en.wikipedia.org/wiki/Sigmoid_function







Here's the revised LaTeX code with improved structure, avoiding redundancy and keeping a smooth flow between the points:

⚓ Parallelogram ; https://en.wikipedia.org/wiki/Parallelogram
  Area formula
📰 단일 진실 공급원으로 만들고싶은데 .. 명ㅇ..


⚓ find ; https://www.gnu.org/software/findutils/manual/html_mono/find.html
  2.1 find Expressions ; https://www.gnu.org/software/findutils/manual/html_mono/find.html#find-Expressions
    The expression that find uses to select files consists of one or more 🪱 primaries, each of which is a separate command line argument to find.
    An expression can contain any of the following types of primaries: 
      ... 🪱 actions
        have side effects and return a true or false value; and  ...
  3.3.2 Multiple Files
    Action: -execdir command {} +; https://www.gnu.org/software/findutils/manual/html_mono/find.html#index-_002dexec-1
      This insecure variant of the ‘-execdir’ action is specified by POSIX.
      The main difference is that the command is executed in the directory from which find was invoked, meaning that ‘{}’ is expanded to a relative path starting with the name of one of the starting directories
      , rather than just the basename of the matched file. The result is always true. 
⚓ Function ; https://en.wikipedia.org/wiki/Function_(mathematics)
  unspecified function ...

Latex Engine
  https://en.wikipedia.org/wiki/LuaTeX
    https://www.luatex.org/
Latex auomation build tool; latexmk ; https://github.com/debian-tex/latexmk
  LATEX MaKe


📰📰📰📰 TODO: Documentation
  추가내용을 통합하기: 오류가 발생하지 않도록 기존 구조를 유지하고, 새로운 섹션만 추가
  다음 latex 텍스트에 추가내용을 통합해줘.  절대 오류나지 않게 포맷은 최대한 건드리지말고
  괄호수를 잘 세고 잘 닫을 것.
각각..의 matrix 안의 세부..단어, veector- 가 컴퓨터비전/머신러닝에서 어떻게 쓰이는지 실제 조사하기.
📰📰📰📰 TODO
  about_matrix.tex
    기타:
      고유값 (Eigenvalue), 고유벡터 (Eigenvector): w, v = np.linalg.eig(x)
			고유공간,.. 역행렬과의 관계..행렬의 대각화와의 관계.. (기존에 썻던것과 합치기?분리하기?)
				물체가 가지는 고유한 성질을 찾기 위해 사용함. ㅇㅇ 공명
      np.linalg....
      https://rfriend.tistory.com/163

  Perceptron & ANN
    AL/DL areas and applications: past, current, upcoming
    Multi-layer perceptron --> 쌓아서 만든 것이 ANN?
    뉴런을 수학적으로 모델링한 것..
    알파고 프로그램.. 구글의 딥마인드?.. 2001년부터 한 프로그램
  GRadiant
    Gradient(∇) : Derivatives of vector..
  뇌 속 신경망.. 미세하게 떨어져있다.. 
    inputs.. x_n --> weights.. wij -> transfer function (Sigma)... -> net input net_j ---> activation function(threshold seta_j) -----> activation (o_j(?))
    Activation Function..
      "비선현성을 부여한다는 것" 이 무슨 뜻
  back propagation.. 에서 Chain rule 쓴다는데.. 뭔소리..
    weighting? 이 곱해진다?...
    input -> .. caclulate the sigma?W from sigmaF ???
  딥러닝.. matrix 에서 왜 차원을 높여야 하는가?.. ..
    ?? 숫자 OCR 학습에 대한 예시로...
    ?? 차원을 높일수록 좋다? cube-root?
    Local Minima.. ?
      - loss contour of a VGG-56 DNN's loss function
    cost function.. 우리가 만들려고 한 모델과 데이터 사이의 오차를 나타낸 것?
    saddle points?.. maxima in antoher direcion, a minia in .. direction
    직교성?
    지수 기저함수?
    다차원 벡터의 내적
      벡터 간의 연산이므로 차원이 같아야 함.
    matrix.. 로 확장하면 여러 벡터의 내적을 한번에 진행 가능?
      ?? N 개 batch
  서로소; relatively prime ..
    커널행렬을 인공신경망 형태로 표현하면, 피쳐맵을 각 가중치가 곱해진 채널의 합으로 표현할 수 있음

  신경망: Tensor? 전방패스? 내적?
  파라미터 라는 정의가..?
    이미지로 치면 각각 i, j 의 인덱스의 합??인가? 즉 개수?
  Loss Function
    종류
      평균 제곱 오차(Mean Squared Error): 회귀 문제에서 자주 사용되며, 예측값과 실제값의 차이의 제곱을 평균한 값
      교차 엔트로피(Cross-Entropy): 분류 문제에서 자주 사용되며, 예측한 확률 분포와 실제 분포의 차이를 계산
    최적화(Optimization)
      최적화는 손실 함수의 값을 최소화하기 위해 모델의 **가중치(Weight)**를 조정하는 과정입니다. 이 과정을 통해 모델이 주어진 데이터를 잘 학습하고, 예측 성능을 개선할 수 있습니다.
      "가중치".. 가 정학히 뭐지? COEFFICIENTs ? 벡터?
      예: 경사 하강법(Gradient Descent): 가중치를 업데이트하기 위해 손실 함수의 기울기를 계산하여 손실을 최소화하는 방법입니다.
  Liniear regression
    DOI (Data of interest)  ... e.g. squared error
    Value of interest (VOI) ... e.g. least ?

    find DOI data with VOI

    ?? What is cost function?
  Gradient Descent..
    cost function is convex function
    Goal
    A_k = Learning Rate / Step Size
    Delta?입실론? x(k): Search direction
    Adaptive Learning rate scheme
    입실론..

    Momentum descent algoirhtm
    Adagrad: 2011
      Division and square root applied element-wise .. means
    RMSprop: 2012
      ...deacy.. 아주 오래전 궤적의 영향을 줄이고, 가까운 시간의 궤적의 영향을 높이기 위해.. deacy 추가
    Adam 2014
      Hyper-parameter 설정에서 가장 roust 하다고 알려짐.

  Min Sqaure error 를 Mean aboulste error 를 쓰는 이유..

Validation set

RNN 이나 시계열 쪽은 batch 전체를 한 번에 집어넣을 수 없다? 대형 언어 모델? serial
  배치 정규화가 안된다는건가? layer normalization

  position encoading. 위치가 어디있는지 표시하는
  sigmoid 는 최대 gradiant 가 0.25라서 배치정규화를 안했을 때 sigmoid 를 쓰기 vs ReLu
  
  A2 A1 Ax .. activation functino 이 없으면 layer 를 아무리 써도 하나를 쓴거로 치환할 수 있는 상황으로 나온다..
  선형적인 것을 비선형적으로 바꿔주는..
  CNN Sequential model (keras) 왜 conv2d 이후 batchnomralization 을 계속 같이 해주는 이유. 
    이거 할 때마다 output shape와 param size 는 어떤 관계가 있는것?
  미니 배치? 배치, 배치 정규화, iteratio, epoch, learning rate, step size 의 차이는 또 뭐야
    batch normzliation 에서 변수는 4개: 평균, 표준편차, 감마, 베타?
      mini-batch vs batch
    이미지와 딥러닝 관점에서 Serialize?
      공간적인 특징을 추출해서 넣자. 해서 ANN -> CNN 이 추가됨? Missing Spatial Relationship
      + ANN 은 이미지를 한 번에 다 넣어서(?맞나?) 메모리가 너무 많은 양을 사용해야한다.
      "Feature Engineering" 이 차이가있음 ANN
        ANN 은 plattern 하고 잘라서 벡터로 이어붙인다??? 그래서 특징이 쪼개진다.
        CNN 은 컨볼루션..필터를 사용해서 공간적으로 주변 픽셀과 연관도가 있도록 특징 학습이 된다.
  CNN: Spatially-local correlation . 인접 픽셀 간 높은 상관관계
    Invariant feature? ..사진 좌우 반전시에도 특징 똑같음.. 예: 귀?
    >> 합성곱 연산 제안됨. Convolution
      ..? 메모리를 더 적게 사용한다?
    multi-channel.. ??
  Convolution e.g.: original, sharpen, emboss, horizontal/vertical line,
  weights, bias?

  loss = binary_crossentrpoy vs .. sparse?..

  회귀/펄셉트론 모델에서 W 는 벡터라는데, 벡
  Adaptive ...? - Moementum (velocity ?), Adagrid, RMSProp, Adam, 
    각각 이전 모델에 대해 무어엇을 개선했는지
  ㅁㅇ므; 하이퍼 파라미터 설정에 가장 robust 하다고 알려짐.
  
  https://en.wikipedia.org/wiki/Hadamard_product_(matrices)
    - Hadamard product (also known as the element-wise product, entrywise product[1]: ch. 5  or Schur product
     원소별 곱(element-wise product) or 성분별 곱
  
  Activation functinon
    Softmax 의 역할: normalize 를 해서 ... ~?
    input 값을 exponential 함수로 매핑해놓아서, 큰 값은 더 크게 하고,작은 값은 더 크게하는효과?.. 증폭효과.

  Error back propagation

  CNN.. Fully connected ?
  컬러 이미지는 3차원의 tensor 로 표현됨.. tensor?
  weights, shared weight?
  Feature Engineering
    Feature map.... Feature map 을 RGB 를 따로 구성하나? CNN 을 여러번 할텐데.. 그러면 이미지 크기가 계속 줄지 않아? 풀링?
    filter 는 학습으로 특징이 생기지만, filter layer 의 수는 사용자가 결정
  CNN
    stride.. 이슈: 한 번에 한 칸씩 이동하면 너무 오래걸리지 않을까?
    해결책: filter 가 한번에 여러 칸 이동하도록 허용하자. >> Stride // 영역을 대표하는 값을 가져오자.
    근데 데이터 손실이 일어나지 않나? 비는 영역만 없게 하고, 겹치는 테두리?패드 부분만 갖게 하면 괜찮은건가
    >> Convolution + RELU // POOLINg 을 반복 ... --> Flatten -> fully connected -> ..soft max?
      // 특징 추출                                //               ????
    - flatten: matrix/tensor 구조를 1차원의 vector 로 변환하는 과정.

  Stride 를 크게 만드는 것이 풀링?
  padding. stride=1 이 기본값? ㅇㅇ.. 
  !! Outut size... <<< ..
    Mxa pooling vs average pooling.. 차이.. 
    문제점: 고차원의 tensor 를 보다 compact 하게 축약해야 하지 않을가?
    Pooling: 일정 영역의 정보를 축약하는 역할.
    ?? 알렉스?인가에서 맥스 폴링 했더니 더 성능이 잘 나와서 average 보다 max pooling 을 쓴다고 함
  ?? pooling 을 할수록 색이 연해진다? 실제 고화질 꽃에대한 폴링에 따른 결과물 차이..?
  >>>>>>>>>>> Feature map 이 학습되는 것이 아니라 커널이 학습되는 것이다!!!
  CNN 의 하이퍼 파라미터: Convolution filter 의 크기, 개수
  Dense? 가 Full connected layer 에 해당되는 부분?
  Dense 에 활성함수 sigmoid 이후 softmax 한 이유? conv layer 에서만 relu 씀ㄴ
  👍 https://netron.app/
VGGNet
  .. 3*3 으로 하더라도
    - 필터 크기 작게하면 메모리 크기를 줄일 수 있고,
    - layer 깊이만 틀리면 많은 특징을 추출할 수 있어서.? 3*3 을 사용한다는듯?
Transfer learning? 이 가능한 이유?. low-level feature, mid-level feature, high-level feature
  ..
  // input size 맞춰줘서 학습 시켜야 한다? 가장 중요...resize 등.
  ?? Batch & layer normalization?
    batch 의 수에 따라 성능에 영향을 받지 않도록 하는 것? layer normalization ??
  ?? 원리.. source task labels
  --> taget task labels.. 가 다를 수잇는데 내부적으로 구현이 어떻게 되어있나?
  Training images..Sliding Patches.. C1 ~ C5 ..
Machine learning vs deep learning..
  input -> feature extraction -> classification -> output (mask)
  input -> feature extraction + clasification -> output (mask)
>>>>>>>>.설명 가능한 AI.. 작업? 수치를 의미있게 뽑아낼 수 있다?
mono depth vs super resolution
  ?? 신기.. 멀리 있는거랑 가까이 있는거 해상도? 색이 다르게 나온다.
CNN use case.. cont.
  아마존 재고 파악..
    https://www.slideshare.net/awskorea/amazon-deeplearningcasesandmlonaws
ResNet.. GoLeNet-v4, SENet .. 에서는 layer 가 깊어져서 gradiant vanishing 문제를 어떻게 해결했나?
   5%.. IMagenet.. 오류율 미만..
AlexNet: Relu + local response normalization
  overlapping pooling/drouput/data augmentation
    stride 를 2*2로 햇다고 함.
  multiple GPU  .. 어떻게?
  normalizatino 을 처음 사용함.

Convolution architecture..
GoogLeNet (Inception), 2014
  3*3.. ..? Inception? Concatenation?.. 이게ㅁ 무슨..
  보조분류기를 추가한건가? Auxsilary classifier.. 왜? vanishing 현상을 막기 위해? 연산량을 줄이기 위해? 파라미터 개수가 VGGNet 보다 훨씬 적은데 성능이 좋다고 함.ㄴ
  global average pooling
  channel concat
  ? 1*1 convolution 을 하면 피쳐맵 개수가 줄어든다?
Detection / Segmentation Annotation..

The \include command doesn't allow relative paths starting with ../. It is safer to use \input if you're working with subdirectories, as \input is more flexible in handling relative paths.


https://help.ubuntu.com/stable/ubuntu-help/shell-workspaces-switch.html.en
🌟 //////////// 수식 다 한 다음에 컴퓨터 그래픽스에서 어떻게사용되는지 직접 코드 짜보기

https://en.wikipedia.org/wiki/Mathematical_Alphanumeric_Symbols

다음과 같은 분류로 다음 주제에 대해 latex 로 작성해줘.
* 지시사항
  - 매우 구체적이고 정교하게 작성해줘. 간단히가 아니라. (그렇다고 가독성이 안좋아지면 안 됌)
  - (없는 경우) 각각 연산식이 정의된 사항에 대해 실제 값 수식을 넣어서 예시도 들것. 또한 예시를 들기 전에 "🛍️ e.g." 로서 한 줄 추가한다.
    - 단, 실제로 식에 값을 대입하여 예시를 든 것에만 \emoji{shopping} e.g. 라고 표시하기.
  - (없는 경우) 문맥에서의 Lexicon/Glossary/Terminology 들은 영어로도 표시할것
    🛍️ e.g.
      코사인 유사도 (Cosine Similarity)
      선형 독립성 (Linear Independence)
  - 그 외 이미 만들어진 다른 주제의 latex 의 구성을 따를 것.
    예를 들어 emoji 사용 방법.
  - 실제 정의에 대한 대수 수식이 삭제되지 않도록 다시 한 번 쓴 것을 확인해봐, 이후 내용을 많이 보충해줘.
  - 절대적으로 예시 latex 를 우선적으로 참조하여 이와 같은 최상위분류를 갖도록 해.
    // 여러개의 하위 주제를 갖는 경우 (예: 미분 -> 편미분), 이러한 미분, 편미분을 최상위 분류로 두고, 하위 주제들을 다음과 같이 두어 구성할것. ("하위 주제"에 대해서만임. 프로젝션의 개념에서 외적의 개념이 나오면 개별적으로 구성하지 말고 간단히만 "외적"에대해 설명하고 넘어갈 것)
    1. 배경과 역사
      // 주제의 기원과 역사적 배경을 파악하는 질문을 통해 개념이 처음 어떻게 등장했고, 어떤 문제를 해결하려고 했는지를 알 수 있습니다.
      "이 개념(또는 이론)은 언제 처음 도입되었고, 어떤 문제를 해결하기 위해 등장했나요?"
      "이 주제의 역사적 배경은 무엇인가요?"
      // 예: "벡터 내적은 언제 처음 정의되었고, 그 기원은 무엇인가요?"
    2. 정의와 목적
      //주제가 무엇인지 정의하고, 그것이 어떤 목적을 위해 존재하는지를 명확하게 묻습니다. 이를 통해 개념의 기본적인 성질을 이해할 수 있습니다.
      "이 개념은 무엇을 정의하나요?"
      "이 연산 또는 개념이 실질적으로 어떤 문제를 해결하기 위해 존재하나요?"
      // 예: "커널 convolution 연산은 정확히 무엇을 의미하나요, 그리고 왜 그런 방식으로 정의되었나요?"
    3. 연산 | 메커니즘의 이유
      // 특정 방식으로 정의된 이유를 묻습니다. 주제의 수학적, 과학적 또는 기하학적 이유에 대해 탐구하는 질문입니다.
      "왜 이 연산은 이런 식으로 정의되었나요?"
      "이 메커니즘이 이렇게 동작하는 이유는 무엇인가요?"
      // 수학적 정의가 왜 그렇게 되었는지 성분 유도. (이미 알려진 원리를 이용하는 경우, 간단히 해당 공식만 이용했다고 언급만. e.g. 피타고라스 정리를 이용함. 이라고 표시.)" 
      // 예: "왜 벡터 내적은 두 벡터의 크기와 방향의 곱으로 정의되었나요?"
    4. 비교 | 대조 | 성질
      // 등등. 하위 4.1, 4.2 .. 이런식으로 추가 구성
      // 비슷한 개념이나 연산과 비교를 통해 그 차이점과 유사점을 묻습니다. 이를 통해 주제를 더 깊이 이해할 수 있습니다.
      "이 개념은 다른 개념과 어떻게 다르며, 유사한 점은 무엇인가요?"
      "이 연산은 cross-correlation과 어떻게 다른가요?"
      // 예: "벡터 내적과 벡터 외적은 어떻게 다르고, 어떤 상황에서 각각을 사용하는가요?"
    5. 응용 | 실제 사례
      // 이 개념이 실제로 어떻게 적용되는지를 물어보면, 이론적 개념의 실질적 활용 방법을 알 수 있습니다.
      "이 개념은 실제로 어디에서 사용되나요?"
      "이 연산은 실생활에서 어떤 문제를 해결하기 위해 사용되나요?"
      // 예: "커널 convolution은 컴퓨터 비전에서 어떻게 사용되나요?"
      //  , 단위벡터의 물리적 및 수학적 의미
    6. 관련 논문 | 참고 자료
      // 주제에 대해 더 깊은 탐구를 원할 때는 관련된 논문, 서적, 연구 자료 등을 물어보는 것이 유용합니다.
      "이 주제와 관련된 중요한 논문이나 연구는 무엇인가요?"
      "이 개념에 대한 더 깊은 이해를 위해 참고할 만한 문헌은 무엇인가요?"
      // 예: "벡터 내적의 정의와 기원을 다룬 중요한 논문은 무엇인가요?"
    7. 관련 용어
      // 예: 행렬이라면, "판별식" 에 대해, "가우스-조던 소거법" 등에 대해 기록한다. 하위분류가 될 수 있는 역행렬, 단위행렬 등은 개별적으로 문서를 작성할 것이므로 작성하지 않는다.
      // 관련용어에 수학적 정의가 았다면 2차 분류와 마찬가지로 배경과 역사, 정의와 목적, 연산 | 메커니즘의 이유, 응용 | 실제 사례를 함께를 쓴다. (하위 분류로서!!!)
	- 문단 간에 적절한 띄어쓰기를 추가하고, 다음 문단을 새 줄에서 시작해. (latex 에서 렌더링 되는 기준으로)
	- 수학식이 아닌 일반 텍스트를 굵게 하는 것은 ** ** 표시가 아니라 \textbf{}를 사용해.



차원이 높으면 왜 좋은가?
	Local Minima
		loss contour of a VGG-56 DNN’s loss function
			Gradient of local and global minima is zero
			Improper initialization point may cause convergence to a local minima
				– you’re doomed!
Multi dimension
	Saddle Points, Edge Length, Truncation Parameter
		• A minima in one direction, a maxima in another direction
		• Occurs where two maxima meet
	다차원 벡터의 내적
		• 두 벡터 𝑥1, 𝑥2 의 내적은 두 벡터 간의 projection 에너지의 적분으로 정의됨
		• 두 벡터가 신호이고, 같은 신호일 경우 신호의 에너지가 됨
		벡터 간의 연산이므로 차원이 같아야 함
			• 내적의 결과는 스칼라!! ?
	방향성분 추출
		• 𝑥𝑛 에 관한 기저함수 ∅𝑛 의 가중치 혹은 계수는 𝑥𝑛 와 ∅𝑛 의 내적으로 추출됨
		• 𝑥𝑛 와 ∅𝑛 의 내적은 𝑥𝑛 의 ∅𝑛 방향의 정사형 성분으로 ∅𝑛 방향의 가중치로 해석됨
	직교성과 기본 벡터(basis function)
		• 직교성(orthogonal & orthonormal)
			• 신호 𝑥(𝑡)에 관한 식의 기저함수를 𝜙𝒏 라고 할 때, 다른 기저함수 간의 내적이 0일 경우 orthogonal이라고 함
			• 동일 기저함수 간의 내적이 1일 경우, orthonormal이라고 함
	sin/cos함수 기본 벡터
		• 지수 기저함수(파동의 주파수 기본으로 모델링)
	matrix 확장
		• matrix로 확장하면 여러 벡터의 내적을 한꺼번에 진행 가능
		• 커널행렬을 인공신경망 형태로 표현하면, 피쳐맵을 각 가중치가 곱해진 채널의 합으로 표현할 수 있음.

		

법선벡터? 표면법선? (normal vector) 에 대해서도
  ===========
  벡터의 내적..
  3.6 컴퓨터 그래픽스에서의 응용
  컴퓨터 그래픽스에서 내적은 물체의 표면과 빛의 각도를 계산하는 데 사용됩니다. 예를 들어, 물체 표면에 빛이 닿을 때, 빛과 표면 법선 벡터 간의 내적을 계산하여 표면의 밝기나 그림자를 결정할 수 있습니다.

  벡터의 외적..
  3.6 컴퓨터 그래픽스에서의 응용
  컴퓨터 그래픽스에서는 물체의 회전과 변환을 처리하는 데 외적을 사용하며, 특히 물체의 표면에 수직인 법선 벡터 (normal vector)를 계산하는 데 유용합니다.
  
  3.3 🖼️ 컴퓨터 그래픽스에서의 단위벡터 응용 (Applications of Unit Vector in Computer Graphics)
  컴퓨터 그래픽스(Computer graphics)에서는 카메라의 방향(Direction), 물체의 표면 법선(Normal vector) 등을 나타내기 위해 단위벡터가 사용됩니다. 이러한 단위벡터는 물체의 조명(Lighting), 그림자(Shadow) 처리 등에 중요한 역할을 합니다.

  https://numpy.org/doc/stable/reference/generated/numpy.sum.html

https://marketplace.visualstudio.com/items?itemName=DavidAnson.vscode-markdownlint
https://marketplace.visualstudio.com/items?itemName=shd101wyy.markdown-preview-enhanced


>> 다음 예시 구성과 같이 단위벡터에 대해 설명해줘  
    Norm
      L1 Norm
        벡터와 원소의 절대값의 합
      L2 Norm
        유클리디안 거리로 계산된 벡터의 길이
      무한 놈
        벡터의 원소 중 절대값이 가장 큰 값.
      Entropy
      평균과 분산..
      BN.. Batch Normalization ..? // layer 를 추가한 것과 같다?..
        mini-batch mean
        mini-batch variance
        normalize
        scale and shift
    // 각각에 대한 수학 기호도 표시.

  Entropy~
    소스 심볼에 대한 정보량 I 심볼의 발생확률(의외성) P?
      심볼의 평균 정보량
        엔트로피(entropy, 무질서도로 표현)
        Shannon 이 수학적으로 정의

        Entropy: 수식..
        Corss-Entropy: ... 수식..
        KL-divergence: .. 수식..
      Cost function
        MSE (Mean Squared Error)
        Binary cross-entropy
        Optimizer adam?
        Categorical across-entropy
          ..vs spare categorical crossentropy.. 다중 클래스 분류?
      조건부 확률
        베이지안 이론..
          P(A) 사전확률 (prior probability)
          P(B|A) 우도확률(likelihood probability)
          P(A|B) 사후 확률(posterior probability)
  Convolution..
  교환법칙을 성립하게 하기 위해서 convolution 시 상하좌우 반전을 시켜야 한다.
    이미지 복구? 를 위해서 ?도?.. 전치를 한다고 한다.....
    cv2, wiki 에서도 이미지 프로세싱에서는 컨볼루션 시 뒤집어줬는데 왜 keras 는 안뒤집는건지?

    https://angeloyeo.github.io/2019/08/06/determinant.html

  Euler's number; 네이피어 상수, 오일러 수, 자연상수
    시그모이드 함수
  e?.. 시그모이드 함수??..
    convlution 할 때 왜 뒤집나? flip 위상을...

  ❓ ANN 은 Flatten 을 먼저 하나?


편미분 기호.. 읽는 방법, 기호 ∂
음성인식과 생성형 AI를 활용한 의류 가상 피팅 키오스크 -  감다공
  피팅 횟수 제한, 니트, 흰색, 셔츠 
  ..
  카메라에 ㅇㅇ.. 
  패션시장 규모 ㅇㅇ.
  트렌드 리더
  d;stpds
  > 기대효과
  발려동물로 대상 넓히기, 모델이 직접 광고를 이ㅜ해.. 

  얼굴 인식 -> 성별 및 연령인식 -> 의상 추천
  >> Vector DB 에서 의상추출 ??
    음성 -> 텍스트 데이터로 변환
    
  Stable diffusion  >> txt2img

    간트 차트

  3월?
    스켈레톤을 통한 신체 사이즈 측정
  UI 통합..
마이크 성공..
  문제
  >>>>>>>>>>>>>. 외부 환경 
    고급 소음 제거 알고리즘 잡음 제거.
    사용자-카메라 간의 거리 변화에 따른 픽셀 왜곡으로 인해 스켈레톤의 신체 데이터의 정확한 측정이 어려움

    손모양에 따른 정확한 의미 인식이 어려움. Yolo-tiny.. 특정 동작에 따라 모션 인식으로 
      >>>>>>>> 
    사용자와 주변 환경의 구분이 어려움..

  Google trnaslate?? 를 사용? speech regonition ?

  openvino 가 서양..사람으로 인식


  pytorch 모델인 text encoder 를 openvino 의 IR 형식으로 변환하여 사용
  U-Net... 
  파이썬으로 크롤링하여 SQL DB 화

  acgpn ? 딥러닝모델... 여성 옷에 최적화.. 
  Stable diffusion
>>> 우리회사는 뭘 해서
P2P의 TC/UDP 홀펀칭? webRTC 의 동작과정?
P2P의 TCP/UDP 홀 펀칭 (Hole Punching)
  P2P(Peer-to-Peer) 통신에서 **홀 펀칭(Hole Punching)**은 방화벽이나 NAT(Network Address Translation) 뒤에 있는 기기들이 직접적으로 통신할 수 있도록 경로를 만드는 기술입니다. NAT는 사설 네트워크와 공용 네트워크를 연결하며, 외부에서 내부로의 연결을 차단하는 경우가 많습니다. 홀 펀칭은 이런 상황을 해결하기 위한 방법입니다.

  1. NAT 문제
    NAT 뒤에 있는 기기는 공인 IP 주소가 없기 때문에 외부에서 직접적으로 접근할 수 없습니다.
    NAT는 외부의 요청이 올 때만 내부로 연결을 허용합니다.
  2. 홀 펀칭의 동작 방식
    UDP 홀 펀칭
    TCP 홀 펀칭:


1. WebRTC 주요 구성 요소
  WebRTC는 브라우저 간 실시간 P2P 통신을 가능하게 하는 기술로, 음성, 영상, 데이터 전송을 지원합니다. NAT와 방화벽 문제를 해결하기 위해 TCP/UDP 홀 펀칭과 유사한 과정을 포함합니다.

  STUN 서버:
    NAT 뒤에서 클라이언트의 공인 IP 주소와 포트를 알아내는 데 사용됩니다.
  TURN 서버:
    P2P 연결이 불가능할 때 중계 서버 역할을 합니다.
  SDP (Session Description Protocol):
    연결을 설정하기 위한 메타데이터(코덱 정보, IP, 포트 등)를 포함합니다.
  ICE (Interactive Connectivity Establishment):
    후보 네트워크 경로를 탐색하고 최적의 경로를 선택하는 프로토콜입니다.
HLS 프로토콜 (HTTP Live Streaming)
  **HLS(HTTP Live Streaming)**는 Apple이 개발한 비디오 스트리밍 프로토콜로, 인터넷을 통해 실시간 및 주문형(VoD) 콘텐츠를 전송하는 데 사용됩니다. 이 프로토콜은 HTTP 기반으로 동작하며, 주로 다양한 네트워크 조건과 디바이스 환경에서 안정적인 스트리밍을 제공하는 것을 목표로 합니다.

>> PC P2P 클라이언트 개발
>> LIVE 방송 서버 개발
>> 미디어 서버 개발
이거 3개 차이가 뭐야?
https://vod.sooplive.co.kr/player/148152989

REST 스타일 
시나리오 3: Pub/Sub 기반 이벤트

Opencv
  opencv 를 사용하여 얼굴 감지 후 성별과 연령 인식. ; OPEN-source Computer Vision
  Main modules
    core.
    imgproc.
    imgcodecs.
    videoio.
    highgui.
    video.
    calib3d.
      광각적 왜곡을 줄이는 용도
    features2d
    objdetect
    dnn.
    ml.
    flann.
    photo.
    stiching
    gapi.
  Extra modules
    alphamat.
    aruco.
    bgsegm.
    bioinspired.
    ccalib.
    cudararithm.
    cudabgsegm.
    cudacodec.
    cudafeaturse2d.
  >> Codec 이란?
  빛의 3원색 vs 색의 3원색

  jpeg 는 압축률이 높다. png 는 무손실에 가까운? 압축방식??
  ⚓ Flags for video I/O ; https://docs.opencv.org/3.4/d4/d15/group__videoio__flags__base.html
    idiom... cv::VideoCaptureProperties
      # Set desired frame width and height
      cap.set(cv2.CAP_PROP_FRAME_WIDTH, 640)
      cap.set(cv2.CAP_PROP_FRAME_HEIGHT, 480)
    CAP_DSHOW 
      Python: cv.CAP_DSHOW
      DirectShow (via videoInput) 
      https://en.wikipedia.org/wiki/DirectShow
  SAVINg video ; https://docs.opencv.org/3.4/dd/d43/tutorial_py_video_display.html
  카메라를 통한성별, 연령 인식 -> 음성 인식 및 음성된 음성 확인 및 키워드 추출 - >추출된 키워드 기반의 옷 추천 -> 사진 합성을 위한 사용자 촬영

  어깨보다 손이 밖에 있으면 ? 자동으로 카운트? 되도록 해서 사용자와 의상 이미지 합성하여 출력.배경도 똑같이.
    

지향성 마이크 >>
  앱코 마이크
  로컬에 스테이블 디퓨전 ..을 받아와서 사용하는 혀익

LoRA(Low-Rank Adaptation, 저 랭크 적응?)은 Stable Diffusion 모델을 세부 조정하기 위한 학습 기법입니다. Stable
  컨트롤넷으로 사진의 뼈대를 가져와서, 옷 입혀야 함.. 

  ㅒㅔ두퍄ㅜㅐ .. ㄻㅊㄷ ㅇㄷㅅㄷㅊ샤ㅐㅜ. ㅁㅎㄷ, ㅎ둗ㅅㄷㄱ
  ㅆ리ㅑㅅㄷㄴ디랻-ㄴㄸ흐둣ㅁ샤ㅐㅜ
  https://github.com/CMU-Perceptual-Computing-Lab/openpose

차량        ---

Hardware Architecture
  stm32 mcu // RTOS:Free.. ROS      <-->     Embedded Linux jetson nano + 수신호 처리

  RC car (STM32F103 Nucleo-64) <--communication--- Jetson Nano

  - Jetson Nano 는 자신과 연결되어있는 앞면의 USB 카메라로부터 프레임을 받아 교통 수신호 동작 추론을 하고 그 결과에 따라 RC car 에 제어신호 (Go, Stop, Turn left, Turn Right, Slow 중 1개) 를 넘긴다.
  - RC car 는 초음파 센서에 거리가 가까움이 포착되면 (타이머 인터럽트) 자동으로 멈추거나 다른 방향으로 회전한다. 하지만 Jetson Nano 로부터 받은 제어신호를 우선적으로 여긴다.
  - Jetson Nano 는 자신과 연결되어있는 RC 카 뒷부분에 있는 USB 디스플레이에 카메라의 스트리밍을 해준다.
  - Jetson Nano 는 현재 NVIDIA 에서 제공하는 Jetson Nano 이미지로 구워진 디스크에서 사용중이다.
    Jetson Nano 위에는 도커 컨테이너 (객체 탐지 및 Rc car에 결과 전송하는 프로그램) 작동한다.
  - 하지만 이를 최적화하기 위해 Jetson Nano layer 로 Yocto 로 필요한 것만 구성하려고 한다.

  그렇다면 지금 이 상황에서 QEMU 가 ARM 에뮬레이터로서 어떤 범위까지 커버할 수 있는가? 그렇지 않은 부분은 어떤 범위이고 이 부분은 실제 기기로 연결해서 테스트해야 하는가?

  Ubutnu 22 amd 64 에서 크로스 컴파일로 arm64 용 빌드.

  Yocto는 빌드된 이미지를 QEMU에서 테스트할 수 있도록 지원하는 runqemu 스크립트를 제공.
guvcview


>>>>>>>>>> https://netron.app/ 모델 학습 어떻게 됬는지 확인
⭕ Functional API !1
  https://www.tensorflow.org/guide/keras/functional_api


  class Layer(BackendLayer, Operation, KerasSaveable):
    @traceback_utils.filter_traceback
    def __call__(self, *args, **kwargs):
      ...
      # 실제로 레이어 연산을 수행하기 위해 상위 클래스의 __call__ 호출
      outputs = super().__call__(*args, **kwargs)
      ...
      return outputs

    ?? Keras.. method chaining pattern.. 


  super()는 부모 클래스의 메서드를 호출할 때 사용되지만,
  
  다중 상속 상황에서는 MRO에 따라 메서드 탐색이 . 즉, super().__call__(*args, **kwargs)는 MRO에서 가장 먼저 나오는 부모 클래스의 __call__() 메서드를 호출합니다.
  BackendLayer 에는 없고, Operation 에는 있다.
  
  - call() 은 예약어가 아님.. __call__() 은 예약어이고. call() 은 텐서플로우 내부적으로 사용하는 함수.
    __call__() 은 다음과 같이 인스턴스를 함수처럼 사용할 때 호출됨.
      model = Flatten()(model) # 이전 ANN dataset 학습 시 사용한 Functional API 호출 방식.

  - MultiHeadAttention layer 는 Layer 클래스를 상속받음.
  
  - class Layer 는 def __call__() 에서 super().__call__() 를 사용한다.
    이는 부모 클래스 (Layer 는 다중 상속됨) 중 MRO (Method Resolution Order) 에 따라 __call__() 이 정의되어있는 클래스를 찾아서 해당 함수를 호출합니다. 여기에서는 keras.src.ops.operation.Operation.

    @keras_export(["keras.Layer", "keras.layers.Layer"])
    class Layer(BackendLayer, Operation, KerasSaveable):
        """
        This is the class from which all layers inherit.
        A layer is a callable object that takes as input one or more tensors and that outputs one or more tensors. It involves computation, defined in the call() method, and a state (weight variables).
        ...
        """
        @traceback_utils.filter_traceback
        def __call__(self, *args, **kwargs):
          ...
            ####################
            # 7. Call the layer.
            ...
                    if new_scope is not None:
                        with new_scope:
                            outputs = super().__call__(*args, **kwargs)
                    else:
                        outputs = super().__call__(*args, **kwargs)
  - 결국 이 곳에서 call() 함수를 호출합니다.
    // keras.src.ops.operation.Operation
    @traceback_utils.filter_traceback
    def __call__(self, *args, **kwargs):
        # Plain flow.
        if any_symbolic_tensors(args, kwargs):
            return self.symbolic_call(*args, **kwargs)
        if getattr(self, "quantization_mode", None) is not None:
            return self.quantized_call(*args, **kwargs)
        else:
            return self.call(*args, **kwargs)

    코드에서 traceback_utils.is_traceback_filtering_enabled()를 확인하는 이유는, 예외가 발생할 때 더 유용한 디버깅 정보를 제공하기 위해서입니다. 이 부분은 call 메서드를 감싸서, 예외가 발생하면 추가적인 정보를 제공하도록 설계되었습니다.
    레이어가 심볼릭 텐서를 사용하는 경우에는 self.symbolic_call를 호출.
    만약 양자화(quantization) 모드가 활성화된 경우에는 self.quantized_call를 호출
    그 외에는 기본적으로 self.call 메서드를 호출됩니다.
  📰 TODO
    // 고차함수 구현해보기

@keras_export("keras.Operation")
class Operation:

>>>>>>>>>>>>> 크롤링 한 이미지: svg, png .. waifu ncnn py 로 wsl 에서 확대 시 색상이 이상해지는 문제?

📰 Real-ESRGAN >> 사용해보자. WSL, Ubuntu 에서 모두 작동한다고 한다.  📅2024-09-17 01:46:50
  https://github.com/xinntao/Real-ESRGAN
  Real-ESRGAN은 최근에 발표된 최신 이미지 업스케일링 모델로, 기존의 ESRGAN(Enhanced Super-Resolution GAN)을 개선한 버전입니다. 특히 일반 사진 및 애니메이션 업스케일링에서 뛰어난 성능을 보여줍니다.
    장점
    고해상도 업스케일링에 적합하며, 특히 노이즈가 있는 이미지나 디테일이 많은 이미지에서 우수한 성능을 발휘합니다.
      Waifu2x처럼 애니메이션과 일반 이미지 둘 다에 잘 동작합니다.
      이미지의 전반적인 품질을 크게 향상시키며, 세부 사항이 잘 유지됩니다.

    단점:
      SRGAN보다 구현이 복잡하고, 더 많은 연산 자원이 필요할 수 있습니다.
      특히 저성능 GPU에서는 학습 및 추론 시간이 길 수 있습니다.


"editor.tabSize": 2
  + auto detect..

🪱 req ; https://en.wiktionary.org/wiki/req
  Abbreviation of request.
Runet GoogleNet VGGNet, RNN/LSTM .. Segment detection 이후 
  Attention, Sequneced Sequnece.. Tansformer 기반 GPT?

  GoogleNet; 3가지 특징
    inception, 보조 분류기 (gradient vanisihin 문제 해결), global average poolin (연산량 줄임)
      ?? 왜 어떻게 문제해결한거지 어떻게
ResNet
  가장 깊고 성능이 좋은 네트워크. Revolution of depth.
    better recognition than human. 깊이의 혁명
  input 을 주기적으로 넣어주는 skip connection 구조.
  output size가 줄 때마다, 채널을 2배씩 늘어남.
  1*1.. ? 으로 연산량을 왜..
  bottleneck layer: 1*1. 3*3. 1*1.. 이거 왜 사용/ 이게무슨구조?
    improve efficiency. simliar to googleNet
  Residual running.
  weight layer... 차분 구조..? weighting 에 반영이 된다..
Image Localization: CNN Class Activiation Map;
  왜 그렇게 판단했는지 판단하는ㄱ ㅓㅅ.
  CNN Class Activation Map
  Fully Conneced layer 대신 Global average polling (GAP) 이라는 개념을 도입
  !!! 공간적인 특징을 가지고 있다. 이를 yolo 에서도 사용한다.

  Grad-CAM..
  ReLU
  Grad-CAM 으로 .. Heatp map 구성?
  🚣 >>> "Imagenet 1000 class list" search.
  FCN models..
Segmentation
  픽셀 단위의 예측을 위한 최초의  둥-새-둥  방식.
    skip cmbine downsampling upsampling
    ???
  Fully Convolutionalization
    FC 계층을 모두 Conv 계층으로 대체헤 히트맵을 획득.

  input image title --> output segmentation map
  약간 사이즈 차이가 있을 수 있음. concatenate 해서 붙인다고 함.
💡 Confusion Matrix
  + 정확도와 재현율의 차이?
    예를 들어 암세포... 에 대해서 있는 것들을 다 찾아내는 것이 중요해서.. 
    Precision, Recall
    🪱 PR Cruve... 서로 반비례하는 특성. 왜?
    🪱 iOU
Object Detectoin Yolu
  멀티 레이블 이미지 분류와 바운딩 박스 회귀를 위한 기본적인 영역을 정하기 어려운 문제가 있음.

  models
    2-Stage model
      Region proposal -> classification (Plain cnns) -> multi-class classification, bounding box regression
      e.g. RCNN, fastRCNN, fasterRCNN
    1-Stage model
      Conv layers (Faeature extraction) -> Features Map -> For each grid/spatial location
      e.g. Yolo, SSD
      두 가지 네트워크를 하나로 합해 효율성을 극대화시킬 수 있는 1-stage
      2-stage network 는 정확하고 느린데, 1-stage 는 빠른데 정확도는 다소 떨어짐.
      각 그리드 셀은 하나의 클래스만을 예측하기 때문에 객체가 겹쳐 있으면 제대로 예측하기 어려움.


  🆚 RCNN, fastRCNN, fasterRCNN
    fasterRCNN 은 ROI pulling? pollinG? 이라는 것을 한다고 한다. RPN
      정사각형 영역을 만들기 위해 resize를 하는 것이 아니라 pooling 을 사용한다?
      >> resize 를 함으로서 왜곡문제를 해결한다고 한다?
  🔪 1-Stage object detection
    -------------------- CNN Layers --------------------
    spatial details <---- Our approach ---> Semantics
    ..? Semantics (?? Last layer of CNN e.g., fc7 in VGGNet)
  x, y, w, h,confidnence, probability of class 를 같이 가지고 있음.. grid cell? 이 뭐지?
  bounding box descripter
    ??tx1
  iou .. Intersection over Union.. 

  🚣 Yolo V3 (Prediction Across Scales)
    ?? 13*13, 26*26, 52*52  
  Feature Pyramid.. ?map?
  Dark architecture again?
2023 년 LLM. 덴마크 공대. 미래 생성하는 모델 개발.
multi-modal.. 언어와 영상을 통합하는?..
  언어모델?
  RNN-> LSTM -> Seq2Seq -> Attension -> Transformer -> GPT-1 -> BERT -> GPT-3 (2020) -> GPT-3.5 (2022)
    Long Short-Term Memory
    🪱 Hyperbolic tangentH..
    이전의 셀 상태

  RNN: 언어의 순서 처리를 위해 recursive한 path 생성. gradiant vanishing 문제 생성.
  Attension: 데이터가 순서대로 들어가야해서 batch 를 쓰기가너무 어려움. 동시에 넣을 수 있도록 Transformer 에서 순서를 표시할 수 있도록 개선..
Open source vs Private Models, 5-Shot MMLU Performance
  https://www.aitimes.com/news/articleView.html?idxno=155196
Non-sequential Data, Sequential Data
  순서가 있는 인공신경망 구조? 벡터 표현?

시간 개념을 반영할 수있는 인공 신경망..
  one ton one
  one to many
    image captioning?
  many to one
  many to many
    .. 2 종류..
    🪱 Abnormal Score 
  encoading block? decoading block?
  forward path.. h_t = f
단어 임베딩.:컴퓨터가 단어의 의미를 이해하고 처리할 수 있도록 단어를 벡터로 변환.
  tensor 의 embedding?
  단어의 긍정/부정적인 것을 분류?
  https://word2vec.kr/search/
Word2Vec -> CBOW, Skip gram.
  Continuous Bag of Words.
  Skip gram 모델
FastText // Facebook
ELMo- Embeddings from Language Models
Seq2Seq
  Neural Machine Translation...
  encoder--->
    LSTM (I) -> LSTM (am) -> LSTM (a) -> LSTM (student)..
  --> contenxt
  decoder
    LSTM(...) -> ...
  hideen layer 랑 합쳐져셔?..
Attention
  단어 간의 내적을 계산한다. 상관관계; attension score?
  ??? Attention mechanism
  start of sentence?
  coefficient?
  >>>>> 여기서 key, query, value 가 히든 벡터인데 transformer 에서는 hidden vector 가 아니라고 한다? 
  컨텍스트 벡터
  문제점
    입력 시퀸스를 순차적으로 처리해서 병렬 처리  
positional encoading?
  sign(주파수 + ...)
    주파수가 다른 애들끼리는 내적이 0이 된다?위치마다 서로 다른 frequency 를 ..
Attention Is All You Need
  https://arxiv.org/abs/1706.03762
  .. "Add & Norm" 이 batch 가 아니라 layer normalization 라는데 무슨 뜻이야?
  GPT 에서는 ?? 뭐가 빠진다고 함..

  https://codingopera.tistory.com/43
  cross-attention
  maksed self-attention
  encoder-decoder cross-attention ?? 이게 뭐야...
🪱 turn-by-turn navigation ; https://en.wiktionary.org/wiki/turn-by-turn_navigation#English
🪱 emergent abilities .. in GPT?
  in-context learning ? meta-learning? zero short inference ?
  GPT 3~ Hallucination 제거.
  AI Open Community
RNN .. SimpleRNN 에서(Return sequences=True) ???

🌟 AI 인공지능 경진대회 ; https://dacon.io/
  >>> keras vision 코드 snippet ; https://keras.io/examples/vision/
    https://keras.io/examples/vision/video_classification/
      RNN; Sequentiald data.. 동작 판단.
      CNN-RNN 같이 사용 이유?
    https://keras.io/examples/vision/video_transformers/

    ... https://keras.io/api/layers/attention_layers/multi_head_attention/

>> 오픈비노 -> 라즈베리 파이에 올려서 테스트 가능.



RNN: Abnormal Score: Min square error.... 로 사용?? 왜?
  forward path.

ELMO ? deep contexturalized word Embeddings from Language Models
  BERT 와 차이? BERT 는 encoder만 있어서 순서대로 나오지 않는다? 자연어 처리?
  gpt 5 sora 5

⚓ Convolutional Neural Network ; https://en.wikipedia.org/wiki/Convolutional_neural_network
  # Fully connected layers
    🪱 logit; 모델의 예측 값에 대한 선형 결합 ??
      이 logit은 정답 확률로 변환되어야 하는데, 그때 사용하는 것이 활성 함수입니다.
# Differentiable computing 
  # Concepts
    ⚓ Activation function ; https://en.wikipedia.org/wiki/Activation_function
      # Contents
        The activation function of a node in an artificial neural network is a function that calculates the output of the node based on its individual inputs and their weights.
        #️⃣💡 Mathematical details ; https://en.wikipedia.org/wiki/Activation_function#Mathematical_details
          # Ridge Activation Functions:
            - ⚓ ReLU (Rectified Linear Unit) | rectifier ; https://en.wikipedia.org/wiki/Rectifier_(neural_networks)
              # Variant ; https://en.wikipedia.org/wiki/Rectifier_(neural_networks)#Variants
                - ELU (Exponential Linear Unit)
            - Leaky ReLU

          # Radial Activation Functions:
            - Radial Basis Function (RBF)
            - Gaussian Activation Function

          # Folding Activation Functions:
            - ⚓ Sigmoid function ; https://en.wikipedia.org/wiki/Sigmoid_function
              🪱 sigmoid curve
            - Tanh (Hyperbolic Tangent)
            - ⚓ Softmax function | Normalized exponential function | softargmax ; https://en.wikipedia.org/wiki/Softmax_function
              .. 여기서 z_i​는 **출력 노드 i**의 logit, **N**은 클래스의 총 개수입니다.

🌟 Mathematical notation ; https://en.wikipedia.org/wiki/Mathematical_notation
  ⚓ Hat notation ; https://en.wikipedia.org/wiki/Hat_notation
    In statistics, a circumflex (ˆ), called a "hat", is used to denote an estimator or an estimated value.
  << Mathematical operators and symbols in Unicode ; https://en.wikipedia.org/wiki/Mathematical_operators_and_symbols_in_Unicode
  << ⚓ Glossary of mathematical symbols ; https://en.wikipedia.org/wiki/Glossary_of_mathematical_symbols
    # Calculus
      << ⚓ cursive d ; https://en.wikipedia.org/wiki/%E2%88%82
        ... usually to denote a partial derivative such as ∂ z / ∂ x {\displaystyle {\partial z}/{\partial x}} (read as "the partial derivative of z with respect to x").
        어떤 변수를 기준으로 그 함수의 변화를 측정한다고 표현하므로 "with respect to" (; ~에 관하여) 를 사용.
    # ℝ; Real number ; https://en.wikipedia.org/wiki/Real_number
    # ℝⁿ; Real coordinate space ; https://en.wikipedia.org/wiki/Real_coordinate_space
      ℝ¹, ℝ², ℝ³ ...
      Eⁿ (Euclidean -)
      E¹ (Euclidean line)
      E² (Euclidean plane)
      E³ (Euclidean three-dimensional space)
Hidden이라는 용어는 입력층과 출력층 사이에서 발생하는 중간 계산을 설명하기 위해 사용됩니다. RNN에서는 은닉 상태가 이전 타임스텝의 정보를 저장하고, 이를 바탕으로 다음 타임스텝에 전달됩니다. 이때의 중간 정보들이 외부에서는 보이지 않지만 중요한 정보이므로 **"Hidden"**이라고 불립니다.
1.
"""
Rectification (정류) 개념에서 온 것입니다. 원래 rectifier는 교류(AC)를 직류(DC)로 변환하는 장치를 의미합니다. ReLU는 음수 입력을 0으로 변환하는데, 이는 전기 공학에서 교류 신호의 음수 값을 없애는 과정과 유사합니다.
ReLU의 수식:
ReLU(x)=max⁡(0,x)
ReLU(x)=max(0,x)

    입력 값이 0보다 크면 그대로 출력되고, 0보다 작으면 **0으로 "정류"**됩니다.
"""
를 영어로. 


2. 선형성과 비선형성을 영어로. wikipedia 에 문서가 있나?

Gradient Vanishing

Feed Forward 가 뭐야? Dense layer 라고 하는건가?


TODO: crawling
  python docs
  "sidebar" like in https://en.wikipedia.org/wiki/Softmax_function
  "navbox" like in https://en.wikipedia.org/wiki/Softmax_function
  vscode docs

⚓ Functional Programming ; https://en.wikipedia.org/wiki/Functional_programming
  ⚓ fold | reduce | accumulate | aggregate | compress | inject ; https://en.wikipedia.org/wiki/Fold_(higher-order_function)
    💡 ... refers to a family of higher-order functions that analyze a recursive data structure and through use of a given combining operation, recombine the results of recursively processing its constituent parts, building up a return value. 
CoCo format. 

👍 Sites
  Youtube 요약 - Lily
  Power Point AI 조수 - Gamma https://gamma.app/
  Ai Video 생성기 - https://www.heygen.com/

Ctrl + Shift + U. >> Unicode input
>>>>>>>>>>> VSCOde extension ; Unicode Latex https://marketplace.visualstudio.com/items?itemName=oijaz.unicode-latex
  X.. latex 문법과 조금씩 다름.
  or Latex - (Ctrl+Alt+X): Side bar tab - Snippet view  e.g. Letter syltes - \mathbb{R} 
>>>>>>>>>>> VSCOde extension ; Insret Unicode ; https://marketplace.visualstudio.com/items?itemName=brunnerh.insert-unicode
  ℝ Double-STRUCK CAPTIAL R
  Advantages: human-readable.¹₁
  e.g. superscript, subscript
  + math preview
  \(X^{sup}_{sub}\)

  \int_{a}^{b} f(x) \, dx
\( ax + by + cz + d = 0 \)
\[\frac{\partial}{\partial x} (ax + by + cz + d) = a, \quad \frac{\partial}{\partial y} (ax + by + cz + d) = b, \quad \frac{\partial}{\partial z} (ax + by + cz + d) = c\]
https://marketplace.visualstudio.com/items?itemName=Hyeon.c-math-viewer



TODO: https://en.wikipedia.org/wiki/Activation_function#Table_of_activation_functions
  https://en.wikipedia.org/wiki/Ridge_function
Gaussian-error linear unit (GELU)



https://docs.ultralytics.com/#yolo-a-brief-history
YOLOv8 is the latest version of YOLO by Ultralytics. 

  https://docs.ultralytics.com/datasets/detect/coco/

yolo 8
  ⚓🚣 Yolo clsses name ;
    https://github.com/ultralytics/ultralytics/blob/main/ultralytics/cfg/datasets/coco.yaml
  # https://github.com/ultralytics/ultralytics
  git clone https://github.com/ultralytics/ultralytics.git
  👍 IDE integration; https://docs.ultralytics.com/integrations/vscode/
    https://marketplace.visualstudio.com/items?itemName=Ultralytics.ultralytics-snippets

wbfw109v2@wbfw109v2-500TFA-500SFA ~/r/i/p/python-study (main) [1]> poetry add torch=^2.4.1
  Updating dependencies
  Resolving dependencies... (0.4s)

  Because no versions of torch match >2.4.1,<3.0.0
  and torch (2.4.1) depends on nvidia-cudnn-cu12 (9.1.0.70), torch (>=2.4.1,<3.0.0) requires nvidia-cudnn-cu12 (9.1.0.70).
  And because tensorflow[and-cuda] (2.17.0) depends on nvidia-cudnn-cu12 (8.9.7.29)
  and no versions of tensorflow match >2.17.0,<3.0.0, torch (>=2.4.1,<3.0.0) is incompatible with tensorflow[and-cuda] (>=2.17.0,<3.0.0).
  So, because python-study depends on both tensorflow[and-cuda] (^2.17.0) and torch (^2.4.1), version solving failed.

  CUDA와 cuDNN을 직접 설치한 후에는 tensorflow를 tensorflow[and-cuda] 없이도 GPU에서 사용할 수 있습니다. tensorflow 기본 패키지 자체는 CPU와 GPU 모두에서 동작할 수 있도록 설계되어 있으며, 사용자가 CUDA 및 cuDNN을 수동으로 설치할 수 있습니다.
  ➡️ tensorflow 에서 지침대로 설치했더니 문제가 되는듯.. tensorflow[and-cuda] 를 지우고 cuda 를 개별적으로 설치해보자. tensorflow 만 설치되도록 해보자.

>>>>>>>> bash script
  Shell Parameter Expansion ; https://www.gnu.org/software/bash/manual/html_node/Shell-Parameter-Expansion.html
    ${parameter:+word}
    🛍️e.g. idiom
      export PATH=/usr/local/cuda-12.6/bin${PATH:+:${PATH}}


Ubuntu ESM (Expanded Security Maintenance)
# if remote os is linux, ... otherwise it may requires Xming, XQuartz
sudo apt install -y xauth
xauth란?
  xauth는 "X Authority"의 약자이며, X11 서버가 클라이언트에게 접근 권한을 부여하기 위해 사용하는 인증 정보를 관리하는 도구입니다. X11은 네트워크를 통해 그래픽 인터페이스를 전송할 수 있는데, 이때 클라이언트가 X 서버에 접근할 때 권한을 확인해야 합니다. xauth는 이러한 접근을 위한 인증 파일(.Xauthority 파일)을 관리합니다.
  X11 포워딩을 사용할 때, 원격 서버가 로컬 X 서버에 접근할 수 있도록 인증 정보를 공유하는 역할을 하며, 원활한 그래픽 전송에 필요합니다.
choco install vcxsrv
  https://community.chocolatey.org/packages/vcxsrv
  %shell: Powershell> XLuanch
    Select display settings; Choose how Xming displays programs
      ✔️ Multiple Windows
    Select how to start Xming; Choose session type and whether a client is tsarted immediately.
      ✔️ Start no client
        This will just start Xming. You will be able to start local clients layer.
    Speicify paraemter settings; Enter clipboard, remote font server, and all other parameters.
      ✔️ Clipboard
    ... 📰📝 Can not find Native OpenGL option
      
nameserver의 의미와 윈도우 IP 주소: cat /etc/resolv.conf | grep nameserver 명령은 WSL2의 네트워크 설정에서 DNS 서버 주소를 보여줍니다. 이 nameserver는 일반적으로 윈도우 시스템의 내부 네트워크 IP 주소를 나타냅니다. 이 IP 주소는 WSL2가 윈도우와 통신하는 네트워크 인터페이스에서 할당된 것으로, 로컬 윈도우의 X 서버와 통신하기 위해 사용됩니다.
  

https://docs.openvino.ai/2024/notebooks/async-api-with-output.html
OpenVINO Training Extensions ; https://openvinotoolkit.github.io/training_extensions/stable/guide/get_started/introduction.html
  https://openvinotoolkit.github.io/training_extensions/stable/guide/get_started/installation.html#install-openvino-training-extensions-for-users-cuda-cpu
  https://openvinotoolkit.github.io/training_extensions/stable/guide/get_started/installation.html#run-tests
mermaid 그래프에 추가.
  tensort / openvino .. 

🚣 OTX as docker
  git clone https://github.com/openvinotoolkit/training_extensions.git
  cd training_extensions/docker
  bash ./build.sh
  docker image ls | grep otx
  export OTX_VERSION=2.1.0
  docker run -it --rm -v ~/data:/workspace/data otx:${OTX_VERSION}-cuda /bin/bash
  docker run -it --rm otx:${OTX_VERSION}-cuda otx train --task classification --model mobilenet_v2 --train-data /tmp/train --val-data /tmp/val --output /tmp/output
sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 1
ModuleNotFoundError: No module named 'otx'
  poetry shell로 가상환경을 활성화한 상태에서 sudo를 사용하면, root 권한으로 실행되기 때문에 가상환경이 제대로 적용되지 않는 문제가 발생합니다. sudo는 기본적으로 새로운 세션에서 실행되기 때문에, 현재 활성화된 가상환경 정보가 root 사용자에게 전달되지 않습니다. 이 때문에 ModuleNotFoundError가 발생한 것입니다.
  cd ~/repos/synergy-hub/prototypes/python-study && poetry shell
  docker build 명령어가 기본적으로 root 권한을 필요로 하기 때문일 가능성이 있습니다. 하지만, 기본적으로 Docker는 sudo 없이 실행될 수 있도록 설정할 수 있습니다. 즉, Docker를 sudo 없이 실행할 수 있도록 권한 설정을 해두지 않았을 경우 sudo가 필요하게 됩니다.
    # -a: append. G: group
    sudo usermod -aG docker $USER
    newgrp docker # new group
CDMA; LTE, 5G




nvidia-persistenced
  Roles
    - GPU 드라이버 상태 유지: nvidia-persistenced 데몬은 GPU의 드라이버 상태를 여러 작업 사이에 유지합니다. 이는 GPU가 작업을 종료할 때마다 드라이버가 해제되고 다시 로드되는 것을 방지하기 위해 사용됩니다.
    - 성능 향상: 드라이버 상태를 유지함으로써, 작업 간 드라이버 로드 및 초기화 시간을 줄이고 성능을 최적화할 수 있습니다.
  WSL 에서 flask 로 model 을 추론하고 돌려보내주는 서버를 만들 떄 로딩시간이 매우 길어질 수 있다. (이전 경험...)
    nvidia-persistenced가 도움이 될 수 있는 상황이 바로 그런 경우입니다. Flask 서버에서 모델 추론을 수행할 때, 특히 WSL 환경에서 GPU를 사용하는 경우, 드라이버가 초기화되는 데 시간이 걸릴 수 있습니다. 매번 새로운 추론 요청이 들어올 때 GPU가 다시 초기화되는 문제가 발생할 수 있고, 이로 인해 긴 로딩 시간이 생길 수 있습니다.


Current pwd: /home/wbfw109v2/repo/synergy-hub 
  e.g. %shell>
    yolo train data=/home/wbfw109v2/datasets/kct-yh2hv-cat_dog_dataset-2023-01-30-2015/data.yaml model=yolov8n.pt epochs=10 batch=4 && \
    yolo val data=/home/wbfw109v2/datasets/kct-yh2hv-cat_dog_dataset-2023-01-30-2015/data.yaml model=yolov8n.pt split=test && \
    # check result files in /home/wbfw109v2/datasets/kct-yh2hv-cat_dog_dataset-2023-01-30-2015/runs/detect/val. you can see also confusion_matrix.png


yolo v8
wbfw109v2@wbfw109v2-500TFA-500SFA ~/r/synergy-hub (main)> yolo help

    Arguments received: ['yolo', 'help']. Ultralytics 'yolo' commands use the following syntax:

        yolo TASK MODE ARGS

        Where   TASK (optional) is one of {'detect', 'segment', 'pose', 'classify', 'obb'}
                MODE (required) is one of {'benchmark', 'predict', 'train', 'val', 'track', 'export'}
                ARGS (optional) are any number of custom 'arg=value' pairs like 'imgsz=320' that override defaults.
                    See all ARGS at https://docs.ultralytics.com/usage/cfg or with 'yolo cfg'

    1. Train a detection model for 10 epochs with an initial learning_rate of 0.01
        yolo train data=coco8.yaml model=yolov8n.pt epochs=10 lr0=0.01

    2. Predict a YouTube video using a pretrained segmentation model at image size 320:
        yolo predict model=yolov8n-seg.pt source='https://youtu.be/LNwODJXcvt4' imgsz=320

    3. Val a pretrained detection model at batch-size 1 and image size 640:
        yolo val model=yolov8n.pt data=coco8.yaml batch=1 imgsz=640

    4. Export a YOLOv8n classification model to ONNX format at image size 224 by 128 (no TASK required)
        yolo export model=yolov8n-cls.pt format=onnx imgsz=224,128

    5. Explore your datasets using semantic search and SQL with a simple GUI powered by Ultralytics Explorer API
        yolo explorer data=data.yaml model=yolov8n.pt
    
    6. Streamlit real-time webcam inference GUI
        yolo streamlit-predict
        
    7. Run special commands:
        yolo help
        yolo checks 
        yolo version
        yolo settings
        yolo copy-cfg
        yolo cfg

    Docs: https://docs.ultralytics.com
    Community: https://community.ultralytics.com
    GitHub: https://github.com/ultralytics/ultralytics

    yolo train --data 



Road Traffic Controller
traffic controller Hand Gesture

#!/bin/bash
sudo chmod 664 /mnt/gdrive/book/*

실무에서는
yolo8
  torch

비보호 좌회전 보조 시스템.
비보호 사고량 감소 및 개념 확립.

ADAS 시스템 수신호
  Dataset download
    wget --recursive --no-parent --no-host-directories --cut-dirs=3 --reject "index.html*" https://mwt-www.e-technik.uni-ulm.de/downloads/publicData/Kern2023/misc/


%shell>  # check directory structure
  wget --spider --recursive --no-parent https://mwt-www.e-technik.uni-ulm.de/downloads/publicData/Kern2023/
  rclone tree https://mwt-www.e-technik.uni-ulm.de/downloads/publicData/Kern2023/
  rclone lsf --recursive https://mwt-www.e-technik.uni-ulm.de/downloads/publicData/Kern2023/



🆚 ROI, bounding box
  https://universe.roboflow.com/yolodataset/person-dataset-mvbk4
2024/05/24
  ✔️ latex
    for file in note/sorted_note/*.tex; latexmk -pdf -lualatex -synctex=1 -interaction=nonstopmode -auxdir=/tmp -outdir=(pwd)/build/note $file; end

    latexmk -pdf -lualatex -synctex=1 -interaction=nonstopmode -f -auxdir=/tmp -outdir=$(pwd)/build/note note/sorted_note/about_vector.tex
    for file in note/sorted_note/*.tex; latexmk -pdf -lualatex -synctex=1 -interaction=nonstopmode -f -auxdir=$(pwd)/build/tmp -outdir=$(pwd)/build/note $file; end
    EXINPUTS=.:$(pwd)/note/sorted_note//: latexmk -pdf -lualatex -synctex=1 -interaction=nonstopmode -f -auxdir=/tmp -outdir=$(pwd)/build/note note/sorted_note/*.tex

    env TEXINPUTS=.:$PWD/note/sorted_note//: latexmk -pdf -lualatex -synctex=1 -interaction=nonstopmode -f -auxdir=$PWD/build/note -outdir=$PWD/build/note $PWD/note/sorted_note/about_vector.tex
    >>> 🅾️ env TEXINPUTS=.:$PWD/note/sorted_note//: latexmk -pdf -lualatex -synctex=1 -interaction=nonstopmode -auxdir=$PWD/build/note -outdir=$PWD/build/note $PWD/note/sorted_note/about_vector.tex -f
  ✔️✅ (how-to); study scanned Book
    * orders
      1. Download Pdf viewer
        * For Windows, https://community.chocolatey.org/packages/okular
          %shell> choco install okular
        * For Linux, https://snapcraft.io/okular
          %shell> snap install okular
      2. Syncrhonize Google Drive
        * For Windows, https://community.chocolatey.org/packages/googledrive
          %shell> choco install googledrive
          and drag and drop any unused files, right-click and set 'Offline Access - ✔️ Available offline'.

        * For Linux
          use Rclone (MIT License)
            https://rclone.org/
            https://en.wikipedia.org/wiki/Rclone
            https://github.com/rclone/rclone
          Install ; https://rclone.org/downloads/
            sudo -v ; curl https://rclone.org/install.sh | sudo bash && \ 
            rclone config
            # ... many settings..; e.g. 19: google drive
          🛍️ e.g. 
            Google cloud API wbfw109v2 Oauth client json file.
              OAuth client created
                Client ID
                    279512517955-mlohe28s7f294fv996t4c6j9b3fjv98i.apps.googleusercontent.com
                Client secret
                    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
                Creation date
                    September 10, 2024 at 10:07:42 AM GMT+9
                The client ID and secret can always be accessed from Credentials in APIs & Services 
            https://rclone.org/drive/#making-your-own-client-id
            https://console.cloud.google.com/apis/library/drive.googleapis.com?project=inner-geography-435200-k4&supportedpurview=project
            https://en.wiktionary.org/wiki/consent
            https://developers.google.com/drive/api/guides/api-specific-auth
            https://developers.google.com/identity/protocols/oauth2/
            https://support.google.com/cloud/answer/10311615#user-type
          Syncrhonize  
            # ??? not use mount location as /mnt/. it requires permission when save file in pdf viewer Ockular
            🛍️ e.g. %shell> sudo rclone --config ~/.config/rclone/rclone.conf sync gdrive:book ~/drive/gdrive/book
            //📍 쓰기 권한 부여하기!!
              sudo chown -R $USER:$USER ~/drive
              sudo chmod -R u+w ~/drive
              

        ❓...1주일마다 토큰 발급받아야하나? dd.. 인증화면이뜬다고 한다.. rclone 에서 파일동기화 또는 접근하는 명령 사용 시..
          또는 수동 갱신 명령 sudo rclone sync gdrive:book /mnt/gdrive/book
        >>> sudo rclone sync gdrive:book /mnt/gdrive/book
        # Check the list of all configured remotes (such as Google Drive, OneDrive, etc.)
        sudo rclone listremotes --config ~/.config/rclone/rclone.conf
      
        ### synchronize when you want
        ## ⭕ firstly use with flag --dry-run for safe operation
        ## Use this when you want to download or update the local folder with the latest changes from Google Drive.
        # upload from local file to remote file
        # sudo rclone sync ~/drive/gdrive/book gdrive:book --config ~/.config/rclone/rclone.conf

        # Use this when you want to upload or update the Google Drive folder with the latest changes from the local folder.
        

        rclone mount는 원격 드라이브를 파일 시스템처럼 다루지만, 파일 단위로 데이터를 처리합니다. 즉, PDF 파일을 수정할 때마다 전체 파일이 다시 업로드됩니다. 따라서 PDF 파일에 주석을 추가하거나 수정하면, 파일 전체(예: 300MB)를 다시 업로드하게 됩니다. rclone mount는 파일의 일부만 변경하는 방식으로 동작하지 않기 때문에, 주석만 수정된 경우에도 전체 파일을 다시 동기화합니다.  
        일부 클라우드 스토리지 서비스는 네이티브 클라이언트(예: Google Drive의 공식 클라이언트)에서 차등 동기화(파일의 일부만 변경된 경우, 그 부분만 업로드)를 지원할 수 있지만, rclone에서는 이러한 기능이 제공되지 않습니다.

        🚨 (Issue: Bug); Could not open file:///home/wbfw109v2/drive/gdrive/book/...
          만약 Snap으로 설치된 Okular에서 이러한 문제가 발생했다면, Snap의 보안 샌드박스 때문일 수 있습니다. 이 경우 Snap 대신 apt로 설치된 버전을 사용하는 것이 좋습니다.
            ...
          sudo snap remove okular
          sudo apt update
          sudo apt install -y okular
        O 맞음;;
  >>>>>
    동작판별을 위한 데이터셋 다운로드 및 사용방법 체크
    ⚓ Hierarchical Data Format (HDF) ; https://en.wikipedia.org/wiki/Hierarchical_Data_Format
    * Action recognition

    * Action recognition
      - PoseC3D: A newer approach that uses a combination of pose information and 3D convolutions to detect actions based on pose sequences.
        It's a top choice for cases where the focus is on human movements rather than environmental context.

    rtxa 6000...  
      빌릴 수 있다고 한다.

    


📰면접.. NVIDIA TensorRT vs. Cuda vs OpenVINO
  CUDA is a parallel computing platform and programming model created by NVIDIA.
  TensorRT is an SDK designed specifically for deep learning inference acceleration on NVIDIA GPUs.

  TensorRT
  pytorch -> .pt
  keras -> .keras

🚣 Labeling tool
  https://www.cvat.ai/





Ctrl + Alt + -
Ctrl + Shift + -

>>>>>>>> in fish, poetry add (grep -v '^#' requirements.txt)

https://github.com/openvinotoolkit/openvino_notebooks/tree/2023.1/notebooks/001-hello-world

poetry add openvino>=2024.2.0 nncf>=2.11.0
poetry source add pytorch https://download.pytorch.org/whl/cpu
poetry add --source pytorch "surya-ocr==0.4.0" torch datasets "gradio>=4.19" Pillow


poetry add openvino nncf
poetry add torch datasets
poetry add openvino nncf surya-ocr torch datasets gradio pillow

sudo apt install python3-tk
import matplotlib
matplotlib.use("TKAgg")


os.environ["GIT_CLONE_PROTECTION_ACTIVE"] = "false"

%pip install -q "openvino>=2024.2.0" "nncf>=2.11.0"
%pip install -q --extra-index-url https://download.pytorch.org/whl/cpu "surya-ocr==0.4.0" torch datasets "gradio>=4.19" Pillow


????????????
AVX-512 ????
  ROcm

Distribution  이 pip, openvino archives, apt, github 로  많던데 뭐로 설치 해야 하지? https://docs.openvino.ai/2024/get-started/install-openvino.html?PACKAGE=OPENVINO_BASE&VERSION=v_2024_4_0&OP_SYSTEM=LINUX&DISTRIBUTION=ARCHIVE
Machine leraning Pipeline; MLOps
  DL Type
  Data preparation
  Train
  Optimization
  Deployment
Open VINo ; https://en.wikipedia.org/wiki/OpenVINO
  https://github.com/openvinotoolkit/openvino_notebooks/tree/2023.1/notebooks/004-hello-detection
  https://github.com/openvinotoolkit/openvino_notebooks/tree/2023.1/notebooks/003-hello-segmentation
  https://github.com/openvinotoolkit/openvino_notebooks/blob/latest/notebooks/vehicle-detection-and-recognition/vehicle-detection-and-recognition.ipynb
  Monodepth Estimation with OpenVINO ; https://docs.openvino.ai/2024/notebooks/vision-monodepth-with-output.html
  Image Background Removal with U^2-Net and OpenVINO ; https://docs.openvino.ai/2024/notebooks/vision-background-removal-with-output.html
  Background removal with RMBG v1.4 and OpenVINO ;   https://docs.openvino.ai/2024/notebooks/rmbg-background-removal-with-output.html
  Live Object Detection with OpenVINO™ ; https://docs.openvino.ai/2024/notebooks/object-detection-with-output.html

  https://github.com/openvinotoolkit/open_model_zoo
  Used Docs in classrooms
    https://github.com/kccistc/intel-05
    openvinotoolkit/openvino_notebooks: 📚 Jupyter notebook tutorials for OpenVINO™
    
    git clone --recurse-submodules https://github.com/kccistc/intel-05.git
    git clone --dept=1 https://github.com/openvinotoolkit/openvino_notebooks.git

  ⚓ GitHub OpenVino Notebooks ; https://github.com/openvinotoolkit/openvino_notebooks
    👍 notebooks search by category ; https://openvinotoolkit.github.io/openvino_notebooks/?search=hello+image
      from https://github.com/openvinotoolkit/openvino_notebooks/tree/latest/notebooks
      
    # Hello Image Classification
    Line-level text detection with Surya ; https://docs.openvino.ai/2024/notebooks/surya-line-level-text-detection-with-output.html

    Getting Started
    Convert & Optimize
    Model Demos
    Model TrainingLive demos
  Open Visual Inferencing and Neural network Optimization
  ONNX -> IR 포맷으로 모델 저장.
  intel N100
  https://coral.ai/

  hOW oPENvINO WORKS?
    MODEL
      ...model training..
      Open Model Zoo
      Model compression

    OPTIMIZE
      Model Conversion API & Tools
      Training optimiztion with NNCF
      Intel Developer Cloud for the Edge
    DEPLOY
      OpenVINO Model Server
      OpenVINO Runtime
        Primary CPU and GPU Options
        xeon, core, atom, arm, iris, arc, gpu
        Secondary VPU and FPGA Options
          VPU .. https://en.wikipedia.org/wiki/Movidius
          👍📰 FPGA // 프로그래밍을 거쳐서 회로를 구성할 수 있다고 한다.

      Intel, arm coretex
  Benefits of OpenVINO
    6세대이상부터 지원 가능.. 행렬연산이 가능하다고 함?
    10 ~ 11 세대에서 instruction set 이 누락된 제품도 있어서 잘 봐야 한다고 함.
  Caching model
    GPU 등과 같이 loading time 이 긴 device 들은 cache 기능을 사용하여 2번째 사용부터는 loading 타임을 최소화 할 수 있다.
    isReadNetwork
    ...
cat /proc/cpuinfo




%shell> lspci

차량 CAN 통신
  acc acc active.
  조향각
  NVIDIA Jetson TX2 
  외장 배터리..
  ROS
  👍 스테레오스코피 카메라를 활용한 비전 기술.. 로봇 회사들
  질감 처리도 필요한가?
  Image Background Removal with U^2-Net and OpenVINO
>>>>>>> ⚙️ settings: Firefox - Add-ons and themes     // change Menu bar color.
  Manage Your Themes
    https://addons.mozilla.org/en-US/firefox/addon/beautiful-dark-wall/?utm_source=addons.mozilla.org&utm_medium=referral&utm_content=search
>>>>>>> 0 settings: Ubuntu - Okular change Menu bar titles
  code  ~/.config/okularrc
  code /usr/share/plasma/desktoptheme/breeze-dark/colors

  sudo apt install kde-style-breeze kde-standard plasma-workspace


configure sddm
  gdm3 vs sddm

https://www.reddit.com/r/kde/comments/7ww4ja/changing_okular_colour_scheme/

poetry show openvino-dev

Released: Sep 19, 2024
  %shell> omz_
  omz_downloader --print_all
  omz_downloader --help

import https://docs.python.org/3/library/tkinter.html
  it requirses.. sudo apt-get install python3-tk
  poetry add ultralytics 
    https://github.com/ultralytics/assets/releases/

  /tmp/ipykernel_59372/2076527990.py:15: MatplotlibDeprecationWarning: The get_cmap function was deprecated in Matplotlib 3.7 and will be removed in 3.11. Use ``matplotlib.colormaps[name]`` or ``matplotlib.colormaps.get_cmap()`` or ``pyplot.get_cmap()`` instead.
    cmap = matplotlib.cm.get_cmap(colormap)
  Downloading https://github.com/ultralytics/assets/releases/download/v8.2.0/yolo_nas_s.pt to 'yolo_nas_s.pt'...
  100%|██████████| 83.3M/83.3M [04:46<00:00, 305kB/s]
  WARNING ⚠️ yolo_nas_s.pt appears to require 'super_gradients', which is not in Ultralytics requirements.
  AutoInstall will run now for 'super_gradients' but this feature will be removed in the future.
  Recommend fixes are to train a new model using the latest 'ultralytics' package or to run a command with an official Ultralytics model, i.e. 'yolo predict model=yolov8n.pt'
  requirements: Ultralytics requirement ['super_gradients'] not found, attempting AutoUpdate...


def normalize_minmax(data):
    return (data - data.min()) / (data.max() - data.min())


https://matplotlib.org/stable/api/cm_api.html#matplotlib.cm.get_cmap
  https://matplotlib.org/stable/api/_as_gen/matplotlib.colors.Colormap.html#matplotlib.colors.Colormap

dron gesture
  e.g. https://github.com/kinivi/tello-gesture-control
    https://developers.googleblog.com/en/drone-control-via-gestures-using-mediapipe-hands/

pyserial
paddle ocr, naver api, droidCam
RestNet50 ??
  🌟 사람 특징>> 뽑아내서 내적으로 유사도를 계산해서 CCTV 에 비치는 
    Cos 특성: cos 유클리드 값으로 .. ResNet 으로 알아낼 수 있나?
    저층에서 고층으로 가는구조.
      저층. 중층. 외형.
    이 데이터를 벡터 (특징)으로 처리해주는것.
    다양한 벡터값을 한사람으로 인식하도록 클러스터링하는 것.
    클러스터링이란? 이 데이터를 가지고, ...
  >> 🪱 Anomaly Detection
    https://github.com/kccistc/intel-05/blob/miniProject_09_suit/class01/mini-project/09_suit/source_09_suit_final.py
duck typing.. threading

✅ (how-to); to use Remote Power On/Off and connect Remote Desktop 📅 2024-10-02 10:29:22
  [Remote Power On/Off]     // Optional
    - check whehter your BIOS support AC back, and turn on
      %shell> sudo apt updtae && sudo apt install -y cpu-x
    - and ...
  connect Remote Desktop
    Any desk account ; https://support.anydesk.com/knowledge/account-creation
      wbfw109v2@gmail.com     // a..
    https://anydesk.com/ko/downloads/linux
    # http://deb.anydesk.com/howto.html
    - add repository key to Trusted software providers list
      %shell> sudo wget -qO - https://keys.anydesk.com/repos/DEB-GPG-KEY | sudo apt-key add -
    - add the repository:
      %shell> echo "deb http://deb.anydesk.com/ all main" | sudo tee /etc/apt/sources.list.d/anydesk-stable.list
    - update apt cache and install anydesk
      %shell> sudo apt update && sudo apt install -y anydesk
    
    - run anydesk
      %shell> anydesk
    - settings
      Security - Permissions
        - ✔️ Enable unattended access
          Password: ...
          Confirm Passsword: ...
          Permissions Profile: Full Access
    # 607 호 desktop anydesk address: 1 896 175 971
  connect Remote by SSH
    - check remote desktop public IP
      - in Browser: https://www.whatismyip.com/
      - as command
        # curl icanhazip.com
        # python3 -c "import requests; print(requests.get('https://ifconfig.me').text)"
        curl ifconfig.me
    - https://forcloud.tistory.com/210
    - settings
      Security - Permissions
        - ✔️ Create TCP tunnels
    - check what is your Local port
      Connection - General - Local port


https://velog.io/@minkyu4506/%EB%85%BC%EB%AC%B8%EB%A6%AC%EB%B7%B0-EfficientFormer-Vision-Transformers-at-MobileNet-Speed-%EB%A6%AC%EB%B7%B0 

Arduino
  ls -al /dev/ttyACM0
  Clone code
    git clone --recurse-submodules https://github.com/kccistc/intel-05.git
        --recurse-submodules option 없이 clone 한 경우, 아래를 통해 submodule update
    📍 git submodule update --init --recursive
  sudo chmod a+rw /dev/ttyACM0
  # ??? ⚠️ You need to make flash every time connecting arudino to Windows
  sudo chmod -R 777 /dev/ttyACM0

  ls -al /dev/ttyACM0
  # https://www.kernel.org/doc/html/latest/search.html?q=dialout not found..
  # https://wiki.debian.org/SystemGroups#Other_System_Groups dialout
  sudo usermod -aG dialout $USER

  ... cd arduino/...
  make init && make build && make flash
  # flash; (transitive, computing) To write to the memory of (an updatable component such as a BIOS chip or games cartridge).    https://en.wiktionary.org/wiki/flash
  cd ../ (smart-factory)
    bash build.sh

The tee command in Unix-like systems gets its name from the T-splitter used in plumbing, which splits the flow of water into two directions. Similarly, the tee command in Linux splits the output of a program into two: one going to standard output (usually the terminal) and the other going to a file or another command.

Maximal Softmax Prediction (MSP)
Mahalanobis Distance
Outlier Exposure

❓ OOD Detection
  https://velog.io/@yetsyl0705/Out-of-Distribution-OOD
Range-Doppler Maps

I wonder how MMPose + MoViNet can be used simultaniosuly.
  you said MoViNet is not based on Pose. but MMPose estimates Human Pose.
  but your recommendation uses "MMPose + MoViNet"


1. Person recognition
  - YOLO-NAS

2. Pose Recognition
  - MMPopse

3. Action Recognition
  - PoseC3D


MMPopse Movinet vs PoseC3D
hand signals and body pose are critical.
MoVinet
but some signals could become less distinct or harder to differentiate, especially quick gestures like raising or waving a hand.
Requires
Performance: 30FPS

https://en.wikipedia.org/wiki/Vienna_Convention_on_Road_Signs_and_Signals
📍 Jetn nano
  우분투에서 SD 카드 리더기를 연결하면 자동으로 특정 디렉토리에 마운트됩니다. 일반적으로는 /media/사용자이름/ 경로 아래에 SD 카드가 마운트됩니다. 예를 들어, 사용자 이름이 user이고 SD 카드의 레이블이 MySDCard인 경우, 마운트 지점은 /media/user/MySDCard가 될 것입니다.
🔳 Jetson Nano History
  iwlwifi-8000C-*.ucode failed with error -
  failed to read out thermal zone
  imx219 7-0010: error during i2c read probe 및 no acknowledge from address 0x50
  SQUASHFS error: unable to read xattr id index table

: ' 
📰⚓ Windows Default Keybindings ; https://marketplace.visualstudio.com/items?itemName=smcpeak.default-keys-windows
  ; ☑️ Issue: etc; Inconsistent keyboard shortcuts between Windows and Linux ; https://github.com/microsoft/vscode/issues/142456 📅 2024-11-23 00:15:05
  🚣 This extension does not remove any existing bindings.
    On Windows, that means you have everything bound twice.
    On other platforms, you have that platform default bindings plus the Windows ones.
  🚣 The bindings in this extension take precedence over the defaults provided by VSCode.
  
  # Some problematic keybindings and workarounds
    # Ctrl + Alt + Up/Down/Right
      On Windows, Ctrl+Alt+Up and Ctrl+Alt+Down enter multi-column select mode, and Ctrl+Alt+Right splits the editor pane vertically.
      On some Linux distributions, the window manager by default intercepts these key combinations.
      On Ubuntu 22,
        gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-left "['']"
        gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-right "['']"
        gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-down "['']"
        gsettings set org.gnome.desktop.wm.keybindings switch-to-workspace-up "['']"
'
  .. markdown all in  one Bold 단축키를 우선시여기지 않음.


젯슨 나노에서 작업 - ⚓ https://developer.nvidia.com/embedded/learn/get-started-jetson-nano-devkit#intro
  #️⃣ Write Image to the microSD card ; https://developer.nvidia.com/embedded/learn/get-started-jetson-nano-devkit#write
  #️⃣ Setup and First Boot ; https://developer.nvidia.com/embedded/learn/get-started-jetson-nano-devkit#setup
    Keyboard Shortcut ; https://miro.medium.com/v2/resize:fit:4800/format:webp/1*M9VeLZpfsPQSsnd3kEocvw.png
https://developer.nvidia.com/embedded/l4t/r32_release_v7.1/jp_4.6.1_b110_sd_card/jeston_nano/jetson-nano-jp461-sd-card-image.zip
  Jetson Nano Developer Kit SD Card Image (ver. 4.6.1) ; https://developer.nvidia.com/embedded/null 📅 2022/02/23
    📝 4.6.1 is lastest version for Jetson Nano. successor models (e.g. Jetson Orin Nano) use version 5.x.
    https://developer.nvidia.com/embedded/jetpack

    https://yeonsozzz.tistory.com/36
  # 👨 Manuallly.. check your mount drive. e.g. my SDCARD_DRIVE is sdc
  # 🪱 lsblk ; list block devices
  %shell> lsblk
  set SDCARD_DRIVE /dev/sdc
  # 🪱 dd ; Data Definition ; https://en.wikipedia.org/wiki/Dd_(Unix)
  # if; input file. of; output file. bs; block size
  sudo dd if=$HOME/Downloads/jetson-nano-jp461-sd-card-image/sd-blob-b01.img of=/dev/sdc bs=1M status=progress

  WIFI:
    - AP 명 : choi 혹은 choi_5G
    - security: WPA & WPA2 Perosnal (Wi-Fi Protected Access 2)
    - PW : s1234567890
  userName: jetsonnano
  Select Nvpmodel Mode (NVIDIA Power Model)
    MAXN

jetson nano server
sudo apt install ssh ssh-server
sudo systemctl enable ssh
systemctl status  
system control의

>> ycoto -> https://developer.ridgerun.com/wiki/index.php/Yocto_Support_for_NVIDIA_Jetson_Platforms_-_Setting_up_Yocto
🆚 is a relationship, hsa a relationship
  https://stackoverflow.com/questions/36162714/what-is-the-difference-between-is-a-relationship-and-has-a-relationship-in

발생한 문제가 무엇이고, 

➡️ pytorch torchrun
  torch.distributed.elastic ; https://pytorch.org/docs/stable/distributed.elastic.html
    # Usage
      Quickstart ; https://pytorch.org/docs/stable/elastic/quickstart.html
      Train script ; https://pytorch.org/docs/stable/elastic/train_script.html
      Example ; https://github.com/pytorch/elastic/tree/master/examples

    # API
      torchrun (Elastic Launch) ; https://pytorch.org/docs/stable/elastic/run.html
      
* Seller from https://developer.nvidia.com/buy-jetson
  NVIDIA® Jetson Nano™ Developer Kit - B01 ; https://www.seeedstudio.com/NVIDIA-Jetson-Nano-Development-Kit-B01-p-4437.html
  NVIDIA® Jetson Orin™ Nano Developer Kit ; https://www.seeedstudio.com/NVIDIAr-Jetson-Orintm-Nano-Developer-Kit-p-5617.html

* Requirements
  Hardware Requirements
    - Embedded Board:   [NVIDIA] Jetson Nano (4 GiB)                        1 ₩ 453,330 ; https://prod.danawa.com/info/?pcode=17458712&keyword=NVIDIA+Jetson+NANO+Developer+Kit&cate=112751
    - ⚓ Arduino UNO R3 ; https://docs.arduino.cc/hardware/uno-rev3/
        Datasheet ; https://docs.arduino.cc/resources/datasheets/A000066-datasheet.pdf
  Software Requiements
    - Selectable deployement (Exculsive): [OpenVino, TensorRT]
* Architecture
  Hardware
    - Embedded Board:   [NVIDIA] Jetson Nano (4 GiB)                        1 ₩ 453,330 ; https://prod.danawa.com/info/?pcode=17458712&keyword=NVIDIA+Jetson+NANO+Developer+Kit&cate=112751
    - Camera:           [Intel] Depth Camera D435                           1 ₩ 541,410 ; https://prod.danawa.com/info/?pcode=5797839&keyword=%EC%9D%B8%ED%85%94+%EB%A6%AC%EC%96%BC%EC%84%BC%EC%8A%A4+%EC%B9%B4%EB%A9%94%EB%9D%BC&cate=112810
    - Display:          라즈베리파이/젯슨나노/RDK-X7용 7인치 정전식 터치 스크린 1 ₩ 88,000 ; https://www.devicemart.co.kr/goods/view?no=1273487
  Software
    - Python
      📦 OpenVino
      📦 Pytorch

      # Optimization
        📦 OpenVINO ; https://docs.openvino.ai/2024/index.html
          OpenVINO 🔪 Python API Docs ; https://docs.openvino.ai/2024/api/ie_python_api/api.html
        📦 TensorRT ; https://developer.nvidia.com/tensorrt
          TensorRT 🔪 Python API Docs ; https://docs.nvidia.com/deeplearning/tensorrt/api/python_api/index.html

    - OpenMMLab project 🔪 MMPose
      MMPose is an open-source 🚣 toolbox for pose estimation based on PyTorch.
      https://github.com/open-mmlab/mmpose?tab=readme-ov-file
      https://mmpose.readthedocs.io/en/latest/
* Paper
  📝 Paper review urls
    ⚓👍📰 good Paper review: https://ai-easy.tistory.com/
  ⚓    : Towards Good Practices for Skeleton Action Recognition ; https://arxiv.org/abs/2205.09443
    ```PoseC3D has good spatio- temporal modeling capability and achieves state-of-the-art recognition performance on 6 of 9 benchmarks.```
* Model Pipeline
  - YOLO11m-pose 71.7 FLOPS  /  4(Quantization)  *  15 (FPS) = 268.87500 gFLOPS
    *⚙️ Tracker settings
      https://docs.ultralytics.com/modes/track/#tracker-selection
      https://github.com/ultralytics/ultralytics/blob/main/ultralytics/cfg/trackers/botsort.yaml
    * outputs
      classses id ; https://docs.ultralytics.com/tasks/pose/
        0: Nose
        1: Left Eye
        2: Right Eye
        3: Left Ear
        4: Right Ear
        5: Left Shoulder
        6: Right Shoulder
        7: Left Elbow
        8: Right Elbow
        9: Left Wrist
        10: Right Wrist
        11: Left Hip
        12: Right Hip
        13: Left Knee
        14: Right Knee
        15: Left Ankle
        16: Right Ankle
      # Keypoints ; https://github.com/ultralytics/ultralytics/blob/main/ultralytics/cfg/datasets/coco-pose.yaml
        kpt_shape: [17, 3] # number of keypoints, number of dims (2 for x,y or 3 for x,y,visible)

* Optimizations
  - 
FAQ
  ❔ Pose-based vs. Skeleton-based Action Recognition 📅 2024-10-02 15:25:28

    ### Pose-based vs. Skeleton-based Action Recognition

    #### **Pose-based Recognition**:
    - **Definition**: Uses **keypoints** or **landmarks** (joints) of the human body, such as shoulders, elbows, and knees, either in 2D or 3D coordinates.
    - **Data**: Works with the **positions of joints** over time, treating each keypoint individually.
    - **Models**: Commonly uses **CNNs** or **3D CNNs** to analyze pose sequences (e.g., **PoseC3D**).

    #### **Skeleton-based Recognition**:
    - **Definition**: Models the human body as a **graph** where **joints are nodes** and **bones are edges**.
    - **Data**: Focuses on the **spatial connections** between joints and captures their relationships over time.
    - **Models**: Uses **Graph Convolutional Networks (GCNs)** to process the **skeleton structure** (e.g., **MS-G3D**).

    #### **Key Differences**:
    - **Pose-based**: Works with **keypoints** independently, focusing on the temporal evolution of joint positions.
    - **Skeleton-based**: Uses a **graph structure** to model the relationships between joints and bones, offering more detailed spatial insights.

    ---

    ### Key Additions:
    - **Pose-based models** treat joints as independent **keypoints**, so the model doesn't inherently know how joints are connected (like the shoulder to the elbow). The AI may learn these relationships through training but doesn't explicitly model them.
      
    - **Skeleton-based models** explicitly model the relationships between joints as **graph edges** (e.g., shoulder connected to elbow). This makes it more effective at understanding **relative distances** and the **structure** of the body, which improves action recognition.

    - **Relative distance** between joints is critical in both approaches, but **skeleton-based models** handle these connections explicitly, making them more suitable for recognizing complex or multi-joint actions.


  ❔ Summary of Single-board Computers (SBCs) for AI Processing (Recent Release Order) 📅 2024-10-02 01:16:00
    ### Summary of Single-board Computers (SBCs) for AI Processing (Recent Release Order)


    | **Device**                                   | **Price** | **TFLOPS**   | **Release Date (ISO)** | **Supports OpenVINO Optimized Models** | **Comparison (Jetson Nano)**                                                                             |
    | -------------------------------------------- | --------- | ------------ | ---------------------- | -------------------------------------- | -------------------------------------------------------------------------------------------------------- |
    | **Intel UP Xtreme i12**                      | $700~$900 | 2~4 TFLOPS   | 2023-02-10             | Yes                                    | Much more powerful, but higher cost and power consumption.                                               |
    | **Intel NUC 12 Pro**                         | $600~$800 | 2~3 TFLOPS   | 2022-06-15             | Yes                                    | Higher performance and price, suitable for various IoT and AI applications.                              |
    | **Intel UP Squared Pro 7000**                | $400~$600 | 1.5~2 TFLOPS | 2022-04-05             | Yes                                    | Offers decent performance at low power and cost.                                                         |
    | **NVIDIA® Jetson Orin™ Nano Developer Kit**  | $499      | 40 TOPS      | 2022-09-20             | No                                     | 100x the performance of Jetson Nano, higher price, for high-performance AI tasks.                        |
    | **Intel Elkhart Lake AAEON PICO-EHL4**       | $300~$400 | 1~1.5 TFLOPS | 2021-12-01             | Yes                                    | Similar performance to Jetson Nano, for low-power AI applications.                                       |
    | **Intel NUC 11 Pro Kit**                     | $500~$700 | 2 TFLOPS     | 2021-03-15             | Yes                                    | Better performance, but more expensive and higher power consumption than Jetson Nano.                    |
    | **NVIDIA® Jetson Nano™ Developer Kit - B01** | $149      | 0.472 TFLOPS | 2019-03-18             | No                                     | Great price-to-performance ratio, ideal for beginners and lightweight AI tasks.                         |

    ---

    ### Intel Lunar Lake Overview

    Intel's **Lunar Lake** was launched on **2024-09-24** and is designed for **up to 120 TOPS** in AI performance, with **48 TOPS** from the **NPU** alone. This makes it highly suitable for **AI-based edge computing**. Compared to older Intel models like **Elkhart Lake** and **Alder Lake**, which lacked dedicated AI acceleration, Lunar Lake brings significant improvements in performance-per-watt for AI tasks.

    However, there are **no Lunar Lake-based embedded boards** available yet, similar to NVIDIA's **Jetson Nano** series. Jetson remains a leading choice for **real-time AI inference** and **edge computing**, with the Jetson Nano and Jetson Orin Nano being popular models.

  ❔ Project Application Review: OpenVINO vs MediaPipe Framework 📅 2024-10-02 00:22:47
    # Project Application Review: OpenVINO vs MediaPipe Framework

    ## 1. OpenVINO
    - **Purpose**: OpenVINO is a platform designed to provide **optimized deep learning inference** on **Intel hardware** (CPU, GPU, VPU, etc.).
    - **Key Features**:
      - Converts models from **TensorFlow, ONNX**, etc., into **IR (Intermediate Representation)** format for optimized inference on **Intel-based hardware**.
      - Built for **high-performance inference**, suitable for both **edge and server environments**.
      - Supports a wide range of **Intel platforms** (CPU, iGPU, VPU), and is especially designed to maximize **real-time inference** performance.

    ## 2. MediaPipe Framework
    - **Purpose**: MediaPipe is a **framework for managing model pipelines** and **real-time data processing** across various platforms (Android, iOS, embedded devices).
    - **Key Features**:
      - Primarily supports **TensorFlow Lite** models and is optimized for **mobile and embedded devices** with a focus on **real-time processing**.
      - It optimizes the **data flow between models** through **asynchronous pipeline management**, handling real-time input data efficiently.
      - MediaPipe is designed for **lightweight environments** where real-time data streams are a priority, but is heavily optimized for **TensorFlow Lite** models.

    ---

    ## Project Application Review

    ### 1. **OpenVINO Requirements**
    - **The current project's software requirements align with OpenVINO**.
    - **OpenVINO** provides **optimized inference for Intel hardware**, while **MediaPipe is incompatible** as it primarily works with **TensorFlow Lite** and other lightweight formats.
    - **Conclusion**: Since the project’s software requirements necessitate **OpenVINO**, the **MediaPipe Framework is not suitable**, and **OpenVINO** should be used.

    ### 2. **Synchronous Process between Two Inferences**
    - The project workflow involves **pose recognition**, followed by **action recognition** based on joint position data, which requires the **pose data** to be processed first before action recognition can occur.
    - **MediaPipe’s asynchronous pipeline** excels at parallel processing between models, but the project requires a **synchronous process** between the two models.
    - **Conclusion**: Since **synchronous inference** is necessary, **MediaPipe’s asynchronous nature** does not align with the project’s requirements, and using a **MediaPipe pipeline would not be effective** in this case.
  ❔ Project Application Review: Why Hand Landmark Detection is Necessary 📅 2024-10-02 02:39:37
    # Project Application Review: Why Hand Landmark Detection is Necessary

    ## Why Hand Landmark Detection is Essential for the Project

    1. **Gesture Differentiation**:
      - Gestures like **"Push Away"** and **"Come Closer"** rely heavily on **hand orientation** (palm facing the camera or not). Simply using joint position data may not capture these subtle differences.
      - Hand Landmark Detection provides detailed keypoints of the hand, which help in recognizing the **front vs. back of the hand**.

    2. **Precise Hand Pose Data**:
      - **MediaPipe Hand Landmark Detection** offers high precision tracking of hand keypoints (finger tips, knuckles, etc.).
      - This data can be integrated with body joint data to improve the accuracy of **gesture recognition** in complex scenarios.

    3. **Improved Action Recognition**:
      - By using **hand landmark data** alongside **joint data**, the model can learn more nuanced movements, such as **hand rotations** and **finger positions**, which are crucial for distinguishing between similar gestures.

    ## Conclusion
    Using **Hand Landmark Detection** in combination with **joint position data** allows for a more robust and accurate gesture recognition system, making it essential for the successful implementation of your traffic signal recognition project.

  ❔ Why MMPose is a Better Choice than MediaPipe Pose 📅 2024-10-02 00:22:50
    # Why MMPose is a Better Choice than MediaPipe Pose

    ### 1. **Higher Joint Accuracy**
      - MMPose provides **more accurate joint coordinates** through various backbones (ResNet, HRNet, etc.), making it better for recognizing traffic signals from different angles as the vehicle moves.

    ### 2. **Handling Complex Poses and Angle Variations**
      - When a vehicle observes traffic signals from various angles, **pose recognition across different perspectives** becomes crucial. MMPose excels at managing such changes.

    ### 3. **Scalability and Customization**
      - MMPose allows for **retraining with custom datasets**, enabling fine-tuning for specific environments or actions.

    ### 4. **Precision in Joint Data**
      - For traffic signal recognition, **precise joint distances and changes** are essential. MMPose provides more detailed joint information, making it ideal for such tasks.

  ❔ About Parallel Processing 📅 2024-10-01 23:17:21
    in OpenVINO, https://ilya-lavrenov.github.io/openvino/openvino_docs_OV_UG_Python_API_exclusives.html#release-of-gil
      Some functions in Python API release the Global Lock Interpreter (GIL) while running work-intensive code
      #️⃣ List of Functions that Release the GIL
        🚣 openvino.runtime.Core.compile_model

    In MediaPipe, https://ai.google.dev/edge/mediapipe/framework/getting_started/python_framework
      ... MediaPipe framework sits on top of the 🚣 pybind11 library. The C++ core framework is exposed in Python via a C++/Python language binding.
        📝 Pybibnd ; https://pybind11.readthedocs.io/en/stable/index.html
      ... In the MediaPipe Framework, all processing takes places within the context of a CalculatorGraph.
      
의사 결정
  - Prepare model
    - 현재 하드웨어 요구사항에서 정상적으로 끊김없이 잘 작동할 수 있는 모델을 사용해야 한다.
    - about Action Recognition model
      - 관절 위치와 변화 기반 행동 인식
        이미지에서 배경보다는 포즈 데이터가 중요하므로 하므로, 행동 인식에 대한 모델은 Based on pose data (관절 위치) 이 되어야 한다. Based on vison 보다는.
      - 시공간적 정보를 담을 수 있는 모델을 사용해야 한다.
        제스처 인식은 단순히 하나의 프레임에서 포즈를 분석하는 것뿐만 아니라, 연속된 시간의 프레임에서 관절의 위치가 어떻게 변화하는지를 학습하는 것이 중요.
        🛍️ e.g.
          - Spatio-Temporal Multilayer Perceptron (ST-MLP)
          - CNN (Convolutional Neural Network)
          - RNN (Recurrent Neural Network)
          - LSTM (Long Short-Term Memory)
          - Transformer 기반 모델
          - ... 이전에 나온 모델들의 단점을 보완한 모델들
      - 포즈 인식 (관절 위치 탐지) 모델
        This reduces the complexity by focusing on the skeletal motion rather than the entire image.
          🛍️ e.g. 
            - MobileNet 기반 MMPose
            - ResNet 기반 MMPose
            - HRNet 기반 MMPose
            - Lite-HRNet 기반 MMPose
            - MediaPipe Pose
        filter: lightweight
          🛍️ e.g. 
            - MobileNet 기반 MMPose
            - MediaPipe Pose
      - 행동 인식 모델 (기본적으로 행동 인식을 지원하는 모델)
          🛍️ e.g. 
            EfficientGCN
            SGN
            MS-G3D
            DynamicGCN
            PA-ResGCN-b19
            4s-Shift-GCN
            2s-AGCN
            NAS-GCN
        filter: lightweight
          🛍️ e.g. 
            EfficientGCN ; https://github.com/attention-eq-everything/effgcn_cam
            SGN ; https://github.com/microsoft/SGN?tab=readme-ov-file

          These model uses NTU RGB+D 60 Dataset


    * Optimization

        // TensorRT 등으로 최적화 필요. 그냥 임베디드에서 돌리기에는 무거움.

      - 경량 Transformer 기반 모델
        🛍️ e.g.
        - EfficientFormer
        - EdgeFormer 
    - 정확도와 실시간 성능과의 균형을 맞추기 위해, 서로 다른 관절의 복잡한 공간관계를 더 잘 처리할 수 있는 EfficientFormer 를 선택

  대규모 데이터셋을 다루는 경우,
    Action Transformer
    ViViT (Video Vision Transformer): 


  리소스가 제한된 경우.

📍 전 커밋에서 특정 파일의 내용을 검색하려면
  git log -S "from pytubefix import YouTube"

Kaggle with ssh
  https://github.com/Kaggle/kaggle-api
  https://github.com/buidai123/Kaggle_VSCode_Remote_SSH


🆚 git add   vs git restore --staged
git push origin --delete <잘못된-브랜치-이름>
git push origin HEAD
   # 현재 체크아웃된 브랜치를 원격 저장소에 동일한 이름으로 푸시
  <refspec>은 로컬의 참조(브랜치, 태그 등)에서 원격의 참조로 어떤 것을 푸시할지를 결정하는 데 사용됩니다. Git에서 HEAD는 현재 체크아웃된 브랜치를 참조하는 이름이기 때문에, git push origin HEAD 명령어에서 HEAD는 로컬 브랜치를 원격 저장소에 푸시하는 대상 참조로 동작합니다.


https://github.com/ultralytics/ultralytics
  #️⃣ Integrations
https://openvinotoolkit.github.io/openvino_notebooks/?search=conver

How Does Action Recognition Work with Sequences?
  Multiple Frames: These models require a sequence of frames (for example, 16, 30, or even more frames) to analyze both spatial and temporal patterns (i.e., how body parts move over time).
  Sliding Window: The model might use a sliding window approach, meaning it continually analyzes a fixed number of frames (e.g., 16 frames) and shifts forward as new frames come in.

Mediapipe Object Detection vs YOLOv11: ➡️ 👍 YOLOv11
  YOLOv11 (nano/tiny versions) is likely better if you need highly optimized person detection and can afford a bit more latency compared to Mediapipe. YOLOv11 models can also be customized for specific tasks.

Action Recognition: MS-G3D vs. ST-GCN: ➡️ 👍 MS-G3D
  For skeleton-based action recognition, both models are strong contenders.
  MS-G3D provides more multi-scale temporal and spatial analysis, while ST-GCN is more lightweight and may offer higher FPS in real-time applications.


  ⚓ Softmax function ; https://en.wikipedia.org/wiki/Softmax_function
  (Subscript | 밑수) 와 (Superscript | 윗수)
  ⚓ Attention (machine learning) ; https://en.wikipedia.org/wiki/Attention_(machine_learning)#Scaled_dot-product_attention
    #️⃣ Self-attention ; https://en.wikipedia.org/wiki/Attention_(machine_learning)#Self-attention
  ⚓ Word embedding ; https://en.wikipedia.org/wiki/Word_embedding

  디코더는 기본적으로 RNNLM(RNN Language Model)입니다. RNNLM의 개념을 기억하고 있다면 좀 더 이해하기 쉽습니다. 디코더는 초기 입력으로 문장의 시작을 의미하는 심볼 <sos>가 들어갑니다. 디코더는 <sos>가 입력되면, 다음에 등장할 확률이 높은 단어를 예측합니다. 
  https://blog.keras.io/a-ten-minute-introduction-to-sequence-to-sequence-learning-in-keras.html

  👍
  [트렌스포머 모델 이해하기] Self-Attention에서 Q, K, V(Query, Key, Value)의 의미 ; https://cn-c.tistory.com/68#%EB%AA%A8%EB%93%A0%20%EB%8B%A8%EC%96%B4%EB%8A%94%20%EC%A7%88%EB%AC%B8(Query)%EC%9D%B4%EC%9E%90%20%EB%8B%B5%EB%B3%80(Key)%EC%9D%B4%EB%8B%A4-1
  https://velog.io/@sjinu/%EA%B0%9C%EB%85%90%EC%A0%95%EB%A6%AC-Attention-Mechanism


  c) Separable Convolution (SepLayer)
  일반적인 컨볼루션 레이어는 많은 계산을 요구합니다. Separable Convolution은 이러한 계산량을 줄이기 위해 컨볼루션을 두 단계로 나눕니다:
  Depth-wise Convolution: 각 채널에 대해 개별적으로 컨볼루션을 수행합니다.
  Point-wise Convolution: 결과를 결합하여 출력 채널을 만듭니다.
  이렇게 나누어서 처리하면 계산량이 줄어들고, 모델이 더 빠르고 효율적으로 동작할 수 있습니다.
  d) Bottleneck Layer (BottleLayer)
    일반적인 CNN 에서 torch 로 layer 를 구성할 때 코드는 보통 어떻게 짜나?

    - Multiple Input Branches (MIB) 아키텍처
    - 다양한 종류의 컨볼루션 레이어:
      Graph Convolution (GCN) 레이어
      Temporal Convolution (TC) 레이어
      Separable Convolution (SepLayer)
      Expanded Separable Layer (EpSepLayer)
      Bottleneck Layer (BottleLayer)
      Sandglass Layer (SGLayer)
      등의 구조를 GCN에 적용해 모델의 효율성을 높입니다.
    - Compound Scaling 전략:
      EfficientGCN-B0, EfficientGCN-B2, EfficientGCN-B4 같은 다양한 크기의 모델


  EfficientGCNv1
    https://github.com/zyxjtu/EfficientGCNv1
    ACMMM 2020 ; https://dl.acm.org/doi/abs/10.1145/3394171.3413802
    Arxiv Preprint ; https://arxiv.org/pdf/2010.09978.pdf

  EfficientGCN 2
    https://github.com/attention-eq-everything/effgcn_cam
    IEEE T-PAMI; https://ieeexplore.ieee.org/abstract/document/9729609
    Arxiv Preprint ; https://arxiv.org/pdf/2106.15125

  MLP (Multi-layer Perceptron): 여러 개의 층으로 이루어진 기본적인 신경망 구조입니다. 채널 단위나 공간적 차원에서 각각 독립적으로 연산을 수행하는 방식으로 사용됩니다.
  SENet (Squeeze-and-Excitation Networks): 각 채널의 중요도를 학습하여 적응적으로 조절하는 네트워크입니다. AGC-LSTM과 MS-AAGCN도 이런 방식으로 채널별 중요도를 독립적으로 학습합니다.
    - AGC-LSTM: Attention-Guided Convolution Long Short-Term Memory
      LSTM 기반의 골격 행동 인식 모델로, 관절 간의 관계를 학습하는 데 MLP와 SENet 구조를 결합하여 채널마다 독립적으로 학습합니다.
    - MS-AAGCN: Multi-Scale Adaptive Graph Convolutional Network
      Spatial Graph Convolution을 사용한 모델로, 주로 공간적 차원에서 학습하고 다른 차원을 평균 처리하는 구조입니다.
  LSTM (Long Short-Term Memory):
    순환 신경망(RNN)의 한 종류로, 시퀀스 데이터를 처리할 때 과거의 정보를 기억하면서 학습할 수 있도록 설계된 모델입니다.
    특히 긴 시퀀스 데이터를 처리할 때 뛰어난 성능을 보이며, 주로 시간에 따른 데이터 처리에 사용됩니다.
  . EfficientGCN-B0, B2, B4
    ; Base 의 약자. 


  Data input
    애초에 여러 프레임을 입력으로 받는다.
    시간적 정보가 복잡해지면, 더 많은 프레임을 통해 모델이 정확하게 행동을 인식할 수 있습니다. 여기서 성능은 **정확도(Accuracy)**를 의미하며, 더 많은 시간적 데이터를 사용할수록 행동의 세부적인 변화까지도 학습할 수 있어 정확도가 향상됩니다.
    그러나 프레임 수가 늘어날수록 추론 시간과 메모리 사용량이 증가합니다. 각 프레임에 대해 추가적인 연산을 수행해야 하기 때문에 TC 레이어가 더 많이 필요해지고, 이는 계산 비용을 증가시킵니다.
    Jetson Nano와 같은 임베디드 하드웨어에서는 처리 속도와 메모리가 제한적이기 때문에, 적절한 프레임 수를 선택하는 것이 중요합니다. YOLO, MediaPipe, EfficientGCN 등의 모델을 동시에 사용해야 한다면, 시간적 프레임 수는 적절히 줄이면서도 중요한 행동을 충분히 인식할 수 있도록 조정하는 것이 좋습니다. Jetson Nano의 성능을 고려하면, 초당 15~30 프레임으로 학습 및 추론을 진행하는 것이 적합할 수 있습니다.
    2. EfficientGCN의 N 개 프레임 설정 가능 여부
      EfficientGCN에서 N개의 프레임을 입력으로 설정할 수 있습니다. N은 모델이 행동을 인식할 때 사용하는 시간적 정보의 범위를 결정합니다. 즉, 한 번의 학습 또는 추론에서 몇 개의 연속된 프레임을 처리할지를 N으로 설정할 수 있습니다.

      프레임 수를 조정하는 이유:
      더 많은 프레임(N)이 사용되면 모델은 더 긴 시간 동안의 행동을 인식할 수 있어 정확도가 높아질 수 있습니다. 그러나 계산 비용이 증가하게 됩니다.
      4개의 모델 사용 시 프레임 수 조정:
      Jetson Nano에서 4개의 모델(YOLO, MediaPipe Hand Landmarks, Pose, EfficientGCN)을 사용할 때는 하드웨어 성능에 따라 프레임 수를 조절해야 합니다.
      권장 프레임 수는 8~16 프레임 사이가 적합할 수 있습니다. 이는 충분한 시간적 정보를 제공하면서도 Jetson Nano의 성능 한계를 넘지 않도록 설정하는 것입니다.
    EfficientGCN-B0
      x-sub120 데이터셋에 대해 정확도 86.6, x-set120 데이터셋에 대해 정확도 85.0

    90.2 2.73 1× 0.29 1×


  Cross-subject와 Cross-setup은 행동 인식에서 사용하는 두 가지 평가 설정입니다.
    Cross-subject: 훈련 데이터와 테스트 데이터가 다른 주체들로부터 나온 데이터를 사용하는 방식입니다. 훈련 시 사용된 사람과 테스트 시 사용된 사람이 다르기 때문에 모델이 얼마나 일반화되었는지 평가하는 데 사용됩니다.
    Cross-setup: 다른 환경 설정이나 다양한 상황에서 모델을 테스트하는 방식입니다. 이는 다양한 배경이나 환경에서의 행동 인식 성능을 평가합니다.

  , Table 7은 X-sub 벤치마크에서의 성능을 더 구체적으로 평가한 것입니다.
  FLOPs는 특정 데이터셋에서 측정된 연산량을 나타내며, 다른 데이터셋에서도 큰 차이 없이 적용될 수 있습니다. 즉, FLOPs는 주어진 모델의 구조에 따라 거의 고정적입니다.

  ❓ 5. 커널의 길이와 골격 모델에서의 의미
    커널은 일반적으로 합성곱 연산에서 사용하는 필터를 의미합니다. 커널의 크기와 가중치는 네트워크가 학습하는 중요한 파라미터 중 하나입니다.

    L x 1 Conv에서 L은 커널의 길이를 의미합니다. 예를 들어, L=3이면 3개의 값을 합성곱으로 처리한다는 뜻입니다.

    골격 기반 행동 인식에서의 커널은 관절 간의 공간적 관계를 학습하는 필터로 작동합니다. 커널은 각 관절이 다른 관절과 어떤 관계를 가지는지 학습하며, 그 크기와 길이는 학습하는 행동 패턴의 복잡도에 따라 다릅니다.
    L×1 Conv는 1D 합성곱을 의미하며, 시간적 차원에서 연산을 수행합니다.

    C_in, Cout는 각각 입력 채널 수와 출력 채널 수를 나타냅니다.

    /2는 합성곱 연산 후 출력 크기를 절반으로 줄이는 연산을 의미합니다.

  EfficientGCN에서는 SGLayer를 비롯한 다양한 레이어가 사용됩니다.
    모델의 구조에 따라 BasicLayer, BottleLayer, SepLayer, EpSepLayer, SGLayer 중에서 선택적으로 사용됩니다.
    SGLayer는 효율적인 공간적, 시간적 정보를 학습하는 레이어로, depth-wise convolution과 point-wise convolution이 결합된 구조를 가집니다.

  1. 골격 기반 행동 인식 모델에서 Depth-wise Convolution 사용 이유
    골격 기반 행동 인식 모델에서는 관절 위치 데이터(Joint), 속도 데이터(Velocity), 뼈 정보(Bone) 등이 채널로 들어갑니다. 이 각 채널은 행동 인식을 위한 서로 다른 특징을 나타냅니다.

    각 채널 간 상호작용이 상대적으로 적은 이유:
      관절 위치(Joint)는 각 관절의 3D 좌표입니다.
      속도(Velocity)는 시간에 따른 관절의 이동을 나타냅니다.
      뼈 정보(Bone)는 관절 간의 거리 및 각도를 나타냅니다.
      이러한 채널들은 서로 독립적인 정보를 제공하며, 관절의 물리적인 위치나 이동 속도, 관절 간의 관계를 개별적으로 학습하는 것이 더 중요합니다. 그래서 각 채널을 독립적으로 처리하는 Depth-wise Convolution이 유리할 수 있습니다. 채널 간의 상호작용이 필수적이지 않기 때문에, 연산량을 줄이면서도 각 채널의 중요한 정보를 학습할 수 있습니다.


  깊이(Depth) 해석
    **Depth(깊이)**는 일반적으로 네트워크의 레이어 수를 의미하지만, 구체적인 의미는 모델에 따라 다를 수 있습니다.
    골격 기반 행동 인식에서는 네트워크가 얼마나 깊이 있는 특징을 학습하는지를 나타냅니다. 더 많은 레이어를 쌓으면 모델이 더 복잡한 패턴을 학습할 수 있습니다.
    Depth는 보통 하이퍼파라미터로 설정되며, 학습 과정에서 최적의 레이어 수를 찾기 위해 조정됩니다. 보통 많은 Depth는 더 나은 성능을 제공하지만, 계산량이 증가하여 연산 시간이 길어집니다.

  내가 이해한 것을 검토해줘.
  (a) 에서는 Df*Df*Cin  (초기(?) 피쳐 맵이 각 채널 (R, G, B) 마다 있으므로) 입력 1과  Dk*Dk*Cout(필터 개수) 를  컨볼루션 해서 Df*Df*Cout (피쳐 맵이 필터 수마다 있으므로) 이 되는거야.
  (b) 는 애초에 정의가 필터 수를 고려하지 않고, 각 깊이 (채널) 별로 독립적으로 Df*Df 들에 대해 컨볼루션을 하므로 Dk*Dk*C_in (그래서 커널 입력에서 Cin 이 동일하다!)

  (c) 는 애초에 정의가 필터 수를 고려하여 합치는 연산이므로, 각 채널의 동일한 포인트 (1*1)에 대해 convolution 을 수행하고 Cout 필터 수만큼 또 반복한다. (추가 차원) 그래서 결과가 Df*Df*Cout 이 된다.

https://roboflow.com/model-task-type/object-detection?name=mdia

Mediapipe
  The input sizes for MediaPipe object detection models vary, with common sizes being 256x256, 320x320, and 448x448 pixel

Ascii Art -> sudo apt install -y jp2a 
Yolo11n ; https://github.com/ultralytics/ultralytics/blob/main/docs/en/tasks/detect.md
  6.5 GFLOPS
  
  YOLO11x 	640 	54.7 	462.8 ± 6.7 	11.3 ± 0.2 	56.9 	194.9

https://stackoverflow.com/questions/75691440/how-to-move-yolov8-model-onto-gpu
자동차의 ECO 장치.

HandLandmarker (full)
Inputs
  ● A video stream or an image of arbitrary size.
  Channels order: RGB with values in [0.0, 1.0]

Singleton PAttern, Observer pattern..
  Observer pattern 은 임베디드에서 자주 사용한다고 함.


TDD Cycle
  Fail - Pass - Refactoring
  Fail, Pass 두 개 모두 작성하기.
  Refactoring 은 동일한 테스트에 대해 다양한 입력에 대해 확장할 때 사용
  mock injection
BDD 는 아직 현업에서 인기를 끌지 못하고 있다고 한다. 📅 2024-10-07 11:52:50
pytest-mock
  various currencies.


YOLO11l	EfficientGCN-B4	INT8	4	20	681.7

https://en.wikipedia.org/wiki/Reinventing_the_wheel

🚨 (issue); %shell> git clone https://github.com/attention-eq-everything/effgcn_cam
  Cloning into 'effgcn_cam'...
  remote: Enumerating objects: 75, done.
  remote: Counting objects: 100% (75/75), done.
  remote: Compressing objects: 100% (49/49), done.
  error: RPC failed; curl 92 HTTP/2 stream 5 was not closed cleanly: CANCEL (err 8)
  # This indicates that the RPC (Remote Procedure Call) failed due to an issue with the curl library.
  # Specifically, HTTP/2 stream 5 was not properly closed, and the operation was canceled (CANCEL with error code 8).
  # This usually points to an unexpected interruption in the network connection.

  error: 6835 bytes of body are still expected
  # This means Git expected 6,835 more bytes of data, but it did not receive them from the remote server.
  # This often happens when the connection is dropped before all the data is transmitted.

  fetch-pack: unexpected disconnect while reading sideband packet
  # This indicates that Git encountered an unexpected disconnect while reading a sideband packet,
  # which is part of the data transmission process. It suggests that the connection was lost abruptly.

  fatal: early EOF
  # "EOF" stands for "End Of File". This error means that Git reached the end of the input stream unexpectedly.
  # The data transmission was cut off before all the expected data was received.

  fatal: fetch-pack: invalid index-pack output
  # This error occurs because the index-pack process received incomplete or corrupted data.
  # Git was unable to process and package the data correctly due to the premature disconnect.

  >>> solution: retry clone


요즘은 파인튜닝을 이용해서 학습이 되서, 많은 데이터가 필요하지 않을 수 있닥도 한다.


cd ~/repos/effgcn_cam

CVAT  ; https://app.cvat.ai/
양품 불량 구분



MSR Action3D Dataset
  https://uowmailedu-my.sharepoint.com/personal/wanqing_uow_edu_au/_layouts/15/onedrive.aspx?id=%2Fpersonal%2Fwanqing%5Fuow%5Fedu%5Fau%2FDocuments%2FResearchDatasets%2FMSRAction3D&ga=1


pytorch nn (neural network) 사용주인듯.

microsoft-edge --version


Kinetics (Kinetics Human Action Video Dataset) ; https://github.com/cvdfoundation/kinetics-dataset
  Kinetics paper ; https://paperswithcode.com/dataset/kinetics
  kinetics-400, kinetics-600, kinetics-700

  # Dataset Loaders
    https://pytorch.org/vision/stable/generated/torchvision.datasets.Kinetics.html

https://fishshell.com/docs/current/cmds/and.html

📰 Datumaro (Dataset Management Framework)
  Dataset
    Train, vAl, Test 
      test set.. 지표..


nturgbd_skeletons_s001_to_s017.zip ; https://drive.google.com/open?id=1CUZnBtYwifVXS21yVg62T-vrPVayso5H
nturgbd_skeletons_s018_to_s032.zip ; https://drive.google.com/file/d/1tEbuaEqMxAV7dNc4fqu1O4M7mC6CJ50w/view

scp 사용하기.
  🛍️ e.g. 
  scp -r ./cvat/ gabriely@61.108.166.16:/home/gabriely/tests
  https://pypi.org/project/datum/
OTX example
  Build task
    Find template what we want to train
      $ otx find --template --task DETECTION
    Build task to create model
      Example)
      $ otx build Object_Detection_YOLO_X \
        --train-data-roots ../datumaro/export-coco/ \
        --val-data-roots ../datumaro/export-coco/
  Train
    Start training with parameters
      otx train params --learning_parameters.num_iter 8 \
        --learning_parameters.batch_size 1
      HPO is optional. (Hyperparameter optimization)
      # otx train --enable-hpo
      torch vision
    Start training with configuration files, after updating configuration
      data.yaml
      configuration.yaml
      po_config.yaml
  Evaoluation
  Export & Optimize
    Exports a trained model to the OpenVINO to run it on Intel hardware.
    Optimizes model using NNCF/POT depending on the model format.
  Deploy
    Create openvinio.zip with a demo appliation and exported model.

  otx 설치 된다음에도 오류가 뜨면 mmcv full 재설치?

⚓ Action Recognition Datasets: "NTU RGB+D" Dataset and "NTU RGB+D 120" Dataset ; https://rose1.ntu.edu.sg/dataset/actionRecognition/

https://rose1.ntu.edu.sg/challenge/ActionRecognitionChallenge/
  .skeleton 파일 구조 ; https://github.com/shahroudy/NTURGB-D/tree/master/Python
  https://github.com/shahroudy/NTURGB-D/tree/master

우분투 클립보드



EfficientGCN, SGN 은 모두 .skeleton 데이터를 가지고 학습시켰다고 했잖아. 맞아?
근데 보통 일반 카메라에서는 사진 프레임만 주잔아. 그럴 경우 어떻게 추론하지? 나는 mediapipe pose, mediapipe hand landmarks 두 개의 모델에서 나온 output 을 EfficientGCN 의 입력으로 사용하고싶어.

그리고 새로운 동작을 EfficientGCN 에서 학습시키려면 어떻게 해야하지? 이 때도 마찬가지로 사진 프레임만 있잖아. (Fine-tuning 이라고 하나?)
  그리고 예를들어서 .h5 데이터셋에 해당 프레임이 어떤 동작인지에 대해 라벨링 되어있는 데이터셋의 경우는 또 어떻게해?


1. Mediapipe Pose detection, Mediapipe Hand landmark detection 으로부터 탐지한 


https://github.com/MVIG-SJTU/AlphaPose

poseconv3d FLOPS https://ar5iv.labs.arxiv.org/html/2104.13586
  Table 11: PoseConv3D instantiated with: C3D, X3D, SlowOnly. 
👍 ⚓ posec3d ; https://arxiv.org/abs/2104.13586
  https://arxiv.org/pdf/2104.13586
https://github.com/kennymckormick/    /tree/main/configs/posec3d
https://mmaction2.readthedocs.io/en/latest/model_zoo/skeleton.html#posec3d
https://github.com/open-mmlab/mmaction2/tree/main/configs/skeleton/posec3d

https://github.com/kennymckormick/    /tree/main/configs/posec3d
https://github.com/kennymckormick/    /tree/main?tab=readme-ov-file

⚓ SOTA (State of the Art) ; ...
  특정 분야나 문제에 대한 최고 수준의 성능을 달성한 모델 또는 기술
Customizing  ; https://github.com/open-mmlab/mmaction2/blob/main/configs/skeleton/posec3d/custom_dataset_training.md
  https://github.com/kennymckormick/      /blob/main/configs/posec3d/x3d_shallow_ntu60_xsub/joint.py
    model = dict(
        type='Recognizer3D',
        backbone=dict(
            type='X3D',
            gamma_d=1,
            in_channels=17,
            base_channels=24,
            num_stages=3,
            se_ratio=None,
            use_swish=False,
            stage_blocks=(2, 5, 3),
            spatial_strides=(2, 2, 2)),
        cls_head=dict(
            type='I3DHead',
            in_channels=216,
            num_classes=60,
            dropout=0.5),
        test_cfg=dict(average_clips='prob'))
  joint limb

https://github.com/kennymckormick/    /tree/main
https://github.com/kennymckormick/    /blob/main/configs/posec3d/x3d_shallow_ntu60_xsub/limb.py

>>>>>>>>>>>> in mmaction2/
  poetry init

poetry lock --no-update
poetry show --tree
poetry add mmengine openmim "mmcv<2.2.0"

mim download mmaction2 --config tsn_imagenet-pretrained-r50_8xb32-1x1x8-100e_kinetics400-rgb --dest .
# The demo.mp4 and label_map_k400.txt are both from Kinetics-400
python demo/demo.py tsn_imagenet-pretrained-r50_8xb32-1x1x8-100e_kinetics400-rgb.py \
    tsn_imagenet-pretrained-r50_8xb32-1x1x8-100e_kinetics400-rgb_20220906-2692d16c.pth \
    demo/demo.mp4 tools/data/kinetics/label_map_k400.txt
https://github.com/open-mmlab/mmaction2
  ⚠️ poetry add mmengine openmim
    ... mmaciton docs 에는 없었는데.. github 를 우선적으로 보도록 하자. 문서 갱신이 안되는듯 보임.

iftop
⚓ Docker
  Windows - Docker - Settings - Resources - WSL Integration
    Resources WSL Integration
      - ✔️ Enable integration with my default WSL distro
      - ✔️ Ubuntu-24.04
  "NVIDIA Container Toolkit makes host OS GPU drivers accessible to containers, allowing them to run different CUDA versions while ensuring compatibility and GPU acceleration.
  >Dev Containers: New Dev Container...
    https://containers.dev/templates
  # Ubuntu에서 Docker 그룹에 추가된 사용자 목록을 확인
    getent group docker


  Ubuntu..
    https://docs.docker.com/engine/install/linux-postinstall/
    sudo usermod -aG docker $USER

1. MMACtion2 (toolbox)
  - Posec3D 모델 사용 예정
    Backbone X3D s (FLOPS: 0.6G) ; https://arxiv.org/pdf/2104.13586
    이를 사용하기 위한 방법 찾야아 함.
  - 파일로 카메라 실시간 프레임으로 테스트
  - 포즈 모델을 따로 써야하는지?

  
2. Docker
  >> [O] 컨테이너 내에서 호스트의 GPU 사용하는 방법
  >> 카메라 장치 권한 허용하는 방법 찾아야 함.
  >> *volume mount 방식 export/import 또는 SCP 로 호스트에 백업하는 방법 찾야아 함.


>> 면접: bitbake, yocto bblayer (BitBake layer)


⚓ CCID (chip card interface device) ; https://en.wikipedia.org/wiki/CCID_(protocol)

sudo apt install libnvidia-encode1

    
🆚💡 Hypervisor vs WSL2
  - Hardware-level virtualization
  - Creates and runs virtual machines
  - Type1: Native/Bare-metal.
  - Type2: (VMWare, QEMU, ...) ?      
  BootLoader 가 하드웨어를 운영체제가 쓸 수 있도록 초기화를 한다. 부팅 시간이 필요하다는 것이 단점. 30~60초 필요.
  좋지 않다는 것은 아니다. Windows 도 이것 기반으로 돌아가고 있음.
  >> 고급 차량에는 Hypervisor 에 여러 OS 를 사용하기 위해 사용된다고도 함.
    계기판. 디지털 클러스터.
    ⭕ 트렌드 ㅇㅇ. 하이퍼바이저가 지원이 되어야 함. RTOS (하드 리얼타임 처리용), OS (그래픽 처리용), firmare ...
  베어메탈 OS 는 처리하기 어렵고
  RTOS: Hard-real-time
    vs 일반 OS: Soft-real-time
  
  인테로 마찬가지로 x86..에서도 그럼. 

Container
  - OS-level virtualization.
  - isolate app from its environment
  - 운영체제가 공유되고 있다.



>> 그러니까 고성능이 필요한 시스템에서는
도커가 리눅스/유닉스에서 쓰고 
  .. 도커가 대기업에서는 안쓰인다. 유료. containerd

  Container Management 🔪 Podman
  Image Build 🔪 Kaniko 
  Image Management 🔪 Skopeo
  Kubernetes Application Management 🔪 Helm

lab 실에서 spin-out
  도구 중 어떤 것이 더 보안성이 높은지는 사용 환경에 따라 달라집니다. 클라우드 및 Kubernetes 환경에서는 Kaniko, 로컬 및 레드햇 기반 환경에서는 Buildah가 더 보안성이 높다고 할 수 있습니다.


리얼 C 인포테인먼트??? 
Key/VAlue
  ETCD
    Distributed Key/alue Store
    Like a Directiory Tree
    JSON/RST API
  Memachced, Redis.
mqtt  vs kafka? ZeroMQ vs 
Image Build 🔪 Kaniko   --> Buildsh 로 변경?..


⌨️ 웹 페이지 로컬 캐시 클리어: Ctrl + Shift + R: 현재 페이지를 강제로 새로고침(캐시 무시)합니다.


IPC (Inter process communication)
  pipe1 pipe2
  messge queue
  shared memory

  tcp/ip // 의견에 따라 달림. IPC에 넣을지 안넣을지.


mqtt  vs kafka

dockerc (도커 회사가 만든...) vs docker.io (데비안이 만든.. 도커의 100% 기능을 쓰지 못할 수 잇다.)

LaTeX
  BibTeX ; BibTeX는 LaTeX와 함께 사용하는 참고문헌 관리 도구입니다. ; https://en.wikipedia.org/wiki/BibTeX

# Modify the Config

  ⭕ Recommend ...

  # Modify Dataset

  # Modify Runtime Config

  # Modify Model Config
Files...
  configs/recognition/tsn/tsn_imagenet-pretrained-r50_8xb32-1x1x3-100e_kinetics400-rgb.py
  configs/_base_/schedules/sgd_100e.py

🛍️ e.g. tsn_imagenet-pretrained-r50_8xb32-1x1x3-100e_kinetics400-rgb
  wget https://download.openmmlab.com/mmaction/kinetics400_tiny.zip
  mkdir -p data/
  unzip kinetics400_tiny.zip -d data/

  python tools/visualizations/browse_dataset.py \
      configs/recognition/tsn/tsn_imagenet-pretrained-r50_8xb32-1x1x3-100e_kinetics400-rgb.py \
      browse_out --mode pipeline

  configs/recognition/tsn/tsn_imagenet-pretrained-r50_8xb32-1x1x3-100e_kinetics400-rgb.py
    dataset_type = "VideoDataset"
    data_root = "data/kinetics400_tiny/train"
    data_root_val = "data/kinetics400_tiny/val"
    ann_file_train = "data/kinetics400_tiny/kinetics_tiny_train_video.txt"
    ann_file_val = "data/kinetics400_tiny/kinetics_tiny_val_video.txt"
    // requirees moviepy 


  python tools/train.py configs/recognition/tsn/tsn_imagenet-pretrained-r50_8xb32-1x1x3-100e_kinetics400-rgb.py

  python tools/test.py configs/recognition/tsn/tsn_imagenet-pretrained-r50_8xb32-1x1x3-100e_kinetics400-rgb.py \
      work_dirs/tsn_imagenet-pretrained-r50_8xb32-1x1x3-100e_kinetics400-rgb/best_acc_top1_epoch_5.pth


  #🚣 Model 종류 확인
    %shell> tree -L 2 configs
    # >> configs/skeleton/posec3d ; https://github.com/open-mmlab/mmaction2/tree/main/configs/skeleton/posec3d

🛍️ e.g. Skeleton-based
  1. Preparing Skeleton Dataset ; https://github.com/open-mmlab/mmaction2/tree/main/tools/data/skeleton
python tools/train.py ${CONFIG_FILE} [optional arguments]

  wget https://download.openmmlab.com/mmaction/kinetics400_tiny.zip
  mkdir -p data/
  unzip kinetics400_tiny.zip -d data/


PoseC3D ; https://openaccess.thecvf.com/content/CVPR2022/papers/Duan_Revisiting_Skeleton-Based_Action_Recognition_CVPR_2022_paper.pdf
  Figure 1. PoseConv3D takes 2D poses as inputs. In general, 2D poses are of better quality than 3D poses. We visualize 2D posesestimated with HRNet for videos in NTU-60 and FineGYM in (a).
  Apparently, their quality is much better than 3D poses collected by sensors (b) or estimated with state-of-the-art estimators (c).
    📝 Noise and Artifacts in 3D Poses: 3D pose estimation, whether collected by depth sensors (like Kinect) or estimated using state-of-the-art methods (like VIBE)
      , can introduce noise and inaccuracies due to hardware limitations or model errors, especially in real-world conditions.

  Scalability: It efficiently handles scenarios involving multiple persons without increased computational costs, unlike GCNs, which scale linearly with the number of persons.
    because of PoseConv3D use 2D Hitmap volume...?


모든 행동인식 모델은 연속적인 프레임에 대해 판단해야 하는데, 동일한 사람인지 어떻게 추적하고 이를 입력으로 넣어서 판단하는지.. 사람 Tacking 알고리즘 필요함. pose data?

Yolo Deep SORT ? 트래킹 알고리즘?

1. 3D 골격 기반 GCN 모델에 대한 의견
  단점
    높은 비용 및 복잡성:
        3D 골격 기반 시스템을 구축하려면 전용 하드웨어가 필요하며, 이 하드웨어는 상대적으로 높은 비용과 설치 복잡성을 동반합니다.
        실내와 같이 제어된 환경에서는 높은 성능을 발휘할 수 있지만, 야외 환경이나 대규모 설치에서는 비용과 유지보수 측면에서 부담이 될 수 있습니다.
1. 3D 센서의 거리 한계
  Microsoft Kinect와 같은 일반적인 3D 센서:
      보통 0.5m에서 4.5m 사이에서 최적의 성능을 발휘합니다. 이 범위를 넘어가면, 깊이 정보의 정확도가 떨어지거나 탐지가 어려워질 수 있습니다.
  Intel RealSense:
      모델에 따라 조금씩 다르지만, 최대 탐지 거리는 보통 4m 전후입니다. RealSense의 고급 모델(예: D455)은 이보다 조금 더 멀리 탐지할 수 있지만, 여전히 제한이 있습니다.
  Time-of-Flight(TOF) 카메라:
      대부분의 TOF 카메라는 일반적으로 10m 이하에서 작동하며, 이보다 먼 거리에서는 신호의 정확도가 떨어질 수 있습니다.

📰 멀티뷰 2D 카메라 ??
  3D 기반 솔루션은 정확성과 정밀한 데이터 분석이 필요한 경우에 선호됩니다. 예를 들어:
      스포츠 분석: 선수의 자세나 동작을 정밀하게 추적해야 할 때, 3D 데이터가 유리합니다.
      의료 및 재활: 환자의 움직임을 정확히 측정하고 분석해야 할 때, 3D 솔루션은 필수적입니다.
      로봇 공학: 자율 주행 로봇이나 로봇 팔과 같은 시스템에서 정밀한 동작을 인식하는 데 3D 정보는 매우 중요합니다.

  2D 기반 솔루션은 낮은 비용과 대규모 적용이 필요한 경우에 적합합니다. 예를 들어:
      스마트 시티 및 교통 관리: 대규모의 인구 밀집 지역에서 사람의 움직임을 실시간으로 모니터링하고 관리하는 데 2D 기반 솔루션은 매우 효율적입니다.
      소매 및 상업 시스템: 쇼핑몰이나 상점에서 고객의 행동을 분석하는 데도 저비용으로 접근 가능한 2D 시스템이 주로 사용됩니다.
      모바일 장치 및 IoT 시스템: 리소스가 제한된 장치에서 실시간으로 인식할 때는 가벼운 2D 모델이 더 유리합니다.

  
  
Monodeapth 로 측정
  Depth anything ; https://depth-anything.github.io/
    물체 사이에 절대적인 거리를 알고 있다는 가정하여 어느정도 절대거리를 예측할 수는 있다고 한다?
https://github.com/kccistc/openvino/tree/main/Tutorials/depth_anything

Despite the considerable improvements, the settings of
different GCN approaches do not align well.










===
  

ESP32는 Espressif Systems에서 개발한 마이크로컨트롤러 칩
JTAG(Joint Test Action Group)는 마이크로컨트롤러나 칩의 내부를 디버깅할 수 있게 해주는 디버깅 인터페이스
Arduino Uno R3의 경우, 보통 JTAG 같은 디버깅 인터페이스를 사용하지 않고, 시리얼 모니터를 통해 코드 실행 결과를 확인하거나 오류를 디버깅합니다. 더 정밀한 디버깅이 필요하다면, 아두이노에 호환되는 디버깅 툴이나 업그레이드된 보드(예: Arduino Zero)를 고려할 수 있습니다.

/dev/ttyACM0는 Linux에서 ACM (Abstract Control Model) 장치로 등록된 USB 시리얼 포트
  ACM은 USB CDC (Communications Device Class) 표준의 일부로, 모뎀이나 시리얼 통신 장치를 지원하기 위해 사용됨.
tty (teletypewriter): 시리얼 포트나 가상 터미널 등을 의미.


Bluetooth module HC-06 FC-114




Command Query Responsibility Segregation 
CQRS, EDA 패턴

Event-Sourcing 패턴
📍📍📍 Design pattern
  https://learn.microsoft.com/en-us/dotnet/architecture/microservices/microservice-ddd-cqrs-patterns/eshoponcontainers-cqrs-ddd-microservice
    📍 It's important to understand that CQRS and most DDD patterns (like DDD layers or a domain model with aggregates) are not architectural styles, but only architecture patterns. 
    Microservices, SOA, and event-driven architecture (EDA) are examples of architectural styles.
    ... [all]
    Different Bounded Contexts (BCs) will employ different patterns. They have different responsibilities, and that leads to different solutions. 
    ... There is only one application architecture: ...


https://developer-wh.tistory.com/entry/%EA%BC%BC%EA%BC%BC%ED%95%98%EA%B2%8C-%EB%85%BC%EB%AC%B8%EC%9D%BD%EA%B8%B0-   -Towards-Good-Practices-for-Skeleton-Action-Recognition-2022
➡️ TODO >>>>>>>>>>>>>> ; https://code.visualstudio.com/remote/advancedcontainers/develop-remote-host



임베딩은 객체의 시각적 특징을 수치로 변환한 벡터입니다. 고차원의 정보를 저차원 벡터로 변환한다는 점.



https://docs.ultralytics.com/guides/nvidia-jetson/#quick-start-with-docker



$RANDOM은 bash에서 무작위 숫자를 생성하는 예약된 변수입니다. 이를 이용해 12000부터 31999까지의 무작위 포트를 설정합니다.
$MASTER_PORT는 PyTorch 분산 학습에서 노드 간 통신에 사용되는 포트를 지정하는 환경 변수입니다
set -x는 스크립트 실행 시 디버깅 모드를 활성화합니다.
MKL_SERVICE_FORCE_INTEL=1는 MKL이 비 Intel CPU에서도 작동하도록 강제로 설정하는 환경 변수.


>>> KeyPoints ; 25 for NTURGB+D 3D skeleton, 17 for CoCo, 18 for OpenPose, etc. )


To update the inference pipeline and ensure it aligns with your training configuration, I'll use the configuration you've provided and match the inference process for YOLO Pose with the structure you trained PoseC3D on. The key points are:
  Ensure Consistent Input: PoseC3D was trained with 48-frame clips and expects inputs of shape (N, C, T, H, W), where N is batch size, C is channel (17 keypoints), T is the number of frames (48), H and W are height and width.
  Keypoint Preprocessing: During training, the keypoints were processed as (x, y) coordinates, so the inference needs to pass keypoints in the same format.
  Batch Size Alignment: During training, a batch size of 1 was used, so we will ensure the same during inference.

  

프론트에서 가장 한한 것은 웹 어셈블러.
  그래서 Rust 가 더 뜬다고 한다.
  프론트엔드 코어엔지니어들의 한핫 주제라고 한다. ㅎ
  자바스크립트 언어 자체의 한계인 싱글 스레드의 한계를 해결하기 위함
  "Web Accember" github 확인.
  원래는 하드웨어별로 어셈블러를 이해하고 있어야 했는데, Rust가 이를 해결해준다고 한다. 그래서 뜬다고 함. 상당부분 해결을 해줘서.

백엔드에서는
  전세계적으로는 node 가 가장 유명하다고 한다. 우리나라만 자바에 몰려있다고 함.
  자바스크립트/파이썬/자바..
  모바일 앱 프로그래밍이 트렌드가 되었을 때 자바 시장이 되게 커져서그렇다고 함.
  자바스크립트 엔진: V8 엔진... 노드JS 가 각광을 받은 이유.. 이거도 싱글 스레드의 한계가 있다고 함. 

언어는 크게 Memory-Unmanaged 와 Memory-Manged 로 나뉜다.

인터럽트 펜딩.
pid 정밀제어 알고리즘?
🪱 Tensor. 
  In mathematics, a tensor is an algebraic object that describes a multilinear relationship between sets of algebraic objects related to a vector space. Tensors may map between different objects such as vectors, scalars, and even other tensors.


이재성 강사님. 자율주행 코드
  https://gitlab.com/MAZE-dankook/self-driving-patrol-car
  

⚓ torch.permute ; https://pytorch.org/docs/stable/generated/torch.permute.html
  Returns a view of the original tensor input with its dimensions permuted.
⚓ torch.stack ; https://pytorch.org/docs/stable/generated/torch.stack.html#torch-stack
 
YOLO11n-pose	640	50.0	81.0	52.4 ± 0.5	1.7 ± 0.0	2.9	7.6

settings, tools, and configurations  차이

Other glibc based Linux containers ??

Human Activity Recognition


Forwarded Ports view.

🧮 %vscode>Remote-SSH: Connect to Host...두데
  명령어 아이콘. :abacus:
  📄 ~/.vscode-server/data/Machine
    파일 아이콘 :paper
  📁 파일 폴더 아이콘. :file_folder

📍 면접 상담 📅 2024-10-16 14:53:59
  면접관이 관심 있는 것을 눈치있게.. 그 것을 얘기해봐야 한다.
    그것을 해보았기 때문에, ~를 할 줄 한다. ~에 기여할 수 있을 것 같다. 적용할 수 있을 것 같다.
  예를들어 공정 불량률..
    그래서 딥러닝 이런것을 해보았다.
  

  코덱 알고리즘 개발하는 곳에서 ROS ..이런 걸 강조해봤자 의미 없다.
  자기소개서를 똑같은것을 절대 쓰면 안될듯 한다.
  말로 풀지 말고 그림이나 포트폴리오로 .. 이해할 수 있게. 영상. 등등으로.

  컴퓨터가 느려서 지속적으로 클레임을 했지만 받아들여지지 않아서 나왔지만, 면접관은 관심이 없다. 관심을 가져야 할 이유도 없고. 수습기간은 쓰지도 않도록 한다.
  그냥 당시 AI 가 뜨고 있었고 웹 전망에 대해 .. 어쩌구..
  그래서 나와서 토이 프로젝트를 하면서 
  ..건설 현장...  만약 다시 돌아간다면 그러지 않을 것입니다. 
  

  --- 중요한 것
    현업을 할 수 있는 능력을 갖추었느냐
    구조화
    !!! 재현성. reproducible
📍 면접..
  LLM training.. 경험.. sepc..
  bragging..
여행계획 참고: 일본, 오사카, 유티버셜 스튜디오, 교토
  아랴사마 중림? 교토.. 
  유니버셜 스튜디오 재팬(USJ)
  현금 대체수단 구비
  숙소는 웬만하면 한군대.. 최대 두군대가 나음 단기 잊렁에서는

  도쿄 시즈오카, 도쿄. 쇼핑과 덕질. 

  >>> 👍 발표할 때 시선 처리
    가만히 서서 ppt 를 가리키는거보다 움직이면서 하는 것이 더 낫다.
    눈치컷 나한테 우호적인 사람에게 시선처리.
  📍 지원동기보다는, 이사람이 회사에 무엇을 기여할수 있는지를 써야 한다. 사용한 기술 세트 말고.
    쓸거면 정확히 어느 레벨로 하는지 명시해줘야 한다.
📍 presentation skills for persuasive vs informative vs ...
📍 짐 켈러. 최고의 반도체 아키텍처 설계자
  risk b
  젠슨 황
  샘 올트만 OpenAI CEO
  논문 디펜스.
삼성...
  HBM 문제..
  파이낸스가 삼성을 먹어버려서.. ... 개발자들이 잘 안된다고 한다.
  HBM 에 투자가 매출이 DRAM 에서 일어나는 구조적 문제 + 삼성의 구조적 문화
  그래서 내 ~것을 바탕으로 HBM 프로젝트에 가속.. 
  문제가 생기면 끝까지 조사해서 해결하려 하고, 제안하는 그런 모습을 보여주겟다.

  📄 CVPR : CV에선 최고의 컨퍼런스. ㅇ
  📄 CGRAB
역기구학 전기구학?
👍 Canva 보다는 Gamma. 
공급피더
https://learn.microsoft.com/en-us/windows/wsl/wsl-config


면접: forward" or "publish" 
  https://code.visualstudio.com/docs/devcontainers/containers#_forwarding-or-publishing-a-port
    - Neither specify EXPOSE nor -p
    - Only specify EXPOSE
    - Specify EXPOSE and -p
    - Only specify -p which implicitly does EXPOSE
면접: 모듈 vs 패키지
  ?
AllowStreamLocalForwarding ; https://man7.org/linux/man-pages/man5/sshd_config.5.html
  ⚖️ The available options are yes (the default)
👍 man page
  man(1)
    ⚓ groups ; https://man7.org/linux/man-pages/man1/groups.1.html
    ⚓🚣 getent ; https://man7.org/linux/man-pages/man1/getent.1.html
      get entries from Name Service Switch libraries
      # group
        

  GNU Coreutils ; https://www.gnu.org/software/coreutils/manual/coreutils.html#groups-invocation
    20 User information
      20.1 id: Print user identity
      20.2 logname: Print current login name
      20.3 whoami: Print effective user name
      20.4 groups: Print group names a user is in

      20.5 users: Print login names of users currently logged in
      20.6 who: Print who is currently logged in
      20.7 pinky: Print information about users

>> "호스트"는 네트워크에서 서비스를 제공하는 주체. ssh host 면 서버.

이 화면은 선택적으로 추가할 수 있는 파일이나 디렉터리를 묻는 옵션 창입니다. 여기에서 보여지는 파일은 .github/dependabot.yml입니다.

dependabot.yml 파일은 GitHub의 Dependabot을 설정하는 파일입니다. Dependabot은 프로젝트의 의존성(dependency) 업데이트를 자동으로 확인하고, 새 버전이 있을 때 PR(Pull Request)을 생성해주는 기능을 제공합니다. 주로 프로젝트에서 사용하는 라이브러리나 패키지들이 최신 상태로 유지되도록 도와줍니다.

Optional Files/Directories - .github/dependabot.yml
poetry3-poetry-pyenv
⚓ opt out ; https://en.wiktionary.org/wiki/opt_out

v4l2-ctl --list-formats-ext
v4l2-ctl -d /dev/video0 --all
v4l2-ctl -d /dev/video1 --all # metadata 가 포함되어있음.? 카메라마다 다른듯?
USB Webcam Appears as 2 Devices  문제..
  웹캠이 두 개의 스트림(예: 일반 영상 + 마이크 스트림 또는 두 가지 해상도 옵션)으로 인식될 때 발생

xhost +local:docker
❓ https://huggingface.co/



Devcontainer... 
Step 11/33 : RUN echo "done 0"     && curl https://pyenv.run | bash     && echo "done 1"     && pyenv install ${PYTHON_VERSION}     && echo "done 2"     && pyenv global ${PYTHON_VERSION}     && echo "done 3"     && curl -sSL https://install.python-poetry.org | python3 -     && poetry config virtualenvs.in-project true
 ---> Running in fbeaa359e5e4
unable to find user vscode: no matching entries in passwd file
[2024-10-17T04:31:47.237Z] unable to find user vscode: no matching entries in passwd file
Most NVIDIA Jetson containers run with root privileges by default. If you require non-root users (like vscode), you’ll need to create and configure them manually.

echo $XDG_SESSION_TYPE

https://www.canva.com/

lsusb -v -d 0bda:5411

💡 torch.Tensor**는 PyTorch의 데이터 구조이며, NumPy 배열과는 다른 메모리 관리 방식을 사용합니다.

https://code.visualstudio.com/docs/python/linting
  Linter.. https://marketplace.visualstudio.com/items?itemName=ms-python.mypy-type-checker
  prototype 엔 ㅓㅎ기?


Canva 기초배우기:
  🖇️ 기초 배우기 ; https://www.canva.com/design/DAGT4a4Zfxo/pUXsYyUcLJQRvpweu6g0Lw/edit 📅 2024-10-18 13:12:41
  🖇️ 프레젠테이션 제작 ; https://www.canva.com/design/DAGEJYzMKzk/qv9ABywF5dRLHDJXwO8zjA/remix?title=%ED%94%84%EB%A0%88%EC%A0%A0%ED%85%8C%EC%9D%B4%EC%85%98%20%EC%A0%9C%EC%9E%91 📅 2024-10-18 13:12:41
  소셜 미디어 학습 ; https://www.canva.com/design/DAGT5HklhSQ/8QN3wb3AELtc84k40Gq2cw/edit

양자역학 7 - 제 5차 솔베이 회의(물리학 학회)

PPT 간단 요약
  https://www.canva.com/design/DAGT5Pjd7-s/8_vLHAy9aLdXRKOpcEX3OA/edit


층간소음 -> 이웃사이센터
  https://www.noiseinfo.or.kr/floorinfo/consultrequest.do
  공동주택: 층간소음관뤼원회 구성 의무화 (2024.10.25)

  

calibration은 모델의 output prediction이 실제 확률값과 일치하도록 교정하는 작업을
There are two main uses of the term calibration in statistics that denote special types of statistical inference problems. Calibration can mean
⚓🪱 Calibration (statistics) ; https://en.wikipedia.org/wiki/Calibration_(statistics)
  a reverse process to regression, where instead of a future dependent variable being predicted from known explanatory variables, a known observation of the dependent variables is used to predict a corresponding explanatory variable;[1


1. prctl(PR_SVE_GET_VL) 오류 원인
prctl은 리눅스에서 프로세스의 속성을 제어하는 시스템 호출입니다.
이 오류는 PyTorch가 Jetson Nano와 같은 ARM 시스템의 CPU를 감지하려고 할 때 발생합니다.
**SVE(Scalable Vector Extension)**는 ARM의 특정 확장 기능인데, Jetson Nano에서는 이 기능이 지원되지 않기 때문에 prctl 호출에 실패합니다.



# https://github.com/ultralytics/ultralytics/issues/2964

# PyTorch 2.x 버전은 CUDA 11.x 이상과 호환 ...
# PyPI의 오래된 버전 제공 중단...: PyTorch의 이전 버전들은 더 이상 PyPI에서 제공되지 않을 수 있습니다...

in Jetson nano
  # already installed
  sudo apt-get install nvidia-container-runtime
  # already configured
  code /etc/docker/daemon.json
  {
      "runtimes": {
          "nvidia": {
              "path": "nvidia-container-runtime",
              "runtimeArgs": []
          }
      }
  }

  https://github.com/nvidia/nvidia-container-runtime#daemon-configuration-file
  https://stackoverflow.com/questions/59008295/add-nvidia-runtime-to-docker-runtimes

  runc와 NVIDIA 런타임의 차이 및 기본 런타임 설정 필요성
  1. runc란 무엇인가?
  **runc**는 Open Container Initiative (OCI) 표준을 따르는 가벼운 컨테이너 런타임입니다.
  runc는 Docker 및 다른 컨테이너 엔진에서 컨테이너의 실제 실행을 담당하는 런타임으로, 리눅스 컨테이너(LXC) 기술을 기반으로 작동합니다.
  기본 런타임으로 설정된 경우, GPU와 같은 특수 하드웨어에 접근할 기능이 없기 때문에 NVIDIA GPU와 관련된 기능은 사용할 수 없습니다​
  NVIDIA


vscode@97eac1039b5e /w/signal-masters> sudo find /usr -name 'libnvidia-ml.so*' ! -path '*stubs*'
vscode@97eac1039b5e /w/signal-masters> 

https://python-poetry.org/docs/repositories/
  poetry source
  
  poetry source add --priority=explicit pytorch-cu102 https://download.pytorch.org/whl/cu102
  poetry add --source pytorch-cu102 torch==1.7.0+cu102 torchvision==0.8.1+cu102

https://pytorch.org/get-started/previous-versions/#v1121
  🔑 version: ~CUDA 10.2
https://download.pytorch.org/whl/torch/
  🔑 version: manylinux2014_aarch64
    torch-1.12.1-cp310-cp310-manylinux2014_aarch64.whl

    cu- 접두사가 없는 PyTorch 빌드는 일반적으로 CUDA 런타임을 포함하지 않습니다.
    Jetson Nano에서는 JetPack SDK가 이미 시스템에 설치된 CUDA 런타임을 제공하므로, cu- 접두사가 없는 PyTorch 패키지도 GPU 가속을 사용할 수 있습니다.


👍 https://forums.developer.nvidia.com/t/gpu-usage-info-nvidia-smi-is-not-there/76155
  Hi Markus, nvidia-smi isn’t supported on Tegra-based platforms. Instead please try the tegrastats utility, you can launch it by running “sudo tegrastats” from the terminal.
  See here for the documentation on tegrastats tool: [url]Welcome — Jetson Linux<br/>Developer Guide 34.1 documentation 487
  jetson nano: >> %shell> tegratstats





libnvidia-ml.so.1는 NVIDIA Management Library (NVML)의 라이브러리입니다. NVML은 NVIDIA GPU의 상태를 모니터링하고 제어할 수 있는 API를 제공합니다. PyTorch와 같은 GPU 기반 라이브러리에서 이 라이브러리를 사용하여 GPU 프로세스 정보를 얻고, 메모리 사용량을 관리하는 등의 작업을 수행합니다. 오류 메시지를 보면, Docker 컨테이너 내에서 이 라이브러리를 찾을 수 없어서 발생한 문제입니다.



🚨 https://forums.developer.nvidia.com/t/how-to-enable-cuda-with-pytorch-running-on-a-jetson-nano-2gb-device/282762
head -n 1 /etc/nv_tegra_release

###### https://qengineering.eu/install-pytorch-on-jetson-nano.html?ref=xaviergeerinck.com

https://developer.nvidia.com/embedded/learn/tutorials/jetson-container

Jetson Nano에 맞는 PyTorch 버전과 휠 파일을 다운로드하여 설치해야 합니다. 현재 Jetson Nano에서 사용할 수 있는 PyTorch의 가장 최신 버전은 1.10.x입니다.

pip list --not-required


docker run --runtime nvidia -it --rm --network=host jayfalls/l4t-20.04:full-cp311
python3 -c 'import torch; print(f"PyTorch version: {torch.__version__}"); print(f"CUDA available:  {torch.cuda.is_available()}"); print(f"cuDNN version:   {torch.backends.cudnn.version()}"); print(torch.__config__.show());'
Package             Version
------------------- --------------------
certifi             2019.11.28
chardet             3.0.4
cmake               3.29.6
dbus-python         1.2.16
idna                2.8
numpy               1.23.1
pillow              10.3.0
pip                 24.1
psutil              6.0.0
PyGObject           3.36.0
python-apt          2.0.1+ubuntu0.20.4.1
requests            2.22.0
requests-unixsocket 0.2.0
setuptools          45.2.0
six                 1.14.0
tensorrt            8.2.1.8
torch               1.13.0
torchvision         0.14.0a0+5ce4506
typing_extensions   4.12.2
urllib3             1.25.8
wheel               0.34.2


TODO 남기기.
  #️⃣📰 Personalizing with dotfile repositories ; https://code.visualstudio.com/docs/devcontainers/containers#_personalizing-with-dotfile-repositories
  #️⃣📰 Known limitations ; https://code.visualstudio.com/docs/devcontainers/containers#_known-limitations
일단 컨테이너 안의 파일 복사 안됨.
TODO: for prototype.. VSCode dev containers..  ➡️ #📍 "Always installed" extensions
  TODO: vscode, ultralytics tos 크롤링


>>> Container DISPLAY...  ; https://stackoverflow.com/a/75663407

🚨 During the Docker build process, some steps may default to the root user. This means certain parts of the installation try to access directories like / (root directory) or attempt to write logs there.


🚨 왜 xhost +local:이 SSH 터미널에서 제대로 작동하지 않나?
  xhost 설정은 X 서버가 실행 중인 시스템에서 직접 실행해야 합니다. SSH를 통해 접속한 시스템은 X 서버를 직접 운영하지 않으므로, 권한을 변경하려고 할 때 문제가 발생합니다.

⚓ pytorch 정적 양자화 ; https://pytorch.org/docs/stable/quantization.html#quantization-api-summary




https://github.com/dusty-nv/jetson-containers

https://hub.docker.com/r/dustynv/pytorch/tags
https://github.com/dusty-nv/jetson-containers/blob/master/packages/pytorch/Dockerfile

https://www.elinux.org/Jetson_Zoo
⭕ Official ; https://github.com/dusty-nv/jetson-containers/tree/master
  docker run --runtime nvidia -it --rm --network=host dustynv/pytorch:1.10-r32.7.1
  %shell> python3 -c 'import torch; print(f"PyTorch version: {torch.__version__}"); print(f"CUDA available:  {torch.cuda.is_available()}"); print(f"cuDNN version:   {torch.backends.cudnn.version()}"); print(torch.__config__.show());'
    - CuDNN 8.2.1
    - Built with CuDNN 8.0

  docker run --runtime nvidia -it --rm --network=host nvcr.io/nvidia/l4t-pytorch:r32.7.1-pth1.10-py3
  docker run --runtime nvidia -it --rm --network=host jayfalls/l4t-20.04:full-cp311

in python 3.12
  (myenv) root@jsnano:~/test# python3 -c 'import torch; print(f"PyTorch version: {torch.__version__}"); print(f"CUDA available:  {torch.cuda.is_available()}"); print(f"cuDNN version:   {torch.backends.cudnn.version()}"); print(torch.__config__.show());'
  Error in cpuinfo: prctl(PR_SVE_GET_VL) failed
  /root/test/myenv/lib/python3.12/site-packages/torch/_subclasses/functional_tensor.py:295: UserWarning: Failed to initialize NumPy: No module named 'numpy' (Triggered internally at /pytorch/torch/csrc/utils/tensor_numpy.cpp:84.)
    cpu = _conversion_method_template(device=torch.device("cpu"))
  PyTorch version: 2.5.0
  CUDA available:  False
  cuDNN version:   None
  PyTorch built with:
    - GCC 10.2
    - C++ Version: 201703
    - Intel(R) MKL-DNN v3.5.3 (Git Hash 66f0cb9eb66affd2da3bf5f8d897376f04aae6af)
    - OpenMP 201511 (a.k.a. OpenMP 4.5)
    - LAPACK is enabled (usually provided by MKL)
    - NNPACK is enabled
    - CPU capability usage: NO AVX
    - Build settings: BLAS_INFO=open, BUILD_TYPE=Release, CXX_COMPILER=/opt/rh/devtoolset-10/root/usr/bin/c++, CXX_FLAGS=-ffunction-sections -fdata-sections -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOCUPTI -DLIBKINETO_NOROCTRACER -DLIBKINETO_NOXPUPTI=ON -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=open, TORCH_VERSION=2.5.0, USE_CUDA=OFF, USE_CUDNN=OFF, USE_CUSPARSELT=OFF, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=OFF, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 
      



root@jsnano:~/test# pyenv global 3.10
root@jsnano:~/test# python3 -m venv myenv
root@jsnano:~/test# source myenv/bin/activate
(myenv) root@jsnano:~/test# pip install https://download.pytorch.org/whl/torch-1.12.1-cp310-cp310-manylinux2014_aarch64.whl#sha256=4e1b9c14cf13fd2ab8d769529050629a0e68a6fc5cb8e84b4a3cc1dd8c4fe541
Collecting torch==1.12.1
  Downloading https://download.pytorch.org/whl/torch-1.12.1-cp310-cp310-manylinux2014_aarch64.whl (55.7 MB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 55.7/55.7 MB 736.2 kB/s eta 0:00:00
Collecting typing-extensions
  Downloading typing_extensions-4.12.2-py3-none-any.whl (37 kB)
Installing collected packages: typing-extensions, torch
Successfully installed torch-1.12.1 typing-extensions-4.12.2
WARNING: There was an error checking the latest version of pip.
(myenv) root@jsnano:~/test# python3 -c 'import torch; print(f"PyTorch version: {torch.__version__}"); print(f"CUDA available:  {torch.cuda.is_available()}"); print(f"cuDNN version:   {torch.backends.cudnn.version()}"); print(torch.__config__.show());'
PyTorch version: 1.12.1
CUDA available:  False
cuDNN version:   None
PyTorch built with:
  - GCC 10.2
  - C++ Version: 201402
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: NO AVX
  - Build settings: BLAS_INFO=open, BUILD_TYPE=Release, CXX_COMPILER=/opt/rh/devtoolset-10/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOCUPTI -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=open, TORCH_VERSION=1.12.1, USE_CUDA=OFF, USE_CUDNN=OFF, USE_EIGEN_FOR_BLAS=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=OFF, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=OFF, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

GPG stands for GNU Privacy Guard, a cryptographic system used to verify the integrity and authenticity of downloaded files or software. In the context of Docker installation, the GPG key is used to ensure that the Docker packages you're installing are indeed from the official Docker repository and haven’t been tampered with.
sudo apt-get install ca-certificates curl gnupg


(myenv) root@jsnano:~/test# deactivate
root@jsnano:~/test# python3 -c 'import torch; print(f"PyTorch version: {torch.__version__}"); print(f"CUDA available:  {torch.cuda.is_available()}"); print(f"cuDNN version:   {torch.backends.cudnn.version()}"); print(torch.__config__.show());'^C
pyroot@jsnano:~/test# pyenv global system
root@jsnano:~/test# python3 --version
Python 3.6.9
root@jsnano:~/test# python3 -c 'import torch; print(f"PyTorch version: {torch.__version__}"); print(f"CUDA available:  {torch.cuda.is_available()}"); print(f"cuDNN version:   {torch.backends.cudnn.version()}"); print(torch.__config__.show());'
PyTorch version: 1.10.0
CUDA available:  True
cuDNN version:   8201
PyTorch built with:
  - GCC 7.5
  - C++ Version: 201402
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: NO AVX
  - CUDA Runtime 10.2
  - NVCC architecture flags: -gencode;arch=compute_53,code=sm_53;-gencode;arch=compute_62,code=sm_62;-gencode;arch=compute_72,code=sm_72
  - CuDNN 8.2.1
    - Built with CuDNN 8.0
  - Build settings: BLAS_INFO=open, BUILD_TYPE=Release, CUDA_VERSION=10.2, CUDNN_VERSION=8.0.0, CXX_COMPILER=/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOCUPTI -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -DMISSING_ARM_VST1 -DMISSING_ARM_VLD1 -Wno-stringop-overflow, FORCE_FALLBACK_CUDA_MPI=1, LAPACK_INFO=open, TORCH_VERSION=1.10.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EIGEN_FOR_BLAS=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=OFF, USE_MKLDNN=OFF, USE_MPI=ON, USE_NCCL=0, USE_NNPACK=ON, USE_OPENMP=ON, 


curl -s https://download.pytorch.org/whl/torch/ | grep 'torch-1.10' | grep 'aarch64' | grep 'cp37' | awk -F'"' '{print "https://download.pytorch.org" $2}'
curl -s https://download.pytorch.org/whl/torch/ | grep 'aarch64' | grep 'cp36' | awk -F'"' '{print "https://download.pytorch.org" $2}'



torch (1.10.0)
torchaudio (0.10.0+d2634d8)
torchvision (0.11.0a0+fa347eb)

(myenv) root@jsnano:~/test# pip install https://download.pytorch.org/whl/cpu/torch-1.10.2-cp36-cp36m-manylinux2014_aarch64.whl#sha256=935e5ac804c5093c79f23a7e6ca5b912c166071aa9d8b4a0a3d6a85126d6a47b
torch-1.10.2-cp36-cp36m-manylinux2014_aarch64.whl is not a supported wheel on this platform.






https://github.com/jayfalls/jetson_nano_ubuntu20_docker/tree/main



🖨️ 인천관리시설관리공단 / 포스코 ICT 📅 2024-10-21 09:12:00
  내년 2월에 한 번 있음.
  >>>>>>>
  교대근무하면 4300   안하면 4000

  기술자 ?

1시 발표.



하드웨어 아키텍처
소프트웨어 아키텍처
  // 모델..
  작업 흐름도
  



젯슨 나노용 프로젝트 git 하나 만들어서 올려야겟음. 변경사항 확인이 너무 어려워서.. ppt 에 만들 README.md 이거에 대해서도 만들어야 하고.

지금 현재 가상환경 사용 안하는중인데 (어차피 버전낮아서 가상환경 만들면 torch +yolo 설치 어려움.. pip install 에 목록 없어서), 이 경우 내 패키지 모듈화하고 있는데 이게 자꾸 module not found 떠서 이거도 해결해야함.


Jetson nano yolo 양자화 (금방할듯?) 하고 테스트하고 pyserial 로 연동하기



docker run --runtime nvidia -it --rm --network=host ultralytics/ultralytics:latest-jetson-jetpack4
python3 -c 'import torch; print(f"PyTorch version: {torch.__version__}"); print(f"CUDA available:  {torch.cuda.is_available()}"); print(f"cuDNN version:   {torch.backends.cudnn.version()}"); print(torch.__config__.show());'

cuDNN version:   None

sudo apt update
sudo apt install libcudnn8 libcudnn8-dev


docker run --runtime nvidia \
  --gpus all \
  -e LD_LIBRARY_PATH=/usr/local/cuda/lib64:/usr/lib/aarch64-linux-gnu \
  -it ultralytics/ultralytics:latest-jetson-jetpack4 /bin/bash


이미 설치 잘 되어있어vscode@jsnano:/workspaces/signal-masters$ pip freeze --all | grep torch
torch @ https://github.com/ultralytics/assets/releases/download/v0.0.0/torch-1.11.0a0+gitbc2c6ed-cp38-cp38-linux_aarch64.whl#sha256=87c3b1fade566123ddb4e1aa3e7a4ad49a5f05c8324556b0d8b40896731bf4ae
torchvision @ https://github.com/ultralytics/assets/releases/download/v0.0.0/torchvision-0.12.0a0+9b5a3fe-cp38-cp38-linux_aarch64.whl#sha256=71fb38cc7c39e825119f23cd896877b883c5e9fb4a77ca3fabfb35912dd41c60

ChatGPT의 말:
ChatGPT
현재 PyTorch와 torchvision이 설치되어 있지만, 해당 버전에서는 cuDNN을 사용하지 않도록 설정된 상태입니다. 문제의 원인은 PyTorch가 cuDNN이 비활성화된 상태로 빌드된 버전을 사용하고 있기 때문입니다.

아래 해결책으로 문제를 확인하고 해결해 보세요.

1. PyTorch 빌드 문제 확인
PyTorch가 cuDNN을 인식하지 못하는 이유는 해당 버전이 cuDNN 지원 없이 빌드된 버전이기 때문입니다. 현재 설치된 버전이 다음과 같습니다:

PyTorch: 1.11.0a0+gitbc2c6ed
Torchvision: 0.12.0a0+9b5a3fe
이 버전들은 ultralytics에서 제공된 커스텀 빌드이며, 이 빌드에서 USE_CUDNN=OFF로 설정된 상태입니다. 따라서 cuDNN이 활성화되지 않는 것입니다.



FROM nvcr.io/nvidia/l4t-base:r32.7.1 이미지에, python3.12 가상환경을 설치해서 import torch 후 is_available() 하는 경우
  Error in cpuinfo: prctl(PR_SVE_GET_VL) failed





docker run --runtime nvidia -it --rm --network=host jayfalls/l4t-20.04:full-cp311

✅  model -> onnx 변환까지는 어느 호스트에서 해도 상관없는데,tensorrt 로 변환만 젯슨 나노에서 하면되는거?
  sudo apt install python3-pip -y

Jetson Nano
  git clone https://github.com/jayfalls/jetson_nano_ubuntu20_docker
  cd jetson_nano_ubuntu20_docker/yolo

  ## sudo mv .. 이거 왜 한거지?
    sudo mv /var/swapfile /var/swapfile_org
    mkdir yolov8; cd yolov8
    chmod u+x yolov8_install.sh
    ./yolov8_install.sh
    yolo task=detect mode=predict model=yolo8n.pt source=0 show=True


  창민님꺼에서 이거 없앳나? utils 체크하는거? 확인 필요.
      
    wget https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11n-pose.pt
    pip3 install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu102 --force-reinstall
    pip3 install ultralytics
    yolo export model=yolo11n-pose.pt format=onnx opset=13 simplifyxz

    python3 -c 'import torch; print(f"PyTorch version: {torch.__version__}"); print(f"CUDA available:  {torch.cuda.is_available()}"); print(f"cuDNN version:   {torch.backends.cudnn.version()}"); print(torch.__config__.show());'
    python3 -c 'import cv2; print(f"CUDA available: {cv2.cuda.getCudaEnabledDeviceCount() > 0}")'
    >>>>>>>> 👍 True True for  sudo docker run --runtime nvidia -it --rm --network=host dustynv/l4t-ml:r32.7.1
      https://github.com/dusty-nv/jetson-containers/tree/master/packages/l4t/l4t-ml

    from ultralytics import YOLO
    from ultralytics.engine.results import Results
    model = YOLO("yolo11n-pose.pt")  # Load pre-trained YOLO model
    print(model.predict("https://ultralytics.com/images/bus.jpg"))
    print(model.predict("https://ultralytics.com/images/bus.jpg"))
    print(model.predict("https://ultralytics.com/images/bus.jpg"))
    print(model.predict("https://ultralytics.com/images/bus.jpg"))
    print(model.predict("https://ultralytics.com/images/bus.jpg"))
    print(model.predict("https://ultralytics.com/images/bus.jpg"))
    print(model.predict("https://ultralytics.com/images/bus.jpg"))
    print(model.predict("https://ultralytics.com/images/bus.jpg"))
    print(model.predict("https://ultralytics.com/images/bus.jpg"))
    print(model.predict("https://ultralytics.com/images/bus.jpg"))
    ...

>>>>>>>> 👍  for
xhost +local:docker && sudo docker run \
--runtime nvidia \
-it --rm
--network host --ipc host 
--gpus all \
-e DISPLAY=$DISPLAY \
-v /tmp/.X11-unix:/tmp/.X11-unix \
-v ~/.Xauthority:/root/.Xauthority \
ultralytics/ultralytics:latest-jetson-jetpack4


>>>> NVIDIA Machine Learning Containers for Jetson and JetPack ; https://github.com/dusty-nv/jetson-containers
docker pull dustynv/l4t-ml:r36.2.0

docker run --runtime nvidia -it --rm --network=host dustynv/pytorch:1.10-r32.7.1
https://hub.docker.com/r/dustynv/l4t-ml/tags
sudo docker run --runtime nvidia -it --rm --network=host dustynv/l4t-ml:r32.7.1


🚨 https://forums.developer.nvidia.com/t/unable-to-install-ultralytics-in-python3-6-in-jetpack4-6/275989/3
  https://github.com/ultralytics/yolov5/issues/11341
  python < 3.7 ...
https://pypi.org/project/pip-tools/


캘리브레이션 과정
[10/21/2024-12:34:34] [TRT] [W] Skipping tactic 3 due to insuficient memory on requested size of 796 detected for tactic 4.
Try decreasing the workspace size with IBuilderConfig::setMaxWorkspaceSize().
[10/21/2024-12:34:35] [TRT] [W] Tactic Device request: 947MB Available: 472MB. Device memory is insufficient to use tactic.
[10/21/2024-12:34:35] [TRT] [W] Skipping tactic 3 due to insuficient memory on requested size of 947 detected for tactic 4.
Try decreasing the workspace size with IBuilderConfig::setMaxWorkspaceSize().
[10/21/2024-12:34:42] [TRT] [W] Tactic Device request: 531MB Available: 515MB. Device memory is insufficient to use tactic.
[10/21/2024-12:34:42] [TRT] [W] Skipping tactic 3 due to insuficient memory on requested size of 531 detected for tactic 4.
Try decreasing the workspace size with IBuilderConfig::setMaxWorkspaceSize().

jsnano@jsnano:~$ tegrastats 
RAM 1332/3956MB (lfb 24x4MB) SWAP 234/6074MB (cached 31MB) CPU [5%@710,5%@921,4%@921,2%@921] EMC_FREQ 0% GR3D_FREQ 0% PLL@27C CPU@28.5C PMIC@50C GPU@29.5C AO@33.5C thermal@29C
RAM 1332/3956MB (lfb 24x4MB) SWAP 234/6074MB (cached 31MB) CPU [4%@102,4%@102,5%@102,2%@102] EMC_FREQ 0% GR3D_FREQ 0% PLL@27C CPU@29C PMIC@50C GPU@29.5C AO@33.5C thermal@29C
RAM 1332/3956MB (lfb 24x4MB) SWAP 234/6074MB (cached 31MB) CPU [9%@204,4%@204,8%@204,4%@204] EMC_FREQ 0% GR3D_FREQ 0% PLL@27C CPU@28.5C PMIC@50C GPU@29.5C AO@33.5C thermal@29C
RAM 1333/3956MB (lfb 24x4MB) SWAP 234/6074MB (cached 31MB) CPU [13%@102,6%@102,15%@102,16%@102] EMC_FREQ 0% GR3D_FREQ 0% PLL@27C CPU@28.5C PMIC@50C GPU@29.5C AO@33.5C thermal@29C
^C
🅾️ jsnano@jsnano:~$ sudo docker run --runtime nvidia -it --rm --network=host --ipc=host --gpus all ultralytics/ultralytics:latest-jetson-jetpack4
[sudo] password for jsnano: 
root@jsnano:/ultralytics# 


👍 Try 3
  >>>>>>> sudo docker run --runtime nvidia -it --rm --network=host --ipc=host --gpus all -v ~/repos/signal-masters:/workspace ultralytics/ultralytics:latest-jetson-jetpack4
  Run python3, and ctrl + c and ctrl + v

  from ultralytics import YOLO

  # Load a YOLOv8n PyTorch model
  model = YOLO("/workspace/best.pt")

  # Export the model
  model.export(format="engine", half=True)  # creates 'yolov8n.engine'

  # Load the exported TensorRT model
  trt_model = YOLO("/workspace/best.engine")

  # Run inference
  results = trt_model("https://ultralytics.com/images/bus.jpg")


Yolo NAS

class_labels = {
    0: "GO",
    1: "LEFT",
    2: "RIGHT",
    3: "STOP",
    4: "SLOW"
}

👍 Try 4 with Fine Tuning
  >>>>>>> docker run --runtime nvidia -it --rm --network=host --ipc=host --gpus all \
-v ~/repos/signal-masters:/workspace ultralytics/ultralytics:latest-jetson-jetpack4 \
python3 -c "

from ultralytics import YOLO
model = YOLO('/workspace/best.pt')
model.names = {0: 'GO', 1: 'LEFT', 2: 'RIGHT', 3: 'STOP', 4: 'SLOW'}
model.export(format='engine', half=True)

trt_model = YOLO('/workspace/best.engine', task='pose')
trt_model.names = {0: 'GO', 1: 'LEFT', 2: 'RIGHT', 3: 'STOP', 4: 'SLOW'}
results = trt_model('https://ultralytics.com/images/bus.jpg')
results_origin = model('https://ultralytics.com/images/bus.jpg')
print(results)
print(results_origin)
"



🧮 Snippet: container_host_file_transfer.sh
  #!/bin/bash

  # Define variables for container names, paths, and filenames
  CONTAINER_NAME="cranky_elgamal"  # Docker container name
  DOCKER_CONTAINER_PATH="/ultralytics"  # Path inside the Docker container
  LOCAL_REPO_PATH="$HOME/repos/signal-masters/ml/models/from_ultralytics_container"  # Local path for storing copied files
  ENGINE_FILENAME="yolo11n-pose.engine"  # Name of the engine model file
  ONNX_FILENAME="yolo11n-pose.onnx"  # Name of the ONNX model file

  # Define variables for remote server connection
  DESTINATION_USER="wbfw109v2"  # Username for the remote server
  DESTINATION_HOST="10.10.16.154"  # Remote server's IP address
  DESTINATION_PATH="/home/$DESTINATION_USER/repo/synergy-hub/prototypes/_initialization/devcontainers/jetson_nano-mount/signal-masters/ml/models/from_ultralytics_container"  # Remote destination path

  # Copy ONNX model from Docker container to the local directory with '_half' suffix
  docker cp "$CONTAINER_NAME:$DOCKER_CONTAINER_PATH/$ONNX_FILENAME" "$LOCAL_REPO_PATH/${ONNX_FILENAME%.*}_half.onnx"

  # Copy engine model from Docker container to the local directory with '_half' suffix
  docker cp "$CONTAINER_NAME:$DOCKER_CONTAINER_PATH/$ENGINE_FILENAME" "$LOCAL_REPO_PATH/${ENGINE_FILENAME%.*}_half.engine"

  # Transfer the local model files to the remote server using SCP
  scp -r $LOCAL_REPO_PATH/* "$DESTINATION_USER@$DESTINATION_HOST:$DESTINATION_PATH/"

scp -r ~/repos/signal-masters wbfw109v2@10.10.16.154:/home/wbfw109v2/repo/synergy-hub/prototypes/_initialization/devcontainers/jetson_nano-mount

🥇 scp -r ~/repos/signal-masters/* wbfw109v2@10.10.16.154:/home/wbfw109v2/repo/Signal-Project/jetson-nano-mount/
rsync --archive --verbose --update --delete --dirs --progress \
  --exclude='.git' \
  $(git -C ~/repos/signal-masters ls-files --others --ignored --exclude-standard | sed 's/^/--exclude=/') \
  ~/repos/signal-masters/ \
  wbfw109v2@10.10.14.19:/home/wbfw109v2/repo/Signal-Project/jetson-nano-mount/


젯슨 나노에 전원이 들어오면, 젯슨 나노컨테이너에서 yolo 모델을 불러온 후 /dev/ttyACM0 serial 로 통신하도록 했는데, 이를 python3 run.py 를 실행하도록 하는 서비스로 만들어서 사용중.
근데 ACM0 와 통신이 안되는것? Python Serial 


docker exec -d -w /workspaces/signal-masters f4ce64f0a3af python3 run.py
rsync -av --exclude='.venv' ../cuda_test/ ./


사용한 볼트.
3.4v*3
3.7V, 4.44Wh
18650-2200mAh
YU10801-18001
Shenzhen Huayu New Energy Techonlogy Co.,LTD

# Copy ONNX model from Docker container to the local directory with '_half' suffix
docker cp "$CONTAINER_NAME:$DOCKER_CONTAINER_PATH/$ONNX_FILENAME" "$LOCAL_REPO_PATH/${ONNX_FILENAME%.*}_half.onnx"

# Copy engine model from Docker container to the local directory with '_half' suffix
docker cp "$CONTAINER_NAME:$DOCKER_CONTAINER_PATH/$ENGINE_FILENAME" "$LOCAL_REPO_PATH/${ENGINE_FILENAME%.*}_half.engine"

# Transfer the local model files to the remote server using SCP
scp -r $LOCAL_REPO_PATH/* "$DESTINATION_USER@$DESTINATION_HOST:$DESTINATION_PATH/"


**docker exec -d**는 백그라운드에서 명령을 실행합니다. 이 경우 systemd는 서비스가 즉시 완료되었다고 인식합니다.

journalctl -u signal-masters.service -f



git config user.name "wbfw109v2"
git config user.email "wbfw109v2@gmail.com"

>>>>>>>>>>>📰❓ 각 A, B, C (각자 다른 데스크탑 PC를 가지고 있음. ssh 클라이언트이다.) 에서 D (SSH 서버) 로 접속한다고 가정. 📅 2024-10-23 06:19:56
  - A, B, C 는 ssh 클라이언트로서 D 에 "동일한" jsnano 계정으로 접속한다.
  - A, B, C 는 D에 접속 후, D-C 에 "동일한" nano 계정으로 접속한다.
  - A, B, C 는 D-C 에 "동일한" 작업 디렉터리에 대해 각 다른 git email, name 으로 관리를 해야 한다.
  1번, 4번에 대해 쓰려고 하는데,
  - A, B, C 는 D-C 에 접속할 때 docker exec 명령어가 아니라 VSCode 의 dev container 기능인 Reopen in dev container 기능을 가지고 컨테이너 안에서 작업을 한다.
    devcontainer.json 설정을 사용.
 어떻게 해야해?

    >> ssh -t jsnano@D "export GIT_AUTHOR_NAME='User A'; export GIT_AUTHOR_EMAIL='userA@example.com'; docker exec -it D-c /bin/bash"

      #!/bin/bash 에 설정필요..

      # SSH 접속 시 환경변수로 전달된 사용자 정보 활용
      GIT_USER_NAME=${GIT_AUTHOR_NAME:-"Default User"}
      GIT_USER_EMAIL=${GIT_AUTHOR_EMAIL:-"default@example.com"}

      # Git 설정 임시 적용
      git config user.name "$GIT_USER_NAME"
      git config user.email "$GIT_USER_EMAIL"

      1-1. entrypoint.sh 작성
        컨테이너 내부 /workspace/entrypoint.sh에 다음과 같이 작성합니다:

        bash
        Copy code
        #!/bin/bash

        # 사용자의 Git 정보 설정
        git config --global user.name "${GIT_USER_NAME:-'Default User'}"
        git config --global user.email "${GIT_USER_EMAIL:-'default@example.com'}"

        # 원래의 쉘을 시작합니다 (VSCode가 필요로 하는 bash 세션 유지)
        exec "$@"


      2-1. devcontainer.json 수정
        json
        Copy code
        {
          "name": "My Dev Container",
          "image": "ubuntu:latest",
          "remoteEnv": {
            "GIT_USER_NAME": "User A",
            "GIT_USER_EMAIL": "userA@example.com"
          },
          "overrideCommand": false,
          "initializeCommand": "/workspace/entrypoint.sh"
        }

        initializeCommand: 컨테이너가 시작될 때마다 entrypoint.sh가 실행됩니다.
        overrideCommand: 기본 명령을 덮어쓰지 않고 유지합니다.

  ... 인증은 어떻게함? config 는 달리해서 로그인했는데
    그냥 push 할 떄마다 매번 oauth 요구하게는 못하나?

    git config --global --unset credential.helper
  GitHub OAuth 인증을 강제하거나 매번 로그인을 유도하려면 다음과 같은 우회 방법을..?


  아니면 commit 만 하고 확장 프로그램 사용해서 관리하거나, 

Mediapipe -> 

👍 자이언트 스텝. 좋은 중견기업 ?

한국엔지니어링협회 .. 뭐하는곳?
  gksrnrwjdqhxhdtls

Joint, Velocity, Bone의 의미:
  Joint (관절 정보):

  인체의 주요 관절(예: 어깨, 팔꿈치, 무릎 등)의 절대적인 위치 좌표를 사용합니다. 이는 특정 순간의 신체 상태를 나타냅니다.
  Velocity (속도 정보):

  관절의 시간에 따른 변화량을 측정하며, 움직임의 속도를 의미합니다.
  이는 동작의 빠르기나 가속도를 포착해 특정 활동의 다이내믹을 구별하는 데 유용합니다.
  Bone (뼈 정보):

  인접한 두 관절 사이의 벡터를 나타내며, 신체의 포즈나 관절 간 관계를 파악합니다.
  이는 움직임의 구조적 특징을 추출하는 데 사용됩니다

PoseC3D는 3D-CNN 기반으로, 기존 GCN 기반 접근과 달리 그래프 구조 대신 3D 히트맵 볼륨을 사용해 스켈레톤 데이터를 처리합니다​
  - GCN과 차별화된 점:
    - 노이즈 강인성: 포즈 추정 시 발생하는 오류에 덜 민감하며, 다중 인물 추적에서도 추가 비용 없이 동작합니다.
    - 확장성: RGB 데이터와 쉽게 통합할 수 있어 다양한 모달리티 결합에 유리합니다.
    - 스켈레톤 행동 인식의 효율성 개선: 시간적, 공간적 패턴 학습에 유리한 구조를 가집니다​
  - 한 줄 요약:
    - PoseC3D는 3D-CNN을 활용하여 GCN의 한계를 극복하고, 더 높은 정확도와 유연성을 제공하는 최신 스켈레톤 행동 인식 모델입니다.


- X3D는 경량화된 3D-CNN 아키텍처로, 동작 인식에서 높은 성능과 효율성을 제공하기 위해 설계되었습니다.
  - 채널 수와 네트워크 깊이를 최소화하여, FLOPs(연산량)과 파라미터 수를 크게 줄이는 것이 특징입니다.
  - 이러한 특성 덕분에, 임베디드 시스템과 같은 제한된 자원 환경에서도 실시간 성능을 제공합니다.
  - PoseC3D와 같은 스켈레톤 기반 모델의 백본으로 활용되어, 동작 인식의 정확도를 높이는 데 기여합니다

3D-CNN(3D Convolutional Neural Network)은 시간과 공간 축을 함께 처리하는 합성곱 계층을 통해, 동영상이나 시계열 데이터에서 시간적 및 공간적 패턴을 동시에 학습하는 네트워크입니다.


>> 전체 파이프라인 필요할듯

골격 기반(Skeleton-based) 모델: 관절 포인트(keypoints) 데이터를 활용한 액션 인식에 최적화됨.
경량화된 아키텍처: X3D-s 백본은 총 241K 파라미터와 0.6GFLOPs만 사용하여 높은 효율성 제공.
노이즈 강인성(Noise Robustness): 다양한 자세 변형과 외부 환경 노이즈에도 안정적인 성능 제공.
실시간 처리 가능성: FLOPs가 낮아 임베디드 시스템이나 제한된 자원에서의 실시간 처리에 유리.
정확도: NTU60-XSub 데이터셋에서 92.3% 정확도를 달성, 최적의 경량 모델로 인정.
확장성: 다른 X3D 변형들과 마찬가지로 더 깊고 넓은 네트워크로 확장 가능하지만, 이 경우 성능과 자원 간의 균형 고려 필요.


# PoseC3D와 GCN의 문제점 및 해결 방안 정리

## 1. GCN(Graph Convolutional Network)의 문제점
GCN 기반 접근법은 스켈레톤 데이터를 그래프로 처리하며 액션 인식을 수행하지만 여러 단점이 존재합니다:

- **포즈 추정 모델 의존성**:  
  GCN은 관절 데이터를 그래프 노드로 사용하므로, 정확한 포즈 추정이 중요합니다. 그러나 포즈 추정 과정에서 발생하는 작은 오류나 노이즈에 매우 민감해 인식 성능이 저하될 수 있습니다.

- **시공간적 정보 처리의 한계**:  
  GCN은 그래프의 공간적 구조에는 강하지만 시간적 변화(temporal dynamics)를 효과적으로 처리하는 데 제한이 있습니다. 이로 인해 복잡한 움직임 인식에 어려움이 있습니다.

- **연산 복잡도의 선형 증가**:  
  GCN에서는 스켈레톤의 각 관절이 노드로 표현되며, 관절의 수와 프레임이 증가함에 따라 연산 복잡도가 선형적으로 늘어납니다. 이는 특히 실시간 처리 시스템에서 성능 저하를 초래할 수 있습니다.

- **확장성 문제**:  
  GCN 기반 모델은 주로 스켈레톤 데이터에 최적화되어 있어, RGB와 같은 다중 모달리티 데이터를 함께 처리하기 어렵습니다.

## 2. PoseC3D와 X3D 백본의 해결 방안
PoseC3D는 위의 문제를 해결하기 위해 **3D-CNN** 기반의 접근을 도입합니다. 이 모델은 **3D 열 지도(heatmap volume)**로 스켈레톤 데이터를 처리해 보다 강인한 시공간 정보 학습을 가능하게 합니다:

- **노이즈 강인성(Noise Robustness)**:  
  3D-CNN은 포즈 추정 과정에서 발생하는 작은 오류에 더 강하며, 스켈레톤 시퀀스의 시공간적 변화를 잘 포착합니다.

- **효율적인 연산 및 경량화**:  
  X3D와 같은 백본을 사용해 경량화된 네트워크로 설계되어, 241K 파라미터와 0.6GFLOPs로 실시간 처리가 가능합니다. 이는 Jetson Nano와 같은 임베디드 시스템에서도 높은 효율을 제공합니다.

- **다양한 모달리티와의 호환성**:  
  PoseC3D는 스켈레톤뿐 아니라 RGB 데이터와의 결합도 가능하여 확장성과 유연성을 제공합니다.

## 3. 결론
PoseC3D는 GCN의 단점을 해결하면서도 효율성을 극대화한 모델로, **임베디드 시스템 및 실시간 액션 인식**에 적합한 솔루션입니다. X3D 백본을 활용한 가벼운 설계는 연산 자원을 줄이면서도 높은 성능을 제공합니다. 이 모델은 특히 **교통 신호 인식**과 같은 정확한 동작 인식이 필요한 응용에 유리합니다.
더 깊이 있는 내용은 논문의 [원문](https://arxiv.org/pdf/2104.13586)에서 확인할 수 있습니다.

5개 포즈

>> preprocess 어떻게 개선할것이냐.
  threading - 
  FlowChart 개선


양자화 INT8
가상환경 
  [10/21/2024-15:02:11] [TRT] [E] ModelImporter.cpp:779: ERROR: builtin_op_importers.cpp:3352 In function importRange:
  [8] Assertion failed: inputs.at(0).isInt32() && "For range operator with dynamic inputs, this version of TensorRT only supports INT32!"
  

WIKFI MODULE: NodeMCU
  price is ow
공유기 enba

AP(Application Processor)
휴대폰 스테이션 모드?
VNC ?

CMOS 세팅?



⚓ Cuda Compaitilbity
  https://docs.nvidia.com/cuda/cuda-toolkit-release-notes/index.html



https://www.ros.org/reps/rep-2000.html#jazzy-jalisco-may-2024-may-2029
🆚 
  flatpak install flathub com.usebottles.bottles
  flatpak run com.usebottles.bottles
  >> bottles, wine, flatpak 모두 써봤는데 wine 이 제일 낫다..
    https://docs.usebottles.com/advanced/cli

  - Create a new Bottle
    Bottle type: Application

# lscpu | grep Virtualization
#  https://docs.usebottles.com/advanced/cli


===== Run level
  # df
  #   /boot/efi : 부트 로더
  #   /dev/sda<n>: n번쨰 파티션에 설치되어있음.

  # text mode
  sudo init 3
  runlevel 
  # runlevel 은 유지보수, 복구모드에서 사용된다. root 로 이용됨.
  ps -F
  # system call functions: folk ..

  cat /etc/init.d/smbd

  #
  sudo apt install samba
  sudo service smbd status
  # make ARCH=arm CROSS_COMPILE=(which arm-linux-gnueabihf) - menuconfig
  #   - Device Tree Control: .. 
  sudo apt instsal lbuild-essential libncursed-5-dev libssh-dev bision flex libelf-dev dwarves

  ### "time"
  time make bzImage -j4

  man read
  su - root 🆚 su root
  📰 lost+found 복구.. sync 명령어?
  📰 which cd 하면 안나오는 이유가 내장 명령어라서. which cp 는 나옴. 외장 명령어라서. (일반 바이너리 파일들)
  📰 lsmod. 모델에 적재되어있는 디바이스 드라이브 확인. .ko 는 커널 오브젝트 파일
  커널 다운로드 후 커널이미지.. ls -l arch/x86/boot/bzImage
  sudo make modules_install --> 램디스크.. 필요..?
  /boot/..? 부트 로더 위치?
  /llib/modules/
  find . -name *.ko | wc -l  # 개수 확인.
  # debug mode, release mod 가 있음. strip 옵션은 릴리즈 모드에서 사용하는 것.
  # sudo find . -name *.ko -exec strip --strip-unnedded {} \; 
  📰 du -
  gedit ~/linux_c/copy.d/copy.c
  sudo apt install universal-ctags vim
  sudo ctags -R
  vi .. ~/.vimrc
    set number
    set ts=4
    set cindent
    set autoindent
    set smartindent
    set tags=/usr/include/tags
  # ps -ef | grep c.txt
https://docs.ros.org/en/jazzy/Releases.html

TPM이나 Secure Boot 환경이 아닌 경우: TPM이나 Secure Boot가 지원되지 않거나 사용되지 않는 QEMU 같은 가상화 환경에서는 X.509 서명 검증이 필요하지 않습니다.
  $ make menuconfig			   
  -*- Cryptographic API  --->          // 이동 후 제일 아래(인증 문자열 제거)
  # 커널의 보안과 무결성 검증에 사용되는 X.509 인증서와 간련된 것.
  Certificates for signature checking  --->   //선택, 아래 문자열 제거
  (debian/canonical-certs.pem) Additional X.509 keys for default system key  
  ()  Additional X.509 keys for default system keyring

  (debian/canonical-revoked-certs.pem) X.509 certificates to be preloaded into the system blacklist key 
  ()    X.509 certificates to be preloaded into the system blacklist key
    수정 후 Exit 선택 후 저장/종료

📍 Interview: Sticky bit ; https://en.wikipedia.org/wiki/Sticky_bit
  for /tmp dirctory 





📍 효림엑스이: https://m.saramin.co.kr/job-search/company-info-view?csn=aEpLbHFBQjhucHdVQ1FuWkl5QmZFQT09&t_ref_content=generic
  KS ? 에 들어가는 네비게이션을 만드는 회사? 
  
  
  DMS
    시나리오 설정.: 졸음 감지,  등등
    !! 모델 평가 및 검증에!!
      정밀도, 재현율 등 다양한 지표를 통해 모델의 정확서 ㅇ평가.
      및, 실제 테스트 및 검증. 필드에서 정확성과 신뢰성 평가.
      - 벤치 평가 & 👍 실차 평가. CANalyzer와 CANoe가
    검증 툴? 👍 캔벡터 Vector.. 강 교수님께서 가지고 계신다고 한다.
      Candb?
    


  자동차 검증 엔지니아
  DMS 시나리오. 자동차 전장 시나리오에서..  자율주행 3단계 정도에 들어가는 시나리오.
  이론&법규 세미나
  Driving Montioring system (DMS). 운전자의 상태를 실시간 감지/분석 운전 중 발생할 수 있는 위험 요소르 ㄹ최소화.
    졸음 운전, 주의 산만 등..
    Types
      ADDW (Advanced Driver Distraction Warning); 고급 운전자 주의산만 경고시스템
      DDAW (Driver Drowsiness and Attention Warning); 운전자 졸음 및 주의 경고시스템
    https://eur-lex.europa.eu/legal-content/EN/TXT/?uri=CELEX%3A02019R2144-20240707
    👍 자동차를 판매하기 위해서 무조건 넣어야 한다.
      2024년부터 출시하는 모든 차량에 DMS 탑재 의무화.. (EU 법규). >>>>  ㅜㅅ요가확실.
      General Safety Regulation(GSR)* 규정
      https://single-market-economy.ec.europa.eu/publications/new-rules-vehicle-safety-and-automated-mobility_en
      2024년 7월 7일부터 유럽 연합(EU)에서는 모든 신규 차량에 Driver Monitoring System(DMS) 탑재를 의무화했습니다
      EU 에서 정한 법규가 잇다.
        👍 요구사항, 활성/비활성화 기준, 경고 방식, 경고 성격, 항목.
  동적 계산 그래프 vs 정적 계산 그래프
    tensorflow 는 정적 계산 그래프 기반.
    pytorch sm 동적 계산 그래프 기반.

Driving Montioring system (DMS) - Driver Drowsiness and Attention Warning
https://eur-lex.europa.eu/legal-content/EN/TXT/HTML/?uri=PI_COM:Ares(2021)1075107&rid=11
💯 https://eur-lex.europa.eu/legal-content/EN/ALL/?uri=PI_COM%3AAres%282021%291075107


Regulation (EU) 2019/2144

#!/bin/bash


sudo bash -c "tee temp.txt > /dev/null <<EOF
    [Unit]
    Description=TAP Interface Setup Service
    # Ensure the service starts only after the ba sic network is ready and NetworkManager is active.
    After=network.target NetworkManager.service
    # Prefer to run this service when the network is fully online, but it's not mandatory.
    Wants=network-online.target

    [Service]
    Type=oneshot
    ExecStart=/usr/bin/env bash -c '\\\\
      # 📝 Note: No need to manually bring up "$bridge_name", as activating "$connection_name" automatically handles the bridge interface activation. \
      sudo nmcli connection up $bridge_name && \\\\
      # 1. Create a TAP interface \\\\
      sudo ip tuntap add dev $tap_name mode tap user $(whoami) && \\\\
      # 2. Attach the TAP interface to the bridge \\\\
      sudo ip link set $tap_name master $bridge_name && \\\\
      # 3. Activate the TAP interface \\\\
      # It may take up to 10 seconds for the TAP interface to initialize inside a VM. \\\\
      sudo ip link set $tap_name up \\\\
    '
    ExecStop=/usr/bin/env bash -c ' \\\\
      sudo ip link set $tap_name down && \\\\
      sudo ip tuntap del dev $tap_name mode tap \\\\
    '
    RemainAfterExit=yes

    [Install]
    WantedBy=multi-user.target   
EOF"

address bus, data bus... 
  데이터 access 할 때 address bus 에 주소를 지정하고 그 주소에 8bit나 그런 데이터를 데이터 버스에 실어서 내가 
  32비트 아키텍처에서 접근할 수 있는 메모리 범위
b0 ~ 32 
🪱 Segmentaton Fault 오류 ; 메모리 잘못 접근.
전역 변수는 global 변수와 같은 공간에..
32 비트 운영체제에서는 4 바이트 주소 체계를 가짐. 포인터의 크기. 
  어드레스는 단순히 주소. 포인터는?.. 크기정보가 있는 포인터. 없는것도 잇긴 함. void pointer.
data bus 가 32 bit 이기 때문에 컴퓨터가 빠르게 접근할 수 있는 크기가 4바이트. 🚣 한 클럭에.
>>> 💹 chaggpt explain detail of program mermoy layout at most

스택에다가 구조체를 할당하면 ❓ **스택에 할당하는 구초제 비율이 커지니까 비효율적이니까** 힙 영역에 할당 권장. new delete
    copy. evalulation strategy

  list.append(..) 그래서 비효율적이다. ????

  - stack 은 힙보다 한정적인 ㅐ
  -- X 프로그램을 실행할 때 스택 stack size 를 정할 수가 있나?

>> Linux commands todo sort out
  https://man7.org/linux/man-pages/man3/pthread_mutex_destroy.3p.html
  https://man7.org/linux/man-pages/man3/pthread_mutex_lock.3p.html
  https://man7.org/linux/man-pages/man3/pthread_mutex_unlock.3p.html
  ARM 범용 레지스터 (General-Purpose Registers)
  ld, l0? lu? 범용 레지스터? r0?

  thread 별로 메모리 공유가 가능하기 때문에 별도의 IPC 기법 불필요..
  pthread_create with Struct data structure.
  멀티 쓰레드 기반의 다중 접속 서버 구현..
    메인 쓰레드가 종료되면 모두 종료됨.
  ❓ 면접: unicast, multicast, broadcast.. 
    multicast/broadcast 는 udp 라서 unicast 보다 네트워크 부하가 적다는 장점.
    !! multicast 는 라우터에 구현이 되어있어야 한다. "그룹에 속하는 클라이언트는 모두 수신을 한다" IP 그룹은 D 클래스 사용? 맞나?
    - 🪱 TTL (Time to Live): 패킷을 얼마나 멀리 보낼 것인가 결정하는 요소. 라우트를 거칠 수. 패킷이 언제 소멸될 것인가를 결정.
    multicast 는 그룹에 가입 절차가 있다. broadcast 는 "모든" 호스트에게 데이터를 전송 방식. 데이터 전송의 대상이 호스트가 아닌 네트워크.
    둘 모두 UDP 소켓 기반.


  send & recv 함수?
    MSG_OOB
    MSG_PEEK
    MSG_DONTROUTE
    MSG_DONTWAIT
    ...
  📍 Multi-flexing? select 함수.. vs 멀티 프로세스.
    fd 3번? 2번? .. select? 감시? FD_ZERO?
    reads() 는 1024개까지만 등록가능? 자료형 자체가?
  ❓ 소켓으로는 62?64개 밖에 못쓴다고 들었는데 맞나?..

  📍 fwrite() 는 버퍼에 쓴다. socket close()를 하거나 해야 flush 됨.
  PIPE 통신. 파이프는 소켓과 마찬가지로 프로세스에 속하는 자원이 아닙니다.(때문에 fork를 통한 복사가 불가능합니다.)
    즉 운영체제가 마련해주는 메모리 공간을 통해서 두 프로세스는 통신을 하게 됩니다.
    #include <unistd.h>
    int pipe(int filedes[2]);
    ->성공 시 0, 실패 시 -1 반환
    - filedes[0] : 파이프로부터 데이터를 수신하는데 사용되는 파일 디스크립터가 저장된다. 즉, filedes[0]는 파이프의 출구가 된다.
    - filedes[1] : 파이프로부터 데이터를 수신하는데 사용되는 파일 디스크립터가 저장된다. 즉, filedes[1]는 파이프의 입가 된다.
    pipe 2개를 주면 양방향 통신 가능.
    pipe 의 버퍼 크기 변경 가능?

  #include <unistd.h> 	/* 유닉스 표준(UNIX Standard) 시스템 콜을 위한 헤더 파일 */
  #include <fcntl.h>
  #include <stdio.h> 	/* perror() 함수 */
  #include <sys/stat.h>
  #include <sys/types.h>
  perror. 🛍️ e.g. perror("read()");
    https://man7.org/linux/man-pages/man3/perror.3.html
  pkill vs kill
  👍 gdb debugging for Segmentation fault
    // 자기가 할당햇던 메모리 공간 외에 접근하려 할 때에도 Segmentation Fault 가 발생한다고 함.ㄴ
    echo "core.%e.%p" | sudo tee /proc/sys/kernel/core_pattern
    ulimit -S -c 1000000
    🚣 gcc -g -o like like.c    # g option. for debug
    gdb like core.like.31144    // <crated_name>
    (gdb) bt      // or bt full. backtrace
    (gdb) up      // or, down
    frame n       //
    p i           // print <variable>.  = 3; 을 추가하면. 변경된다.
    list 5,15     // 5 ~ 15번째 줄 보기. 기본적으로는 한 개의 값을 받아서 +- 5 범위를 보여줌.. 1부터 시작.
    l <function>       // function or variable name
    info locals
    info variable
    break main
    break like.c:10
    break 15
    break 15 if i == 5 
    info breakpoints
    enable/disable br <br_id>
    delete <br_id>

    run
    print str
    next or n   # Next line
    step or n   # into the function
    continue
    finish

    kill
  *dereference : e.g. *str
  echo "core.%e.%p" | sudo tee /proc/sys/kernel/core_pattern
  🛍️ e.g. Error: segmentation falut
    - when .. warning: function returns address of local variable. -
  👍 strip <excutable>  # make release mode. check as ls- l command.
  sudo ldconfig # 하지만 이 것은 시스템 전역에 대한 설정. 특정 프로그램에 대해 경로 지정할 때에는 LD_LIBRARY_PATH 갱신 또는 gcc -Wl,-rpath,<경로> 입력이 필요.
  ldd hi
  ln ...
  readelf -a a libmy.so.0.0.0 # ELF 파일 .. 내부 구조?
  ls /usr/lib/x86_64-linux-gnu/ | grep -E "^lib"
  gcc -shared -W1,-soname,libmy.so.0 -o libmy.so.0.0.0 input.o output.o
    soname: shared object name. -Wl. Wrapper Linkre.
  gcc -o hi hi.c -lmy -L./ -I./
    -l: Library. L: Linker. I: Include
  objdump, ar
  background -> foreground 로 가져올 수 있나? (ctrl+z) fg%a ?
  ps -ef, ps -f.  port.. 1 ~ 1024 known ports, unknown ports: ~ 65535
  sudo killall <process_name>; e.g. firefox
  sudoers
  umask
  top
  print
    Linux 커널에서 로그 메시지를 출력하기 위해 사용하는 함수
  dmesg
    dmesg eth0  # display meesage. driver message
    sudo dmesg | grep eth0
    sudo dmesg | wc -l    # line numbers
    sudo dmesg | wc -c    # character numbers
    sudo dmesg | wc -w    # word numbers

  🚣 pstree
  ps -f .. 서버 쉘? 로그인 쉘? 에 딸느 차이?

  /etc/shadow .. md5 암호화?

-Wl에서 W는 **"Warn" 또는 "Pass options to the linker



!gcc >> gcc 에 대한 history.



jobs
fg %1   // ..파일 복구??? 이게 무슨ㅅ ㅗ리..
ps -f 에서 하이픈이 없는 것은 로그인 쉘?
. bash -> 현재 쉘로 실행.

./ 를 안하면 path 에 잇는것들중에 우선적으로 검색한다는듯.

내장/외장 명령어 확인 방법..
file /bin/pwd ??

ELF: excutable link format.

오직 명령어 또는 스크립트만 사용해서 처리하도록 하고싶ㅇ

아무거도 설정안하면 virtual bridge, virtual ehternet swtich 도 없는 것.
  Host (Physical) NIC ; 라우터 

  Gateway, 서브넷마스크, DNS 

  같은 네트워크 대역이라고 하면. 24 bit subnetmask 
  원기둥이 라우터 모양.
  같은 네트워크 내역
    대역1: 10.1.1.1 ~ 10.1.1.20
    대역2:  192.168.0.1 24bit 면 (C 클래스) ~ 192.168.0.255
    대역3: 172.1.1.

    강튼 네트워크가 아니면 스위치에게 보내면 -> L2 브로드캐스트
    172 PC 가 자신의 스위치에게 패킷을 보내서 다른 192를 찾을 때, 자기 스위치 안에 없으면 다른 라우터 모두에게 브로드캐스트 / ARb Request..
      해서 뿌렷음. 
    스위치 넘어서 라우터 앞에 게이트웨이. 
      라우터의 eth0 이런것을 특별해서 게이트웨이라고 부름.
    라우터에는 "라우팅 테이블"이 있음 -- 모든(?) IP 에 대한 경로를 지정하고있어서 .. 라우팅 테이블 계산식에 의해서 찾아감.
      다른 대역대 갈거면.. "가장 가까운" 라우터의 eth0 가 게이트웨이를 지난다.
      
    게이트웨이를 정상적으로 설정해야 
      게이트웨이 IP 의 맨 끝 값은 누가 정하냐? 10.10.14.254
        일반적으로 254가 게이트웨이. 네트워크 망을 관리하고 있는 네트워크 회사 KT, 회사들이 이 값을 정하는 것.
        라우터 (통신/라우터 사업자. ISP. KT, LG) ---> 방화벽 (웹 방화벽과 다름) --> 스위치 --> 서버
          - 라우팅에서 개인에게 할당을 해준다.
          - 게이트웨이 IP
          ======== 공인 아이피가 결국 게이트웨이 IP
          게이트웨이 IP 아래 방화벽: L3 스위치, 방화벽도 L3 계층. 공유기도 L3 계층
          * picture: Test Network 구성도. 소규모 스위칭 구성. IP NAT ---> 192, 172
            공인 IP 를 사설 IP 로 변경해주는 것. 172 대역, 192대역.
            -- 방화벽 입장에서 게이트웨이는 External Router IP
            -- 메인 백본 (L2 or L3) . LC 면 방화벽 바로 앞의 Gateway.
            -- L2 는 같은 네트워크끼리의 통신을 이어주는 장비의 역할이라서 게이트웨이 IP 라는 것이 필요 없음. 실제로 할당도 불가능함.
            -- L3 는 필요하다.
            -- 공유기 허브 역할이 라우팅 테이블 역할도 하고, .. 공유기의 회색선이 통신 사업자랑 연결되어있는 선
              공인 IP 를 사설 IP 로 변경해주는 작업; NAT
            -- 개인 PC 입장에서는 보통 방화벽 앞의 
        // 게이트 웨이 IP 는     
  Virtual Bridge 라는 설정이 L2 스위치 (Virtual Ethernet Switch) 와 L3 스위치와 연결해주는 선.
  -- 브릿지가 없으면 NAT 를 사용 못해서 IP 를 한개밖에 없음.. ? ㅇㅇ?

  1. L2, L3 가 뭔가?
    계층 이름.
    L3 부터 NAT 를 할 수 있다.
    공인 IP = ISP 가 할당해준 영역.
  2. 172. 192, 10. ..
    192, 172, 10.. 은 사설 IP 대역으로 통상적으로 지정해좋은 대역. 약속. ㅇㅇ
      LAN (192.168.0.1) 게이트웨이 IP 를 끝 값을 1, 2, 3 으로 할 수도 있는데 이것도 약속이 있다. 관습

  192.168.0.1 이 게이트웨이 IP이다. 
    x port
    🪱 Port full NAT?
    포트의 대역대는 1 ~ 65535 까지 있음
      0 ~ 1024번까지는 지정되어있음
      Known port, unknoown port. 1024 ~ 65535.
  내 컴퓨터에서 승환 공유기로 보낼 때 공인 IP:<random port> (내부 IP 구분하기 위함)
    ** TCP session 마다 바꿈.


  -- 모든 L3 스위치가 게이트웨이가 여러 개 있을 수 있따. 라우팅 테이블이란 것이 있어서.       
    ISP 업체의 테이블 뿐 아니라공유기도 가능하긴 하다.


  LAN ----bridge------- Host machine
    bridge 안에는 여러 개의 인터페이스를 만들 수 있다?
    어댑터에 브릿지?? 
    bridge 가 선 자체가 아니고 eth0, tap0, tap1 인터페이스.
    "eth0" 은 실제 물리적인 인터페이스.
      브리지 설정을 하기 위해서 eth0 을 포기하고, 
      br0 

  클라우드드할떄
    eth0 이 있으면 원래 eth0이 이더넷꺼인데 eth0 대신에 br0 에 할당하고 
      


  byeotap0, wlo0 (이더넷), 
    wlo0, eth0 이런거도 이름 지정할 수 있음. ㅇㅇ.. 통상적으로.
      wlo0 내가 지정해준 이름.

  enps0 os 에 대한 인터페이스 명. 

  ⭕ ip -a c 이거 gnu 에서 찾고 권장이니까 O 표시하고, 관련 해석 보기.

  내 host OS 가 라우터가 되는것
  https://richong.tistory.com/351ㅇ\
  ??? 인터페이스 하나에 IP 여러 개 할당 가능하다고 한다?

  AWS -- 선택해서 구매하면 웹방화벽이 올라감.
    웹방화벽 OS 
  오라클 클라우드는, Ubuntu OS 를 설치를 하고, 웹방화벽을 올리기 위한 패키지들을 
    펜타OS

  tap: tab 장비. 그냥 흘려주는 역할.
  eth0 와 ㄱ비슷함.
  같은 L2 단에서는 MAC 값을 찾을 수 없다?
    Virtual MAC (VMAC
    L2 장비 (같은 사설 네트워크단을 연결해주는 장비) 는 MAC table
      IP2
      ??? 찾아보기 MAC table 을 누가 가지고 있지?
    
      MAc Table을 경로를 지정하기 위한 L2단의 프로토콜
    GARP: 나 여기 잇다.. 라고 하는 다른 것.

    1. L2 S/W 스위치에 연결되면, PC 가 GARP 를 뿌려서 Mac Table 을 업데이트한다.
    2. 또는 어떤 PC가 요청을 했을 때, L2 S/W 는 모든 PC 에게 브로드캐스트해서, 응답을 반환한다.
      ARP Request, Reponse 방식; 
    
    G ARP 패킷?
    
    L2 S/W tap1 

  외부에서도 LAn gateway 르 ㄹ통해서 응답을 주는 것 뿐?

  L3단은 포트마다 IP가 있고 L2 단은.. 아님?..아닌가?

  Gateway 가 IP 로 이루어진 것이고, Gateway 가 그 특징을 나타낸 것 뿐.

  A-1 ---(Routing Table)---- L3 ----(Routing Table)---- L3 -------

  Vm0 -> Vm1 로 ㄱ


  같은 네트워크 대역은 
    MAC 으로 통신한다고 보자..
    ping 으로 ip 를 보내도 <Mac> <inetrface name>
    "Bridge / Tap 네트워크 구성"

    penta os
    nmcli 

    // 장비 명령어
    

  두개 이상의 VM이 사설망 공유하도록 만들기 >> NAT
  EOL, EOF, EOD

  DLSS 

  https://www.nvidia.com/ko-kr/geforce/graphics-cards/40-series/rtx-4060-4060ti/
📰📰📰📰📰📰 Ubuntu 에서 테스트 후, init file 추가 필요
- Waydroid.. << if in Ubuntu desktop environemnt, 

  
- Ubuntu 22 설치 필요. ROS 는 상관없는데 Yocto not support Ubuntu 24
  QEMU 우분투 22로 하기 ROS LTS 버전과 호한 + Yocto 버전과 tier1 호환.
  - 카카오톡 받은 파일 위치 bookarmk 추가하기. add_bookmark_from_local_dir
    근데 이게 "카카오톡 받은 파일" 이 한글로 설치하면 나오는건지, 영어로 설치하면 어떻게 나오는지 모르겟음. 
    📰 $HOME/.wine/drive_c/users/wbfw109v2/$USER/카카오톡\ 받은\ 파일
      file:///home/wbfw109v2/.wine/drive_c/users/wbfw109v2/Documents/%EC%B9%B4%EC%B9%B4%EC%98%A4%ED%86%A1%20%EB%B0%9B%EC%9D%80%20%ED%8C%8C%EC%9D%BC
  - in Ubuntu terminal, run code. (git already installed)
    nono git auth login by Oauth?
    ⭕
    e.g.#default
      git config --global user.email "wbfw109v2@gmail.com"
      git config --global user.name "wbfw109v2"

# https://ubuntu.com/server/docs/openssh-server
sudo apt install openssh-server -y
  openssh-server
- note/compare 에 ip 명령어 대신 사용하도록 권장 메모 파일 추가.
  ip vs ifconfig


NAT 란: https://aws-hyoh.tistory.com/145
.... https://m.blog.naver.com/love_tolty/222650880951
⚓ TAP (Traffic Access Point) ; https://en.wikipedia.org/wiki/Network_tap
  A network tap is a system that monitors events on a local network. 




-device usb-host,hostbus=$bus_id,hostaddr=$device_id

>> 👍 cloud-localds cloud-init.iso user-data.yaml meta-data.yaml --network-config=network-config.yaml
# General Electric Comprehensive Operating System (gecos)
# Change Finger (chfn)
# https://cloudinit.readthedocs.io/en/latest/reference/base_config_reference.html#system-info-keys


enp0s10:
| | |
v | |
en| |   --> ethernet
  v |
  p0|   --> bus number (0)
    v
    s10 --> slot number (10)
Predictable Network Interface Names

Consistent Network Device Naming ; https://en.wikipedia.org/wiki/Consistent_Network_Device_Naming
🚨 cloud-init은 일반적으로 우분투 서버 이미지와 공식 클라우드 이미지에 기본적으로 설치되어 제공됩니다. 그러나 모든 우분투 이미지에 포함된 것은 아닙니다. 특히, 데스크탑 버전이나 일부 커스텀 ISO에서는 기본 설치가 누락될 수 있습니다.
  sudo apt update && sudo apt install cloud-init

- virtio를 사용하려면 VM 내부의 OS(예: Ubuntu)에 virtio-net 드라이버가 설치되어 있어야 합니다. 최신 리눅스 배포판에는 기본적으로 포함되어 있습니다.



2. tuntap의 약자와 의미
  tuntap은 TUN/TAP의 합성어입니다.

  TUN (Network TUNnel):
    3계층 네트워크 장치로서, IP 패킷을 처리합니다.
    일반적으로 VPN과 같은 터널링에 사용됩니다.
  TAP (Network TAP):
    2계층 네트워크 장치로서, Ethernet 프레임을 처리합니다.
    가상 네트워크 환경에서 브리지 연결 등에 사용됩니다.
    즉, tuntap은 TUN 및 TAP 가상 네트워크 인터페이스를 제공하는 커널 드라이버를 의미합니다.


한국정보통신공사협회 - 초급기술자 발급받기 - 기술자감리원. 기술자자격 신청


https://unix.stackexchange.com/a/677988
# lname = link nmae
  find /sys/class/net -mindepth 1 -maxdepth 1 -lname '*virtual*' -prune -o -printf '%f\n'

텔레칩스, 하만, 인텔,글루브드 swm


⚓ Kernel offical urls ; https://www.kernel.org/
  https://cdn.kernel.org/pub/linux/kernel/v5.x/linux-5.15.169.tar.xz
  xz -d ~/qemu/linux-5.15.169.tar.xz


- NoCloud는 cloud-init의 데이터 소스 중 하나로, 클라우드 환경 없이도 로컬 또는 가상 머신 환경에서 cloud-init 구성을 적용할 수 있게 합니다. 즉, 인터넷을 통해 클라우드 서비스에서 데이터를 가져오는 대신, 로컬 ISO 파일이나 파일 시스템에 있는 데이터로부터 초기화 설정을 수행합니다​



Atemgea 128 에 flash memory 가 128KB, SRAM: 4KB (힙 메모리영역..?전역 변수, 지역 변수가 잡히는 영역)
📰 Helix TODO:..
  dw: 현재 커서에서 다음 단어까지 삭제합니다.
  dW: 공백으로 구분된 단어까지 삭제합니다 (구두점 포함).
  xd: You can use xd, which will select the current line (x) and delete it (d). Tip: pressing x repeatedly will select more lines downwards.
범용 레지스터? R0 ~ R31 ? 32 비트구조.. ARM architecture.. LU.. 
메모리 공간을 잡고 변수에 이름을 붙인 것.

??? 임베디드 프로그래밍에서는 system call 함수를 직접 사용해서 사용하나? stdlib 를 안쓰고?

>> Holy.. 복구하기
  wbfw109v2@iot4-computer ~/r/synergy-hub (main)> nmcli connection delete eth-br0
  Connection 'eth-br0' (9a85aeb1-c9a0-4cc7-971f-f6993b216e04) successfully deleted.
  wbfw109v2@iot4-computer ~/r/synergy-hub (main)> nmcli connection connect eno1
  Error: argument 'connect' not understood. Try passing --help instead.
  wbfw109v2@iot4-computer ~/r/synergy-hub (main) [2]> nmcli connection connect eno1^C
  wbfw109v2@iot4-computer ~/r/synergy-hub (main) [2]> sudo nmcli device connect eno1

>>>>>>>>>>>>> 실패
wbfw109v2@iot4-computer ~/r/synergy-hub (main)> sudo nmcli connection add type tap ifname tap0 con-name tap0 mode tap owner (i
d -u)
Error: bad connection type: 'tap' not among [6lowpan, 802-11-olpc-mesh (olpc-mesh), 802-11-wireless (wifi), 802-3-ethernet (ethernet), adsl, bluetooth, bond, bridge, cdma, dummy, generic, gsm, hsr, infiniband, ip-tunnel, loopback, macsec, macvlan, ovs-bridge, ovs-dpdk, ovs-interface, ovs-patch, ovs-port, pppoe, team, tun, veth, vlan, vpn, vrf, vxlan, wifi-p2p, wimax, wireguard, wpan, bond-slave, bridge-slave, team-slave]

네, nmcli 명령어를 사용해 TAP 인터페이스를 생성하려고 할 때 발생한 문제를 정확히 짚어주셨습니다. 현재 nmcli는 TAP 인터페이스에 대한 직접적인 타입(tap)을 지원하지 않습니다. 대신 tun 타입으로 생성됩니다.

  TUN과 TAP은 둘 다 가상 네트워크 인터페이스이지만, 각각의 역할이 약간 다릅니다.

  1. TUN과 TAP의 차이점
  TUN (Network Tunnel Device):

  IP 레벨의 가상 네트워크 인터페이스입니다.
  OSI 네트워크 계층에서 3계층(네트워크 계층) 패킷(IP 패킷)을 처리합니다.
  VPN 같은 네트워크 터널링에서 주로 사용됩니다.
  TAP (Network Tap Device):

  이더넷 프레임을 직접 처리하는 2계층(데이터 링크 계층) 인터페이스입니다.
  가상 머신(VM)이나 컨테이너에서 브리지 인터페이스를 통해 LAN과 연결할 때 주로 사용됩니다.
  2. nmcli로 TAP을 직접 생성할 수 없는 이유
  **nmcli**는 현재 TAP 인터페이스를 직접적으로 지원하지 않으며, TUN 인터페이스만을 지원합니다.
  하지만, ip 명령어를 사용하여 TAP 인터페이스를 생성한 후 브리지에 연결할 수 있습니다.

  
  https://www.youtube.com/watch?v=Xmk4dwst-Js

  wayland: Xorg, Xfree86을 대신해서 새로 만들어지는 디스플레이 프로토콜


⚓ https://pimylifeup.com/ubuntu-enable-wayland/
  [daemon]
  # Uncomment the line below to force the login screen to use Xorg
  WaylandEnable=true 

  .. [dameon] 안에있는것을 바꿔야 함..

  >> 자동화 작성하기.

https://wiki.ubuntu.com/Wayland
https://mir-server.io/
https://www.nemonein.xyz/2024/08/9103/
https://www.clien.net/service/board/cm_linux/15109280

Wayland는 Xorg(X11)
  Wayland는 최신 애플리케이션과 GPU 드라이버를 더 잘 지원하며, 기존의 X 애플리케이션은 XWayland를 통해 실행할 수 있습니다.
  Wayland는 Xorg에 비해 가벼운 설계
  Wayland는 프로세스 간 격리 모델을 통해 보안을 강화
  Wayland는 그래픽 렌더링에서 더 낮은 지연 시간과 고른 프레임 레이트를 제공하여, 특히 고해상도나 고주사율 디스플레이에서 더 부드러운 사용자 경험을 제공합니다.
  Xorg는 컴포지팅(Compositing)과 관련된 오버헤드가 발생해 성능이 저하될 수 있습니다.

echo $XDG_SESSION_TYPE


👍 nmcli official docs ; https://networkmanager.pages.freedesktop.org/NetworkManager/NetworkManager/nmcli.html
  https://networkmanager.pages.freedesktop.org/NetworkManager/NetworkManager/manpages.html

✅ >>>>>>> 장치 공유
  sudo groupadd video
  sudo usermod -aG video,dialout $LOGNAME
  cat /etc/group | grep -E "video|dialout"
  # 📝 may be required logout
  sudo usermod -aG video <your-username>
  sudo usermod -a -G video $LOGNAME





최근 Linux 환경에서 가장 주목받는 클립보드 도구 중 하나는 **wl-clipboard**입니다. 이 도구는 Wayland 기반 시스템에서 사용되며, 명령줄에서 클립보드 복사 및 붙여넣기를 수행하는 간단한 유틸리티입니다. X11 환경에서 주로 사용된 xclip과 xsel이 Wayland에서 제대로 작동하지 않는 문제를 해결하며 인기를 끌고 있습니다.
  wl-clipboard 주요 기능:
  wl-copy: 텍스트나 파일을 클립보드에 복사합니다.
  예: echo "Hello World" | wl-copy는 텍스트를 클립보드에 복사합니다.
  wl-paste: 클립보드에 저장된 내용을 터미널에 출력하거나 파일로 저장합니다.
  예: wl-paste > clipboard.txt는 클립보드 내용을 파일에 저장합니다.
  이 도구는 Unix 파이프와 파일 간의 데이터 전송을 용이하게 하며, Wayland 시스템의 특성에 최적화되어 있습니다.
  Wayland는 X11을 대체하는 최신 디스플레이 서버로 자리 잡고 있으며, wl-clipboard는 그 환경에 맞춘 가볍고 직관적인 도구로 평가받고 있습니다. 특히 보안과 성능을 강화한 Wayland에서 wl-clipboard는 클립보드 데이터를 안전하게 처리할 수 있는 기능을 제공합니다.

  또한, wl-clipboard를 더 확장한 **wl-clipboard-manager**도 주목받고 있는데, 이는 이미지 미리보기와 SQLite 기반 데이터 저장소를 활용해 고급 기능을 제공합니다. 이와 같은 도구들은 현대적인 Linux 배포판에서 편리한 사용성을 제공합니다.

  이 도구들은 Arch Linux 등 주요 배포판에서 쉽게 설치할 수 있으며, Wayland를 기본 지원하는 시스템에서 매우 유용하게 사용할 수 있습니다. Wayland를 사용하는 경우 이와 같은 도구를 통해 X11에서 겪던 호환성 문제를 해결할 수 있습니다.


tion.autoconnect: 네트워크 연결이 가능해질 때마다 자동으로 해당 연결을 활성화할지 여부를 결정하는 설정입니다.
yes: 해당 네트워크 연결이 자동으로 활성화됩니다.
no: 수동으로 활성화해야 하신 디스플레이 서버로 자리 잡고 있으며, wl-clipboard는 그 환경에 맞춘 가볍고 직관적인 도구로 평가받고 있습니다. 특히 보안과 성능을 강화한 Wayland에서 wl-clipboard는 클립보드 데이터를 안전하게 처리할 수 있는 기능을 제공합니다.

  또한, wl-clipboard를 더 확장한 **wl-clipboard-manager**도 주목받고 있는데, 이는 이미지 미리보기와 SQLite 기반 데이터 저장소를 활용해 고급 기능을 제공합니다. 이와 같은 도구들은 현대적인 Linux 배포판에서 편리한 사용성을 제공합니다.

  이 도구들은 Arch Linux 등 주요 배포판에서 쉽게 설치할 수 있으며, Wayland를 기본 지원하는 시스템에서 매우 유용하게 사용할 수 있습니다. Wayland를 사용하는 경우 이와 같은 도구를 통해 X11에서 겪던 호환성 문제를 해결할 수 있습니다.

wl-paste --watch clipman store &
https://www.reddit.com/r/Fedora/comments/va9bqn/i_need_a_clipboard_manager_that_work_with_wayland/
https://www.reddit.com/r/pop_os/comments/mvhtox/copyq_not_working_with_wayland/
  Preference - General - ✔️ Autostart
Greenclip or Clipman 

https://www.reddit.com/r/wayland/comments/1bfeg39/a_new_waylandcompatible_system_clipboard_manager/
https://github.com/savedra1/clipse
  https://github.com/savedra1/clipse?tab=readme-ov-file#installing-with-wget
    wget -c https://github.com/savedra1/clipse/releases/download/v1.1.0/clipse_1.1.0_linux_amd64.tar.gz -O - | tar -xz
  This requires a system clipboard. I would recommend using wl-clipboard (Wayland) or xclip (X11/macOs) to get the best results. You can also use xsel and termux-clipboard, but these will not allow you to copy images.
  sudo apt install wl-clipboard

https://github.com/savedra1/clipse?tab=readme-ov-file#installing-with-wget

iggers for man-db (2.12.0-4build2) ...
wbfw109v2@iot4-computer ~/r/synergy-hub (main)> sudo apt purge copyq
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
The following packages were automatically installed and are no longer required:
  fonts-wine glib-networking:i386 gstreamer1.0-plugins-good:i386 gstreamer1.0-x:i386 kwayland-data kwayland-integration libaa1:i386 libavc1394-0:i386
  libcaca0:i386 libcapi20-3t64 libcapi20-3t64:i386 libdbusmenu-qt5-2 libdouble-conversion3 libduktape207:i386 libdv4t64:i386 libgl1:i386 libglx0:i386
  libgstreamer-plugins-good1.0-0:i386 libgudev-1.0-0:i386 libiec61883-0:i386 libkf5config-bin libkf5config-data libkf5configcore5 libkf5coreaddons-data
  libkf5coreaddons5 libkf5notifications-d
sudo apt  install gccgo-go
"Text User Interface"의 clipse is a configurable, TUI-based clipboard manager


Go language: https://go.dev/doc/install
  rm -rf /usr/local/go && tar -C /usr/local -xzf go1.23.2.linux-amd64.tar.gz
  export PATH=$PATH:/usr/local/go/bin
   go version

  sudo apt install golang -y
  go install github.com/savedra1/clipse@v1.1.0


https://github.com/savedra1/clipse?tab=readme-ov-file#installing-with-wget

>> TODO:
  # https://www.spice-space.org/spice-user-manual.html
  # Virtual Device Interface (VDI) defines a set of interfaces that provide a standard way to publish virtual devices (e.g. display device, keyboard, mouse) and enables different Spice components to interact with those devices.
  # ⭕ The recommended client is remote-viewer (which is shipped with virt-viewer).
  # 📰 Spice Agent
  # 📰 QXL Device and Drivers
  #   Spice server supports the QXL VDI interface. When libspice is used with QEMU, a specific video PCI device can be used for improving remote display performance and enhancing the graphic capabilities of the guest graphic system. This video device is called a QXL device and requires guest QXL drivers for full functionality. However, standard VGA is supported when no driver exists.
  
  Scalable Protocol for Interactive Computing (SPICE).
  SPICE는 VNC와는 다른 프로토콜이며, 더 많은 기능(예: 클립보드 공유, 오디오 스트리밍 등)을 지원.
    SPICE 서버: VM 내부에서 실행됨. QEMU 명령어를 사용하여 spire 옵션을 지정하도록 하면 됨.
    SPICE 클라이언트. 호스트 시스템에서 실행됨.
      sudo apt update && sudo apt install virt-viewer
  SPICE 프로토콜의 기능
    클립보드 공유:
    오디오 공유:
    고해상도 비디오:
    다양한 입력 장치 지원:
      조합 키 처리, 마우스 입력, 키보드 입력 지원.
    성능 최적화:

  # vm 내부에서 설치 필요
  sudo apt update && sudo apt install -y spice-vdagent
  # 호스트에서 virt-viewer 설치 필요
  sudo apt update && sudo apt install -y virt-viewer

  # qemu 부터 실행 필요로
  qemu-system-x86_64 \
    -m 2048 \
    -smp 2 \
    -drive file=/path/to/your/disk/image.qcow2,format=qcow2 \
    -spice port=5900,disable-ticketing \
    -device virtio-serial \
    -device spice-vdagent \
    -vga qxl
  # qemu 가 실행되고 있는 중에 실행해야 함. 백그라운드로? QEMU가 종료되면, Virt-Viewer도 자동으로 연결이 끊기게 됩니다. 
  virt-viewer --connect spice://<VM_IP>:5900

  cloud-init 에서 뭔가 설치할 수 있게 가능한가? 위에 spice-vdagent 같은거 설치하게.
  lock_passwd: false:
    이 설정은 계정의 비밀번호가 잠기지 않도록 하며, 비밀번호로 로그인이 가능하다는 것을 의미합니다.
  lock_passwd: true:
    이 설정을 사용하면 계정의 비밀번호가 잠기게 되어 비밀번호로 로그인이 불가능합니다.
    계정에 비밀번호가 설정되어 있더라도 로그인을 시도할 수 없습니다.


  samba 설정 (ubuntu guideline)
  headless 모드가 있나?


📍 interview: 소켓 통신?
  **소켓(Socket)**은 네트워크 상의 두 장치가 서로 데이터를 주고받기 위해 사용하는 통신의 종착점입니다.
  소켓은 네트워크에서 데이터를 송수신하기 위한 양방향 통신 채널을 제공합니다.
  소켓 통신은 크게 Network Socket, Unix Socket으로 나눌 수 있습니다.
    Unix 소켓은 **동일한 운영체제 내에서 프로세스 간의 통신(IPC)**을 지원하는 소켓입니다.
    네트워크 소켓과 달리 IP 주소나 포트 번호를 사용하지 않고, 파일 시스템 내의 파일 경로로 식별됩니다.
    두 프로세스가 통신을 종료하면 소켓 파일도 보통 함께 제거됩니다.

sudo cat /var/log/cloud-init.log

required...
# sudo apt update
sudo apt install cloud-init

https://en.wikipedia.org/wiki/Runlevel


cloud-init status
cloud-init이 실행된 후 다시 부팅하면 기존 비밀번호가 유지될 수 있습니다. 초기화가 완료된 후 부팅 시점에 사용자 비밀번호가 설정되지 않을 수 있습니다.
##### 만약 VM이 이미 부팅 중이거나 실행 중인 경우, 해당 VM을 완전히 종료하고 다시 시작해야 합니다. VM이 실행 중일 때 ISO 파일을 변경해도 적용되지 않습니다.
# 그리고.. 패스워드는 변경해도.. ㅇㅇ 이렇게 됨..  >> passwd in user-data is ignored for existing user

## https://github.com/cli/cli/blob/trunk/docs/install_linux.md


❓ Copmatibility
  ROS 2; https://docs.ros.org/en/jazzy/Releases/Release-Jazzy-Jalisco.html
    Ubuntu 24.
  Yocto 2
    https://docs.yoctoproject.org/ref-manual/system-requirements.html#supported-linux-distributions
    Ubuntu 22.... 가상환경 안에서 빌드하자? 일단.. 수업에서 하는대로..


>> 다 하고  우분투 24 설치햇을 때 fish shell 기본ㅅ ㅞㄹ 바뀌나 테스트

get entries
  아.. 이거 fish 쉘 기본 지정.. 그냥 getent passwd $USER 변경할걸.. 

>>>> Yocto는 단순히 커널만이 아니라, 운영체제의 전체 소프트웨어 스택을 설정하고 제어할 수 있는 도구입니다. layer.

### https://ubuntu.com/tutorials/install-ubuntu-server#7-networking


📰 https://slowbootkernelhacks.blogspot.com/2020/07/arm-bare-metal-programming-1.html

ubuntu19@ubuntu-vm:~$ getent passwd | grep $USER
ubuntu19:x:1001:1001:wbfw109v2:/home/ubuntu19:/bin/bash
chsh -s /usr/bin/fish $USER



=================
계획



>>>>>> 웡료일: 책 구매 필요.
  - ✔️ Ebook: 영어는 듣기..책 필요? 문법/단어는 있음.
  
  한국 팹리스 협회 
    하만 - 검증.. 부서..
    연구개발은 아닌듯?


우리 2월 13일 졸업 이라고 함.
  1안 연구-개발
  2안 연구-개발
  3안 연구-개발
12월부터 이력서/자소서 정리해야 함.
면접준비도 이제 함께 해야 함. 텍스트로만이 아니라, 입에서 말로 할 수 있도록.


한국 엔지니어링 협회.. 만들어두기..? 인천공항 가려면..
OpenMP (Open Multi-Processing), 최적화 패스 (Optimization Pass)
OpenACC는 GPU와 같은 가속기 장치를 사용하는 병렬 컴퓨팅을 위한 API로, CPU가 아닌 GPU나 FPGA 같은 하드웨어를 병렬 연산에 활용할 수 있게 합니다


## https://docs.helix-editor.com/languages.html
# How to Navigate Definitions in Helix (Functions, Enums, Headers)
# https://github.com/helix-editor/helix/wiki/Language-Server-Configurations
https://github.com/helix-editor/helix/blob/master/languages.toml
Helix offers efficient navigation for functions, enums, and header definitions, similar to `ctags` in `vi`. 


>>>>>>> sudo ln -s (which lldb-dap-18) /usr/local/bin/lldb-dap

subnetmark 랑.. 뭐랑 and 연산을 하면 네트워크 주소가 나온다?
  이 때 네트워크 대역폭이 다르면 Gateway 를 통해 밖으로 브로드캐스팅한다?
socket 에서 fd?


https://docs.helix-editor.com/languages.html#languagestoml-files
  # in <config_dir>/helix/languages.toml

  https://docs.helix-editor.com/configuration.html
    Linux and Mac: ~/.config/helix/config.toml
  https://docs.helix-editor.com/themes.html
    https://github.com/helix-editor/helix/tree/master/runtime/themes




>> Key...
  Line mode: x
  Visual mode: v (seleciton mode)
  
  단어 selection 확장: dwwww..
  단어 복사: y
  단어 붙여넣기: p


set lsp.display-inlay-hints true

https://helix-editor.com/news/release-23-03-highlights/

👍 interview.. 하드 링크, 심볼릭 링크, cp 차이.


clang -Wall -Wextra -Os -o hello_client hello_client.c



# ARM vs. x86/AMD Architecture Register and Instruction Differences

This document explains the differences in register usage and instruction styles between ARM and x86/AMD architectures.

## 1. ARM Architecture

In ARM architecture, there are 16 general-purpose registers named `r0` to `r15`, each with specific or general use cases in computations and data handling.

### General-Purpose Registers (GPRs)
- **r0 - r3**: Used for function arguments and storing return values; `r0` typically holds the result of a function.
- **r4 - r11**: Used for general data storage and typically maintained by the callee (callee-saved).
- **r12 (ip)**: Known as the "Intra-Procedure Call scratch register", often used for temporary data or address calculations.
- **r13 (sp)**: Stack Pointer, points to the top of the stack for local variable management and function calls.
- **r14 (lr)**: Link Register, stores the return address for function calls.
- **r15 (pc)**: Program Counter, holds the address of the current instruction being executed.

### Label Conventions: `ld`, `l0`, `lu`
Labels like `ld`, `l0`, and `lu` in ARM assembly do not have a specific predefined meaning within ARM architecture, and programmers typically use them as convenient names for certain code blocks or addresses.

### Common ARM Instructions
- **LDR (Load Register)**: Loads data from memory to a register. E.g., `LDR r0, [r1]` loads data from the address in `r1` to `r0`.
- **MOV (Move)**: Assigns a value to a register. E.g., `MOV r0, #1` moves the value `1` to `r0`.
- **ADD (Add)**: Adds values in registers and stores the result in a register. E.g., `ADD r0, r0, r1` adds `r0` and `r1` and stores the result in `r0`.

These conventions make ARM architecture highly efficient for embedded systems and mobile devices.

## 2. x86/AMD Architecture

Unlike ARM, the x86/AMD architecture uses different register names and conventions. These are commonly found in desktop and server systems.

### General-Purpose Registers
- **rax, rbx, rcx, rdx**: Used for various data operations, with specific functions in legacy x86.
- **rsi, rdi**: Often used for source and destination pointers in string operations.
- **rsp (Stack Pointer)**: Points to the top of the stack.
- **rbp (Base Pointer)**: Often used to reference function call frames.

### Segment Registers
- **cs**: Code segment.
- **ds**: Data segment.
- **ss**: Stack segment.

### Common Instructions
- The instructions `mov`, `add`, `sub`, etc., are also present in x86/AMD, but with differences in register naming and usage conventions.
- x86/AMD functions often rely on the stack for passing arguments, unlike ARM, which utilizes registers for arguments in many calling conventions.

In summary, ARM uses `r0` to `r15` as general-purpose registers with specific usage in function calls and data operations, while x86/AMD architecture uses `rax`, `rbx`, and others with different conventions, especially favoring stack usage for argument passing in function calls.


======================================================

# Network Address Calculation and Broadcasting

## 1. Calculating the Network Address

To determine the **network address** of a device, we perform a bitwise AND operation between its **IP address** and the **subnet mask**. The network address defines the range of IPs within the same subnet, allowing devices to communicate without a router.

### Example Calculation

Given the IP address 192.168.1.10 and the subnet mask 255.255.255.0, here’s how we calculate the network address:

IP Address:       192.168.1.10   ->   11000000.10101000.00000001.00001010  
Subnet Mask:      255.255.255.0  ->   11111111.11111111.11111111.00000000  
AND Operation:    192.168.1.0    ->   11000000.10101000.00000001.00000000  

Result: The **network address** for this IP and subnet mask is 192.168.1.0.

When devices in different network ranges need to communicate, they use a **gateway** to route traffic to other subnets, allowing communication outside the local network.

## 2. Broadcast Address

A **broadcast address** is a special IP used to send data to all devices on a specific network. It’s defined as the network address with all host bits set to 1.

### Calculating the Broadcast Address

For a network address 192.168.1.0 and subnet mask 255.255.255.0, the broadcast address is calculated by setting all host bits to 1:

Network Address:  192.168.1.0    ->   11000000.10101000.00000001.00000000  
Broadcast:        192.168.1.255  ->   11000000.10101000.00000001.11111111  

Result: The **broadcast address** for the network 192.168.1.0/24 is 192.168.1.255.

### Use of Broadcast Address

- When a device sends data to the broadcast address, it reaches **all devices within the same network**.
- Broadcast addresses are useful for sending information to multiple devices simultaneously, such as **DHCP requests**.

Broadcasts do not travel across networks. To communicate with devices in other networks, data is sent through a **gateway**, using **unicast communication** to specify a particular device's address.


VS Code - Run And Debug
  - launch.json - add configuration
    - "LLDB" snippet

https://marketplace.visualstudio.com/items?itemName=llvm-vs-code-extensions.vscode-clangd
https://marketplace.visualstudio.com/items?itemName=llvm-vs-code-extensions.lldb-dap
    
https://code.visualstudio.com/docs/cpp/config-linux#_create-hello-world
  tasks.json (compiler build settings)
  launch.json (debugger settings)
  c_cpp_properties.json (compiler path and IntelliSense settings)


sock ; https://en.wiktionary.org/wiki/sock#Etymology_4
  Abbreviation of Socket


NIC card?
📰 TODO: half-close() / shut-down

📰 Language server protocol for Fish shell..
  https://www.fish-lsp.dev/
    📰 Not exists vscode extensions
      helix ... https://github.com/ndonfris/fish-lsp-language-clients


  https://code.visualstudio.com/api/language-extensions/language-server-extension-guide



https://en.wikipedia.org/wiki/Tree-sitter_(parser_generator)

❓ 면접.. 프로세스 상태.. 생성, 준비, 대기..
.. c언어에서 fork 하면 그 이후의 코드부터 값부터 새로 실행되나?
이와 반대? 로 exec 는 프로세스를 교체함.
  부모 프로세스가 자식 프로세스가 종료될때까지 wait() 필요?ㄴ
    >>> 좀비 프로세스 방지..  <defunct> ? .. 부모 프로세스가 자식 프로세스의 반환값이 정상적으로 받지 못하면 발생 가능.
  ps -f 명령어란? ps aux 와 차이? .. f: full format
  # `exec` Family Function Abbreviations
  fish shell 에서 bash 의 'echo $?' 가 뭐지?
  while(!waitpid(-1. &status, WNOHANG) means
    WIFEXITED
  #include <signal.h>
    void (*signal(int signo, void (*func)(int))(int)
    timer c.. alarm() .. example..
    SIGINT, SIGALRM
  프로세스 기반 다중접속 서버의 전형적인 모델 ...

  # IPC, PIPE ..통신..


  # Process Status Macros in C (`waitpid`)

  In the C language, `waitpid` and related functions use macros to check the status of a terminated or stopped process. Here are common macros with abbreviations and meanings:

  | Macro         | Abbreviation  | Meaning                                                                                 |
  |---------------|---------------|-----------------------------------------------------------------------------------------|
  | **WIFEXITED** | Wait + If + Exited  | Checks if the process exited normally. Returns true if the process terminated via `exit()`. |
  | **WEXITSTATUS** | Wait + Exit + Status | Retrieves the exit code of a process that terminated normally (use if `WIFEXITED` is true). |
  | **WIFSIGNALED** | Wait + If + Signaled | Checks if the process terminated due to a signal (not via `exit()` or `_exit()`).       |
  | **WTERMSIG**  | Wait + Termination + Signal | Gets the signal number that caused the process to terminate (use if `WIFSIGNALED` is true). |
  | **WIFSTOPPED** | Wait + If + Stopped | Checks if the process is currently stopped (e.g., by a signal like `SIGSTOP`).          |
  | **WSTOPSIG**  | Wait + Stop + Signal  | Retrieves the signal number that caused the process to stop (use if `WIFSTOPPED` is true). |

  Each macro serves a specific purpose for examining process states, helping to manage process termination, signal handling, and status reporting in C programs.


  In C language, each `exec` function name contains abbreviations that denote how it handles paths and arguments.

  | Function | Abbreviation | Meaning |
  |----------|--------------|---------|
  | **l**    | list         | Arguments are listed individually, ending with `NULL`. |
  | **p**    | path         | Uses the `PATH` environment variable to locate the program, allowing execution without an absolute path. |
  | **v**    | vector       | Arguments are passed as an array (vector) with the last element set to `NULL`. |
  | **vp**   | vector + path| Combines vector arguments with `PATH` search. |

  ## Summary by Function
  - `execl`: Uses **list** arguments and requires an explicit path.
  - `execlp`: Uses **list** arguments with `PATH` lookup.
  - `execv`: Uses **vector** arguments and requires an explicit path.
  - `execvp`: Uses **vector** arguments with `PATH` lookup.


wget --help | grep -F -- -P

https://man7.org/linux/man-pages/man3/pthread_create.3.html\
  # ERRORS
    EAGAIN, EINVAL, EPERM
    // errno -l | grep -E "EAGAIN|EINVAL|EPERM"
https://man7.org/linux/man-pages/man3/errno.3.html
  # Error numbers and names
    the errno(1) command (part of the moreutils package):
  
>>>>>>>>>>>>>> https://www.youtube.com/playlist?list=PLB7540DEDD482705B

>>>>>>>>>>>>>>>>>>>>>>> ⚓ Leetcode + 소프티어 + https://swexpertacademy.com/main/main.do



따라서, indexes_of_smallest_v_at_l은 **"길이가 l인 증가하는 부분 수열 중, 마지막 값이 가장 작은 원소의 인덱스"**를 저장하는 배열입니다.

>> 👍 cin.tie(0)
ios
ios_base::sync_with_studio(false);
cin.tie(0 or nullptr);
cout.tie(0 or nullptr);



============
임베디드
  아두이노.. 물결표가 pwm 신호 가능하 ㄴ것.
  아두이노 우노 4에서 각 장치를 연결할 수 있는 위치 확인 필요.
    UART 는 비 동기식..
    SPI, I2C 는 동기식..
  ❓ 0 일 때 켜지는 방식이 sync 전류 동작 방식?. MCU 는 sync 전류를 많이 쓴다고 한다.
  EEP ROM.. 전원을 꺼도 유지된다  = 저장용도.
  키르히호프의 전류/전압의 법칙
  vncviewer 10.10.14.99:5900
  debounce. floating 현상 제거.. 회로 확인 필요.

  동기식 통신은 PBI? 안에서 자주 쓴다고 한다?



❔ snapshot backup

address 10.10.14.19/24 -gateway 10.10.14.254 dns 203.248.252.2
  📰   사용법 추가.. display 가속


⭕ 경험 : https://velog.io/


/etc/sudoers.d/01_ubuntu_nopasswd
  ubuntu ALL=(ALL) NOPASSWORD: ALL


srv	Site-specific data served by this system, such as data and scripts for web servers, data offered by FTP servers, and repositories for version control systems (appeared in FHS-2.3 in 2004).


??? ..허용?하지 말아야할것?.. 허용해야할것?.. 주석처리해아할 ㄳ?

cat /proc/device-tree/model // 모델 정보 확인

  free -h // MEM 2기가 바이트 기준.
  vcgencmd get_config int // 라즈베리파이 전용 명령어.
  cat /proc/cpuinfo

  ... 라인이 없는 걍우만 추가하도록 해야 함. >> fish 함수로 만들기
    echo "gpu_mem=128" | sudo tee -a /boot/config.txt
  mariadb


  # enlarge the boundary (CONF_MAXSWAP)
  sudo nano /sbin/dphys-swapfile
    CONF_MAXSWAP=2048
    ...> ^CONF_MAXSWAP.* 값을 4096 으로 변경.
  # give the required memory size (CONF_SWAPSIZE)
    CONF_SWAPSIZE=200
    ...> ^CONF_SWAPSIZE.* 값을 4096 으로 변경.
  sudo nano /etc/dphys-swapfile
  # reboot afterwards
  sudo reboot
  

  # check your memory first
  free -m
  # you need at least a total of 5.8 GB!
  cd ~
  # if not, enlarge your swap space as explained in the guide
  wget https://github.com/Qengineering/Install-OpenCV-Raspberry-Pi-32-bits/raw/main/OpenCV-4-10-0.sh
  sudo chmod 755 ./OpenCV-4-10-0.sh
  ./OpenCV-4-10-0.sh


echo "gpu_mem=128" | sudo tee -a /boot/firmware/config.txt

Package libtbb2 is not available, but is referred to by another package.
This may mean that the package is missing, has been obsoleted, or
is only available from another source
However the following packages replace it:
  libtbbmalloc2:armhf libtbbmalloc2

E: Package 'libtbb2' has no installation candidate
E: Unable to locate package libdc1394-22-dev
>> libtbb-dev

>>>>>>
# ❓ ...  wbfw109v2와 pi가 동일한 사용자로 보이지만, 실제로 서버와 클라이언트에서 UID와 GID 값이 다르기 때문에 파일 소유권이 서로 다르게 표시됩니다.



📰 NFS with Kerberos

set -e ////// 명령어 실패 시 자동 종료...
  https://stackoverflow.com/questions/19876032/fish-shell-how-to-exit-on-error-bash-set-e
  cp file1 file2
  and rm file1
  and echo File moved


du -hd 0 opencv

????? iconv f euc-kr -t utf-9 opencvCam.cpp > opencvCam_.cpp 를 하는 이유 ???



=======st_db_query_c 예제 실습==========
st_db_query_c$ sudo apt install libmysqlclient-dev	# sql c 라이브러리 설치

$ sudo vi /etc/mysql/mariadb.conf.d/50-server.cnf  	#bind-address 주석

$ sudo systemctl restart mariadb.service		#mariadb 재시작

$ vi st_db.c					#23라인 id, passwd  수정
=========================================
     if (mysql_real_connect(con, "127.0.0.1", "iot", "pwiot",
./thread &runningps -fTrunning thread

=========================================




Embedded
  RTC 란; Real-Time-Clock
    분해능.A
    ADC.. Anologo Degitier converter? HD HDC 11 온습도 센서? 내부에 이런게 잇다고 한다.
    
  st_db_query_c$ gcc st_db.c -o st_db -lmysqlclient

  st_db_query_c$ ./st_db

# Download the mariadb_repo_setup utility, validate its checksum, and ensure that its permissions allow it to be executed:


우분투에서, STM32 IDE 에서 작성한 펌웨어 파일 STM32 에 업로드하는데 이런 오류가 떳거든?
  ➡️ VSCODe 에서 
    >CMake: Select Configure Preset
    >Run Task 🔪 Build + Flash
      >> ninja: error: loading 'build.ninja': No such file or directory
    Cube MX >>> Generate Code
      >> ninja: error: loading 'build.ninja': No such file or directory
    VSCOde >> Reroad windows
    copy STM32F411RETx_FLASH.ld from temp/stm32f411retx_FLASH_fixed.ld

    ////////////// build.ninja 


sudo fdisk -l /dev/sdb
sudo fdisk -l >>> 포맷된 파티션 뿐아니라 총 용량 보기


<Directory "/home/linuxbrew/.linuxbrew/var/www">
</Directory>
이 블록 뒤쪽에 추가하고 싶음.

http://192.168.0.4/phpmyadmin

rsync -av --rsync-path="sudo rsync" /home/wbfw109v2/mnt/class/ubuntu\ Linux/mysql_lect/html/* r-pi:/var/www/html/


echo "<?php phpinfo(); ?>" | sudo tee "/var/www/html/phpinfo.php" > /dev/null
📰 >>>>> Apahce 뭐 설정했엇지?.. class samba 에서 찾기..
  sudo nano ... 이거 바꾸기.. html
  <frame src = "http://10.10.141.250/sensorTable.php">
  <frame src = "http://10.10.141.250/sensorGraph.php">

  sudo cat /etc/apache2/ports.conf
  sudo cat /etc/apache2/sites-available/000-default.conf

📰 TODO: IoT Databse 
  # 테이블 생성 및 데이터 삽입 D
  echo "Creating tables and inserting data"
  sudo /usr/bin/mariadb --database=iotdb --execute="
  CREATE TABLE IF NOT EXISTS sensor (
      id INT NOT NULL AUTO_INCREMENT,
      name VARCHAR(20),
      date DATE,
      time TIME,
      illu INT,
      temp FLOAT,
      humi FLOAT,
      PRIMARY KEY (id)
  ) DEFAULT CHARSET=utf8;

  CREATE TABLE IF NOT EXISTS device (
      id INT NOT NULL,
      name VARCHAR(20),
      date DATE,
      time TIME,
      value INT,
      info VARCHAR(20),
      PRIMARY KEY (id)
  ) DEFAULT CHARSET=utf8;

  -- sensor 테이블에 데이터 삽입
  INSERT INTO sensor (name, date, time, illu, temp, humi) VALUES ('ecKim', NOW(), NOW(), 75, 21.4, 50.6);

  -- device 테이블에 데이터 삽입
  INSERT INTO device (id, name, date, time, value, info) VALUES (1, 'LAMP', NOW(), NOW(), 0, 'room1 lamp1');
  INSERT INTO device (id, name, date, time, value, info) VALUES (2, 'PLUG', NOW(), NOW(), 0, 'room1 plug1');

  -- 데이터 갱신
  UPDATE sensor SET illu=40 WHERE id=1;
  UPDATE device SET value=1 WHERE name='LAMP';
  UPDATE device SET value=1 WHERE id=1;
  "

  # 결과 확인
  echo "Selecting data from sensor and device tables"
  sudo /usr/bin/mariadb --database=iotdb --execute="
  SELECT * FROM sensor;
  SELECT * FROM device;
  SELECT value FROM device WHERE name='LAMP';
  "

📰 Jetson Nano
  $HOME/Downloads/samba_copy_class/jetson_image
  sudo dd if=$HOME/Downloads/jetson-nano-jp461-sd-card-image/sd-blob-b01.img of=/dev/sdb bs=1M status=progress
  xz -d JetsonNanoUb20_3b.img.xz


  set img_path $HOME/Downloads/samba_copy_class/jetson_image/JetsonNanoUb20_3b.img
  set target_device /dev/sdb

  # Use etcher-cli to flash the image to the target device
  # -y: skips prompts
  # --check: performs a verification after flashing
  time sudo etcher -d $target_device -y --check $img_path

  ❓ ?????? dd 보다 raspberry pi imager 보다 Etcher 가 더 빠른 듯 보임.
    ㄴㄴ 블럭 (512K 기본) 단위에 따른 차이로 보임..
    근데 dd 는 verify 기능이 없어보이는데. 기존 툴을 사용하는게 낫나? .. 바퀴의 재발명..

  
  🧮 jetson nano jtop 명령어
  iftop ??
  >>>>>>>. Jetson nano https://github.com/Qengineering/Jetson-Nano-Ubuntu-20-image?tab=readme-ov-file#installation
    id: nano.machine name jetson.


npm cache clean --force
  sudo apt update
  sudo apt install -y build-essential help2man

  # Set the target directory and download path
  set SHARE_DIR $HOME/.local/share
  mkdir -p $SHARE_DIR
  set BIN_DIR $HOME/.local/bin
  mkdir -p $BIN_DIR

  # Create directories if they do not exist
  mkdir -p $SHARE_DIR
  mkdir -p $BIN_DIR

  

  # Save the current directory and navigate to the target directory
  pushd $SHARE_DIR

  # Download the popsicle zip file
  git clone https://github.com/pop-os/popsicle.git
  pushd popsicle

  make cli && sudo make install-cli

  # Create a symbolic link in the bin directory
  ln -sf $SHARE_DIR/popsicle-linux-x64/balena-etcher $BIN_DIR

  # Return to the original directory
  popd

  # Inform the user that the installation is complete
  echo "popsicle installed and accessible at $BIN_DIR/popsicle"

sudo popsicle --unmount --yes --check /home/wbfw109v2/Downloads/samba_copy_class/jetson_image/JetsonNanoUb20_3b.img /dev/sdb
mkdir -p $HOME/backup
sudo dd if=/dev/sdb of=$HOME/backup/raspberry_pi_backup_202411121823.img bs=4M
///


TODO: PHP extension settings.
사이즈 설정..
  sudo apt update
  sudo apt install gparted
  sudo gparted
  >> Umount - Apply


## Select partion which is not boot disk. 
sudo fdisk -l /dev/sdb

sudo dd if=/dev/sdb of=$HOME/raspi_sd_9Gb.img bs=1M

?? gparted 로 확장하기? ppt 보기
rasberrpy pi 백업..  크기 줄인 후
  sudo fdisk -l /dev/sdb


##### Script 📅 2024-11-12 20:06:18
set target_disk /dev/sdb
set target_partition $target_disk"2"
set backup_img_path "$HOME/backup/raspberry_pi_backup_"(date "+%Y%m%d%H%M%S")".img"
# Extract Start and Sectors values from the fdisk output
set start (sudo fdisk -l $target_disk | grep $target_partition | awk '{print $2}')
set sectors (sudo fdisk -l $target_disk | grep $target_partition | awk '{print $4}')

# Define block size (1MiB = 2048 sectors)
set block_size 2048

# Calculate skip (Start in 1MiB blocks)
set skip (math "$start / $block_size")

# Calculate count (Number of 1MiB blocks in the partition)
set count (math "$sectors / $block_size")

# Calculate the start and end sectors for display
set end_sector (math "$start + $sectors - 1")

# Display the calculation results
echo "Starting dd command:"
echo "Skipping from sector $start (block $skip) and copying $count blocks (1MiB each)"
echo "This will copy from sector $start to sector $end_sector, with $count blocks of 1MiB each."

# Execute dd command with the calculated skip and count
echo "It will run: %shell> time sudo dd if=$target_disk of=$BACKUP_IMAGE_PATH bs=1M skip=$skip count=$count status=progress"

time sudo dd if=$target_disk of=$BACKUP_IMAGE_PATH bs=1M skip=$skip count=$count status=progress


>>>>>>>>>>>>> 부트로더+파티션 테이블 및 파일 시스템까지 전체 복구
sudo dd if=$HOME/backup/raspberry_pi_full_backup.img of=/dev/sdb bs=1M status=progress

⚠️  📅 2024-11-12 21:03:09
  According to OpenWrt documentation here 17 and here 12, Linux kernel interface name is limited to 15 characters.
  https://forum.openwrt.org/t/linux-kernel-interface-max-length/173122



pull down 회로:
  버튼.. 예를 들면.. 저항 있는 쪽이 그라운드로 빠져나가냐의 차이.
  ? A-B, C-D 버튼 이 있다고 가젛아면
    1. D 단자 라인에서 저항을 만나고, 저항을 다른 라인으로 잇고, 저항쪽 끝의 gpio 핀을 아두이노의 2번 핀으로 연결.
    2. A 단자 라인에서의 breadboard 핀을 breadboard 의 + 와 연결.
      A-B 에 + 를 연결. C-D 에 그라운드로 가도록 분리한 것은 알곘음.
    
    근데 D 에서 왜 저항.. 을 이렇게 구성했나? 핀을 한 번에 해도 안되나
  !!! 전류는 저항이 없는 쪽으로 흐른다!!
    저항 위치 조절을 하면 debounce 현상 제거가 안되어버린다!
  
    
python iot_clinet.p
  [AllMSG]hello
  [1]hi


journalctl -u

임베디드
  트랜지스터 500mA 허용?
  
  채터링
  Serail.print("text") 가 메모리를 생각보다 꽤 잡아먹는다고 한다. 
  패리티 비트 vs stop 비트.. 아두이노..



nano ~/.config/nixpkgs/home.nix

home-manager switch
home-manager generations
nix-channel --update



## reinstall
https://nix.dev/manual/nix/2.18/installation/uninstall
sudo systemctl stop nix-daemon.service
sudo systemctl disable nix-daemon.socket nix-daemon.service
sudo systemctl daemon-reload

sudo rm -rf /etc/nix /etc/profile.d/nix.sh /etc/tmpfiles.d/nix-daemon.conf /nix ~root/.nix-channels ~root/.nix-defexpr ~root/.nix-profile

for i in (seq 1 32)
    sudo userdel nixbld$i
end
sudo groupdel nixbld


# Define a function to back up and restore each file
function backup_and_restore
    set file_path $argv[1]
    set backup_path "$file_path.backup-before-nix"

    # Step 1: Back up file
    echo "Backing up $file_path to $backup_path"
    sudo cp $file_path $backup_path

    # Step 3: Overwrite the original file with the backup
    echo "Restoring $file_path from $backup_path"
    sudo mv $backup_path $file_path
    echo "$file_path has been restored using $backup_path."
end

# List of files to process
set files /etc/bash.bashrc /etc/bashrc /etc/profile /etc/zsh/zshrc /etc/zshrc

# Loop through each file and apply the backup_and_restore function
for file in $files
    backup_and_restore $file
end

# If you don't mind losing previous profile generations then the easiest solution is probably to run
rm $HOME/.local/state/nix/profiles/home-manager*
rm $HOME/.local/state/home-manager/gcroots/current-home


home-manager switch -f ~/.config/nixpkgs/home.nix


home-manager -v switch


⚠️ Bug; It does not read default value.. 📅 2024-11-14 05:42:20
wbfw109v2@iot4-computer ~/r/synergy-hub (main)> home-manager switch --help
Usage: /home/wbfw109v2/.nix-profile/bin/home-manager [OPTION] COMMAND

Options

  -f FILE           The home configuration file.
                    Default is '~/.config/nixpkgs/home.nix'.

so when "home-manager switch", it does not build properly.



mv /home/wbfw109v2/.config/fish/config.fish /home/wbfw109v2/.config/fish/config.fish.bak
home-manager switch
...

nix-channel --add https://github.com/nix-community/home-manager/archive/release-23.05.tar.gz home-manager
nix-channel --update

⚓ Matter ; https://en.wikipedia.org/wiki/Matter_(standard) 

https://home-manager-options.extranix.com/


변수는 let 에서 정의하고 in 에서 써야 한다. .. 는 예전버전. nix 24 는 아님.. 달라졋다. 세미콜론도 붙여야 한다.
rec는 Nix에서 레코드(객체)를 정의할 때 사용되며, buildRustPackages와 함께 사용될 때는 해당 함수의 형식에 맞지 않아서 오류가 발생한 것입니다.


wbfw109v2@iot4-computer ~/r/synergy-hub (main)> lsusb | grep Prolific
Bus 001 Device 018: ID 067b:2303 Prolific Technology, Inc. PL2303 Serial Port / Mobile Phone Data Cable

i2c, 2-wire intreface, spi commncation
addachInterrupt() 외부 인터럽트 사용방법. 2번 -> 0번. 1번이면 3번 써야함.
attachInterrupt(0, isr, PALLING); RISING, CHANGE

https://marketplace.visualstudio.com/items?itemName=bbenoist.Nix

👍 https://github.com/NixOS/nixpkgs


❓ 어라 뭐지? 나 뭔가 잘못된 경로에서 작업하고 있엇나?..
  /home/wbfw109v2/.config/nixpkgs/home.nix
  여기가 아니라
  /home/wbfw109v2/.config/home-manager/home.nix 에서 했어야햇나?; ㅇㅇ..
  >> %shell> home-manager switch

❓ In nixpkgs.fetchFromGitHub how to calculate sha256?  https://github.com/on-nix/python/issues/5
  pkgs.lib.fakeSha256
  https://discourse.nixos.org/t/overriding-outdated-sha256-hash-for-unityhub-using-overlays-not-working/6161

  아, 이해했어요. 말씀하신 대로, 현재 문제가 발생하는 이유는 pkgs.fetchFromGitHub가 내부적으로 기본적으로 사용하는 해시값을 여전히 우선시하고 있기 때문입니다. 즉, overrideAttrs로 hash 값을 지정해도 Nix는 여전히 default.nix에 정의된 해시값을 참조하고 있다는 점이 문제입니다. 그럼에도 불구하고, 원하시는 것은 default.nix에서 지정한 해시값을 무시하고, 내가 지정한 해시값을 사용하는 것입니다.

nix-prefetch-url

nix package not override sha hash

>>>>> overrideAttrs는 기존 패키지의 속성들을 수정하는 방식이지만, stdenv.mkDerivation을 사용하는 방식은 패키지 정의를 아예 새로 작성하는 방식입니다.
니 pkgd fetchurl 에서 url 을 썻을때도 fetchFromzfetchFromzgothufetchFromGithub f를 썻을 때도 hash 값이 어떤 hash 값인지 모르겠어. 너는 자꾸 tar.xz 파일의 hash 값이라고 하는데 실제로 curl, checksum 으로 검사해 검사해봤는데 home manager Switch,로 빌드하면 내가 제공한 hash 와 다르게 나와.
너가 자꾸 잘못 기록했다고 하는데 그런 일은 없어. 대체 어떤 sha512 값을 가져오는거야? Nix 가 검사하는 sha 값이.
Nix는 fixed-output derivation이라는 특성을 가지고 있습니다. 즉, fetchFromGitHub이나 fetchurl은 다운로드한 파일의 해시값을 바로 사용하지 않고, 압축을 해제한 후의 내용에 대해 해시값을 계산합니다. 이는 Nix가 파일의 무결성을 검증하는 고유한 방식으로, 단순히 파일의 바이트 내용을 검사하는 것이 아니라 압축을 해제한 파일 구조 전체를 대상으로 해시를 생성합니다.

curl로 다운로드한 .tar.gz 파일의 해시값은 압축된 파일에 대한 해시값입니다. 하지만 Nix는 이 파일을 다운로드한 후 압축을 풀고 나서 그 내용을 기준으로 해시를 계산합니다.
  따라서, sha256sum이나 sha512sum으로 다운로드한 파일을 직접 검사하는 방식과 Nix의 해시 계산 방식이 다르기 때문에, 불일치가 발생합니다.
Nix가 요구하는 해시값 형식 (SRI 해시):
  Nix는 보통 SRI(Secure Resource Identifier) 형식을 사용하며, sha256- 또는 sha512-로 시작하는 형태로 해시값을 요구합니다. 이 값은 단순한 sha256 해시와 다릅니다.
nix-prefetch-url --unpack 

nix hash to-sri --type sha256
wbfw109v2@iot4-computer ~/r/synergy-hub (main)> nix hash to-sri --type sha256 1s55riqnsscmaf3r4vz92qw6qvvi8ma2kw3slxvcdywwh0hjcgvh

error: experimental Nix feature 'nix-command' is disabled; add '--extra-experimental-features nix-command' to enable it

nix --extra-experimental-features nix-command hash to-sri --type sha256 1s55riqnsscmaf3r4vz92qw6qvvi8ma2kw3slxvcdywwh0hjcgvh

nix --extra-experimental-features nix-command hash convert --to sri --type sha256 $watchman_hash

👍⚓ Subresource Integrity (SRI) ; https://www.w3.org/TR/SRI/

nix hash convert --hash-algo sha256 --from nix32 $watchman_hash
nix --extra-experimental-features nix-command hash convert --to sri --type sha256 $watchman_hash
nix --extra-experimental-features nix-command hash to-sri --type sha256 1s55riqnsscmaf3r4vz92qw6qvvi8ma2kw3slxvcdywwh0hjcgvh
s nix-command hash convert --to sri --type sha256 $watchman_hash
>>>>>>>>>> 📅 2024-11-15 06:27:08
  set watchman_hash (nix-prefetch-url --unpack https://github.com/facebook/watchman/archive/v2024.03.11.00.tar.gz)
  set sri_hash (nix --extra-experimental-features nix-command hash convert --hash-algo sha256 --to sri $watchman_hash)
  set expected_hash "sha256-cD8mIYCc+8Z2p3rwKVRFcW9sOBbpb5KHU5VpbXHMpeg=";
  if test "$sri_hash" = "$expected_hash"; echo "Test passed: Hash values match."; end



  version = "2024.11.11.00";  # 원하는 버전
  src = pkgs.fetchurl {
    url = "https://github.com/facebook/watchman/archive/v${oldAttrs.version}.tar.gz";
    sha256 = "sha256-duvAzF1YEV1tKIQtx6UqCyAHvLFKH3SMlF3sdHtrUYc=";  # 정확한 sha256 값
  };

  sha256-1HOb37xwz31AZChVOJ985JMu5jAEf0cRJpnpEDogBCc=
  https://nixos.org/manual/nixpkgs/unstable/#mkderivation-recursive-attributes
❌ Not override.. https://discourse.nixos.org/t/overrideattrs-not-taking-effect-how-to-override-fetchfromgithub-and-more/32298
  https://discourse.nixos.org/t/does-fetchfromgithub-ignore-rev-when-a-derivation-with-equivalent-sha256-is-present/8752
    글은 fetchFromGitHub가 **고정 출력 파생(fixed-output derivation)**이기 때문에 rev 값을 변경해도 sha256 해시 값이 동일하다면 Nix는 새로 빌드하지 않고 기존에 저장된 내용을 사용하게 되는 문제를 다루고 있습니다. 

  (pkgs.watchman.overrideAttrs (finalAttrs: {
    version = "2024.11.11.00";
    # url = "https://github.com/facebook/watchman/archive/v2024.11.11.00.tar.gz";
    src = pkgs.fetchFromGitHub {
      owner = "facebook";
      repo = "watchman";
      rev = "v${finalAttrs.version}";
      hash = "sha256-1HOb37xwz31AZChVOJ985JMu5jAEf0cRJpnpEDogBCc=";
    };
  }))

  overrideAttrs는 Nix에서 속성 덮어쓰기를 위해 자주 사용되지만, Nixpkgs의 fetchFromGitHub과 같은 fixed-output derivation의 경우 특정한 방식으로 처리되지 않으면 기존 해시를 계속 참조하는 문제가 발생할 수 있습니다.

이 문제는 Nix의 **fixed-output derivation**이 캐시를 사용하기 때문이며, 단순히 overrideAttrs만으로는 해결되지 않을 때가 있습니다. 해결을 위해 Nixpkgs에 오버레이(overlay)를 추가하여 패키지를 직접 수정하는 방법을 사용할 수 있습니다.

❌ 📅 2024-11-15 11:02:13
  ➡️ 복잡하고 의존성이 많은 패키지를 빌드할 때 Nix에서의 관리가 지나치게 어렵다면, Homebrew를 통한 설치나 시스템 패키지 관리자를 병행하여 설치하는 것이 훨씬 효율적일 수 있습니다.
  https://stackoverflow.com/questions/65970915/how-can-i-override-a-package-source-in-nix
  https://nixos.wiki/wiki/Overlays#Overriding_a_version
  error: failed to select a version for the requirement `anyhow = "^1.0.86"`
  candidate versions found which didn't match: 1.0.79

  >> Cargo.lock과 Cargo.toml 파일을 조정하여 원하는 버전과 일치하도록 해야 합니다. Nix 빌드 환경에서는 종종 기본 패키지를 수정하거나 최신 버전의 Crate를 명시적으로 요구해야 합니다.

  >> No have dir: eden/common/...

  home manager 에서 필요한 패키지들을 명시하지 않아 빌드하기 위한 패키지들을 .nix 에 모두 쓰지 못하여 빌드가 어렵고, linux 용 binary 를 제공하지 않고, 패키지의 기존 default.nix 의 fetchFromGitHub 의 hash override 가 작동하지 않아서 

    FBThrift::thriftcpp2
  -- home.nix
    nixpkgs.overlays = [
      (final: prev: {
        watchman = prev.watchman.overrideAttrs (old: {
          src = prev.fetchFromGitHub {
            version = "2024.11.11.00";
            owner = "facebook";
            repo = "watchman";
            # revision for v2024.11.11.00
            rev = "78abdb74936a6319136e2de787a83daf94d28f6f"; # 원하는 GitHub 커밋 SHA로 변경
            hash = "sha256-1HOb37xwz31AZChVOJ985JMu5jAEf0cRJpnpEDogBCc=";
          };
          patches = [];
          buildInputs = old.buildInputs ++ [ pkgs.fb303 pkgs.fbthrift pkgs.mvfst pkgs.wangle ]; # wangle 추가
          cmakeFlags = old.cmakeFlags or [] ++ [
            "-Dfb303_DIR=${pkgs.wafb303}/lib/cmake/fb303"
            "-DFBThrift_DIR=${pkgs.fbthrift}/lib/cmake/FBThrift"
            "-Dmvfst_DIR=${pkgs.mvfst}/lib/cmake/mvfst"
            "-Dwangle_DIR=${pkgs.wangle}/lib/cmake/wangle" # wangle 경로 추가
          ];
  w        preConfigure = ''
            sed -i '/target_link_libraries/i find_package(fb303 REQUIRED)' CMakeLists.txt
            sed -i '/target_link_libraries/i find_package(FBThrift REQUIRED)' CMakeLists.txt
            sed -i '/target_link_libraries/i find_package(mvfst REQUIRED)' CMakeLists.txt
            sed -i '/target_link_libraries/i find_package(wangle REQUIRED)' CMakeLists.txt
          '';
        });
      })
    ];

set WM_VERSION v2021.12.06.00
set WM_VERSION v2023.11.11.00


바이너리가 있다고 했지만 없음 ㅡ.ㅡ
  소스코드 .zip 밖에
  CMakeLists.txt 가 너무 복잡해서 뭐가 필요한지 알 수가 없음. 정의 하기 어려움.. nix에..
  ...

https://nixos.org/manual/nixos/unstable/

>>>>>>>>> https://stackoverflow.com/questions/65970915/how-can-i-override-a-package-source-in-nix
  nixos.wiki has an example of overriding the source of a package.

nix homemanager 에서 brew 를 설치는 불가능한 것으로 보임. activation 설정값으로 으로 관리하려면 패키지 설치 이후에 작동하는거고 선언형이 아니게 된다.

sudo iwlist wlan0 scan은 무선 네트워크 스캔 명령으로, 현재 라즈베리파이가 감지할 수 있는 Wi-Fi 네트워크의 목록을 출력합니다. 이
nmap -sn 10.10.14.0/24


>>>>>>>>>>>>>>>>>>>
## Install Nix via the recommended multi-user installation :
# <( ) is process substitution, which allows the output of a command to be treated as a file-like input.
# In this example, <(curl -L https://nixos.org/nix/install) runs `curl` to download a script from the URL
#   , and provides its output as a temporary file-like input for the `sh` command.
# This means `sh` will execute the downloaded script directly without saving it permanently on disk.

bash -c 'sh <(curl -L https://nixos.org/nix/install) --daemon --yes'

## I am executing:

# Create the system users (uids [30001..30032]) and groups (gid 30000)
   that the Nix daemon uses to run builds. To create system users
   in a different range, exit and run this tool again with
   NIX_FIRST_BUILD_UID set.

# 🚣 Create the Nix build group, nixbld
# $ sudo groupadd -g 30000 --system nixbld

# to start the nix-daemon.service
# $ sudo systemctl restart nix-daemon.service

## Try it! Open a new terminal, and type:
# $ nix-shell -p nix-info --run "nix-info -m"

# ❓ I don't open a new terminal because this script must run continuously within the current session. 📅 2024-11-14 04:48:38
# As a temporary measure, perform the following to add Nix to PATH if it's installed.
# https://discourse.nixos.org/t/installing-home-manager-on-ubuntu/25957/2
if test -d /nix/var/nix/profiles/default/bin
  fish_add_path /nix/var/nix/profiles/default/bin
  fish_add_path $HOME/.nix-profile/bin
end

# 🚣 Configure your shell to import special Nix Profile files, so you can use Nix.

# You can open an issue at https://github.com/NixOS/nix/issues/new?labels=installer&template=installer.md
# Or get in touch with the community: https://nixos.org/community


nix-shell -p nix-info --run "nix-info -m"

# Add the appropriate Home Manager channel.
nix-channel --add https://github.com/nix-community/home-manager/archive/master.tar.gz home-manager
nix-channel --update
# >> this derivation will be built: ... building ... unpacking ...


# Run the Home Manager installation command and create the first Home Manager generation
nix-shell '<home-manager>' -A install
# 🚣 Once finished, Home Manager should be active and available in your user environment.

# Make sure you have a working Nix installation. ... https://nix-community.github.io/home-manager/



>>> 바이너리 파일 사용해야 하는 경우, brew 사용.
>>> 개발/배포용 환경을 재현해야 하는 경우, nix. .. or .. 가상환경.. or. .. 버전이 크게 중요하지 않음
5. 결론: Nix의 현실적 사용
  개발 환경:
    Nix는 언어별 도구와 비교해 상대적으로 사용 빈도가 낮습니다.
    언어별 도구나 Homebrew로 충분히 관리가 가능하며, Nix는 과도할 수 있습니다.
  배포 환경:
    Nix는 배포 환경에서 환경을 완전히 재현하고 고정하는 데 강력합니다.
    컨테이너, 네트워크, 서버 설정과 같은 복잡한 시스템 관리에서 유용하게 쓰입니다.

⚠️ 기존 것은 삭제하지 말고, brew 로 최대한 설치하자... 의존성 오류나면 밀어야 함..
apt-cache show wget
  Priority: standard
  Priority: important 또는 Priority: standard로 표시되면 대부분 기본 설치됩니다.
wbfw109v2@iot4-computer ~/r/synergy-hub (main)>  apt-cache show curl
  Package: curl
  Architecture: amd64
  Version: 8.5.0-2ubuntu10.4
  Multi-Arch: foreign
  Priority: optional



========== 모듈화 필요
  ## 🚣 cat $HOME/.nix-profile/bin
  home.activation.testCurlHelp = ''
    echo "Testing curl command after installation:"
    ${pkgs.curl}/bin/curl --help

Ligaturesw



All nerd fonts can not render emojis: ⚠️⚡

  이거 모든 nerd fonts 들이 emoji 를 컬러로 지원을 안해서 그냥 nerd fonts (터미널에서 icon? 렌더링 용으로)만 쓰는게 좋을거같은데 어떻게 생각해..
  이게 emoji 코드를 아예 렌더링하지 않는 nerd font 면 상관없겠는데 자기들이 렌더링을 했는데도 흑백으로 나오는 이모지들이 있어서 fallback 으로 emoji font 에 넘겨줘도 작동하지 않는 문제가 있네..
  Glyph 우선순위:

  폰트가 특정 이모지의 글리프를 흑백으로 제공하는 경우, 운영 체제나 애플리케이션은 다른 폰트로 Fallback하지 않습니다.


  ❌ 윈도우 기본 이모지 폰트 "Segoe UI Emoji" 는 :arrow_right, :arrow_forward 를 구분하지 못한다.
    반면에 
    https://github.com/13rac1/twemoji-color-font?tab=readme-ov-file
      SVGinOT (SVG(Scalable Vector Graphics) in OpenType)
      일반적인 폰트는 단색으로 글리프(문자)를 정의하지만, SVGinOT 폰트는 컬러를 포함할 수 있습니다.
    OpenType 표준 확장:
    Adobe? 의 포맷도 있었는데 윈도우는 인식하지 못한다.....
    dd twemoji-color-font 도 그럼.

    https://helpx.adobe.com/fonts/using/ot-svg-color-fonts.html
    Color fonts like Trajan Color Concept and EmojiOne Color will appear just like typical fonts in your programs’ font menus — but they may not display their full potential, since many programs don’t yet have full support for the color components. If your software program doesn’t support the SVG artwork within the fonts, glyphs will fall back to a solid black style. Color can still be applied to this fallback style, as it will work like a typical OpenType font.
    openmoji 도 그럼. 트위모지, 다..
❓  >> Twemoji Mozilla ㄴㄴ ..
    // 🌴 If in Ubuntu
    //    Fonts to fix problems 'Unicode characters (emojis) are black/white' and 'Extra spacing after emoji variants for Noto Coolor Fonts' in Ubuntu 🔗 https://github.com/13rac1/twemoji-color-font
    //    ⚠️ But It is good to apply onto Ubuntu OS. not Windows 11.
    // "editor.fontFamily": "'JetBrainsMono Nerd Font Mono', 'FiraCode Nerd Font Mono', monospace",
    sudo apt install fonts-noto-color-emoji
    sudo apt install fontconfig
    이거를 해도 똑같아. VSCOde 에서 이모지 렌더링 엔진을 지원안해서그런가
    ChatGPT의 말:
    ChatGPT
    네, VSCode에서 이모지가 흑백으로 표시되는 문제는 VSCode 자체의 제한 사항 때문일 가능성이 높습니다. 이는 VSCode의 폰트 렌더링 엔진이 컬러 이모지 렌더링을 완전히 지원하지 않기 때문입니다.

    문제 원인
    VSCode의 렌더링 엔진 제한:

    VSCode는 Electron(Chromium 기반)을 사용하여 인터페이스를 렌더링합니다.
    Electron은 일부 운영 체제에서 **컬러 벡터 글꼴(SVG-in-OT, OpenType-SVG)**을 완전히 지원하지 않습니다.
    이로 인해 Twitter Color Emoji와 같은 컬러 폰트가 흑백으로 표시될 수 있습니다.
    폰트 우선순위:

    VSCode가 시스템 기본 폰트를 올바르게 사용하지 못하거나 특정 폰트를 선택하는 데 문제가 있을 수 있습니다.


📰 Linux.. android amulator..
  Termux
    안드로이드에서 Linux환경 터미널을 사용하게 해준다
https://www.harmonyos.com/en/
  ?

printf "\U1F600"
fc-match emoji


  Adnroid: serial blutooh terminal  app
    TCP Telnet Terinal App

  hcitool scan

pi@pi19:~ $ bluetoothctl
  >> Agent registered
  [bluetooth]# default-agent
  >> Default agent request successful

  scan on
  scan off

  // 00:18:E4:40:00:06       iot19.
  pair <mac address>
  pair 00:18:E4:40:00:06

apt install dnsutils
  >>>> nslookup


>>> emoji 를 대부분 OS 시스템에서 있는 것을 그대로 사용하는것이 좋은 이유..
  https://askubuntu.com/questions/1325715/twitter-color-emojis-on-ubuntu-20-10
    Thanks for the reply, with the default emoji font, color emojis worked just fine everywhere, why is Twitter Color Emoji not able to do the same? – 
    4a6f73687561
    CommentedMar 27, 2021 at 7:11
    It's a limitation of the other apps (as mentioned in the README) and the OS. – 
    NMrocks
    CommentedMar 28, 2021 at 12:08
Twemoji Mozilla.. 이거 FireFox 에서 제공되는 emoji 였떤거같기도..
🧪
  "editor.fontFamily": "'Noto Color Emoji'"
    >> 글자 사이 자간이 너무 벌어진다.
  "editor.fontFamily": "'JetBrainsMono Nerd Font Mono'"
    >> 일부 emoji 가 흑백으로 렌더링된다. ▶️⚠️⚡

    
  Twemoji Mozilla, JoyPixels, Segoe UI Emoji, . Apple Color Emoji, OpenMoji
  https://github.com/samuelngs/apple-emoji-linux
    Apple Color Emoji 도 똑같이 자간 문제.
  https://github.com/Vyshnav2255/Windows-11-Emojis-on-Linux

  우분투에서 VScode 에 editor font family 에 emoji font 를 직접 설정하면 모두 흑백으로 나오는데, (어떤 폰트든 동일).. 원래 그런가? 우분투의 경우는 이렇게가 아니라 config 파일을 만들어서 fallback으로 렌더링해야하나?
    우분투에서 VSCode의 editor.fontFamily 설정에 이모지 폰트를 직접 추가했을 때 이모지가 흑백으로만 나오는 문제는 Linux의 폰트 렌더링 방식과 VSCode의 내부 처리 방식 때문입니다. 이는 VSCode가 Electron(Chromium)을 기반으로 하며, 컬러 이모지를 지원하지 않는 기본 텍스트 렌더링 엔진을 사용하기 때문입니다.

  원인
  Electron의 폰트 렌더링 문제:

  Electron 기반 애플리케이션(VSCode 포함)은 텍스트 렌더링에서 COLR/CPAL, CBDT/CBLC, SVG glyphs 같은 컬러 글리프 포맷을 제대로 지원하지 않는 경우가 많습니다.
  기본적으로 컬러 이모지가 아닌 흑백 글리프만 렌더링될 수 있습니다.
  Linux의 폰트 폴백 문제:

  VSCode가 이모지를 폰트 폴백으로 처리하지 않고, editor.fontFamily에서 직접 지정된 글꼴로만 렌더링하려 시도합니다.
  Linux에서는 컬러 이모지가 제대로 렌더링되기 위해 폰트 구성(fontconfig)이 필요할 수 있습니다.



  Powerline glyphs
    https://github.com/ryanoasis/powerline-extra-symbols?tab=readme-ov-file

  mkdir -p ~/.config/fontconfig/conf.d/
  ❗ fc-cache -f 이후 vscode 에서는 vscode 프로세스를 모두 종료했다가 다시 시작해야 적용된다.
    ⚠️⚡ 이 두 emoji 와 twitter emoji로 테스트해봄.
  otf 파일?.. FiraMono Nerd Font Mono
  fc-cache -f

  .. 렌더링되지 않은 폰트에 대해서만 fallback 하지 않는듯 보임 . 우분투는..?
    아니 그게 아니라 덮어쓰는거 자체가 문제라니까?
    twitter font 를 우선으로 했는데   다음에 fallback 으로 오는 fira font  가 기존에 렌더링했던 twitter font 까지도 다 자신의 것으로 렌더링해버려. 그래서 컬러 이모지가 흑백으로 나오는거고.

    fallback 맞는거야? 이걸 보고도.. 진짜 실제로 어떤거지 font config  man page들어가도 "fallback" 이라는 표현은 없던데
  맞습니다. Fontconfig가 동작하는 방식은 전형적인 "fallback" 메커니즘처럼 작동하지 않습니다. 즉, 특정 글리프가 처리되지 못할 경우에만 fallback하는 것이 아니라, 폰트 리스트에 정의된 폰트를 순차적으로 적용하면서, 우선순위가 낮은 폰트가 기존의 우선순위 폰트를 덮어쓸 수 있는 방식으로 동작합니다. 이것이 이모지가 흑백으로 표시되는 문제의 원인입니다.7

  Nerd Fonts 에는 지원하지 않는 이모지가 생각보다 종종 있어서 그건 불가능해.  vscode 자체에사 지원하는 속성을 써도 윈도우에서는 잘 fallback 되는데 여기에 이모지 폰트를 설정해버리면 우분투에서는 emoji 가 흑백으로 나와버리는 버그가 있어서.. 그냥 이모지를 선택하는 게 낫겟지? 글리프는 거의 사용하지 않잔아?

  .. 그냥 글리프 폰트 ..사용하지말자.. 유니코드가 더 직관적이고 좋다. nerd font 의 glyph 는 mono 로 적용하면 작아서 잘 보이지도 않는다. 그리고 lsd 도 icon 에서 fancy style (nerd font 필요) 대신 unicode 로 설정하게 할 수 있따.
  straship 도 마찬가지로 preset 이 존재.

    📰📧➡️▶️⚠️⚡ 
  // "editor.fontFamily": ""  아예 이 속성에 대한 설정을 해주지 않아야 한다. default값을 사용하도록 해야 함.  


  윈도우 레지스트리로 등록..; 일부만 적용됨..  맞나?... JetBrains 윈도우에서 설치된 종류 보고그만큼 줄 추가해서 적용학.
    https://winaero.com/winaero-tweaker/#download
    프로그램 내에서 
      Search: Font
        Advanced Appearance Settings
          - Message Font
            JetBrainsMono Nerd Font Mono
          - Statusbar Font
            JetBrainsMono Nerd Font Mono
          - System Font

▶️ STM32 Integration
  🔰 https://blog.naver.com/chcbaram/223573759149
➡️ Reference
  - RCC (Reset and Clock Control)
  - .ioc (I/O Configuration) in STM32
  - USB connctor types ; https://en.wikipedia.org/wiki/USB_hardware#Host_and_device_interface_receptacles
  - 🪱 USB On-The-Go (USB OTG or just OTG) ; https://en.wikipedia.org/wiki/USB_On-The-Go
    USB On-The-Go (USB OTG or just OTG) is a specification first used in late 2001 that allows USB devices, such as tablets or smartphones, to also act as a host, allowing other USB devices, such as USB flash drives, digital cameras, mouse or keyboards, to be attached to them.
  - Trust Zone
    "Trust Zone is a technology used in ARM Cortex-M33 and similar architectures that separates secure and non-secure regions to protect code execution.
Board 🔪 Nucleo-F411RE
  Speicifcation ; https://www.st.com/en/evaluation-tools/nucleo-f411re.html
    - ST-LINK/V2-1 on USB Mini-B connector

  
STM32CubeMX
  # Pinout & Configuration
    # Connectivity
      # 🪱 USB_OTG_FS (Universal Serial Bus On-The-Go Full-Speed) 
        # Mode
          - Disable
          - OTG/Dual_Role_Device
            🚧 Prerequisites ...
              ID 핀
                GND로 연결되면 STM32는 Host 모드로 동작.
                풀업 상태(High)면 STM32는 Device 모드로 동작.
              ...
          - Host_Only
            STM32는 USB 마스터로서 USB 장치를 제어
            🚧 Prerequisites ...
          - Device_Only
            🚧 Prerequisites ...
        - 🪱 Activate SOF (Start Of Frame)
          USB 통신에서 USB가 Frame의 시작을 알리는 신호.
            - Full Speed: 1ms period
            - High Speed: 125µs period
        - Activate VBUS (Voltage Bus)
          USB 케이블의 전원 공급 핀(5V) 활성화
          Device 모드일 때는 STM32가 VBUS에서 전원을 받아야 하고, Host 모드일 때는 VBUS로 외부에 전원을 공급해야 합니다.
        

  # Clock Configuration
  # Project Manager
  # Tools


## STM32CubeMX
**Purpose**: Configures STM32 hardware (pins, peripherals, and clocks) and generates initialization code for fast project setup.
  STM32CubeMX는 GUI 기반으로 설정값 간의 상호작용을 시각적으로 보여줍니다.
    시스템 클럭을 설정하면 PLL, AHB, APB 등의 클럭 값이 실시간으로 계산되어 표시.
    설정값이 유효하지 않을 경우 경고를 바로 보여줘서 오류를 사전에 방지.
  핀 멀티플렉싱(Multiplexing): 특정 핀에 여러 기능이 매핑될 경우, 충돌 여부를 알려줌.

## STM32CubeProgrammer
**Purpose**: Uploads firmware to STM32 microcontrollers, manages flash memory, and supports firmware deployment.

❔📰 VSCode can use c++ project? instead of c ? 


  1️⃣ stmicroelectronics.stm32-vscode-extension ; https://marketplace.visualstudio.com/items?itemName=stmicroelectronics.stm32-vscode-extension
    ❗ 설치 필요. STM32CubeCLT v1.15.0 or later : STM32CubeCLT is a package containing toolchain and STM32 device related data required for project creation, build, and debug functionality.
      https://www.st.com/en/development-tools/stm32cubeclt.html?dl=redirect
      https://www.st.com/content/ccc/resource/technical/software/application_sw/group0/a2/72/50/11/24/fa/4e/5c/STM32CubeCLT-Lnx/files/st-stm32cubeclt_1.16.0_21983_20240628_1741_amd64.sh.zip/jcr:content/translations/en.st-stm32cubeclt_1.16.0_21983_20240628_1741_amd64.sh.zip
      bash .. file
      ➡️ Install dir: 기본값이 "$HOME/st/stm32cubeclt_1.16.0" 이다. 즉, "$HOME/st" dir 에서 "stm32cubeclt" 로 시작하는 폴더를 체크하고 첫번째 요소에 대해서 찾고 bin 폴더를 path 에 등록해야 한다.
        ... not works.. .. 하드코딩으로 경로 지정해서 설치해야한다?..  라 생각하려 햇는데 vscode 의 확장프로그램에서 고정된 주소를 제공하려면 내가 처음부터 설치할 때 버전을 빼고 설치해야 하는듯..
        ➡️ /home/wbfw109v2/st/stm32cubeclt

      삭제할 때 메시지 보니까 자동으로 path 에 등록하는 듯 보임.
        Do you want to remove STM32CubeCLT related paths from PATH variable? Please note that the paths are shared between all installed STM32CubeCLT versions. Removing the paths will effect all installations! Keep the path entry? 
        문제는 실행파일의 ubinstall.sh 파일 까지 path에 등록된다는 것..;; 이상하게 만들어놓음..

  spmeesseman.vscode-taskexplorer
  vscode.cpptools

>> 이를 수행하는 함수를 만드는게 나은듯..


⚓ STMCUFinder 
  https://www.st.com/en/development-tools/st-mcu-finder-pc.html
  https://www.st.com/content/ccc/resource/technical/software/sw_development_suite/group1/bc/e7/29/51/21/17/4a/9c/st-mcu-finderlin-v6-1-0/files/st-mcu-finderlin-v6-1-0.zip/jcr:content/translations/en.st-mcu-finderlin-v6-1-0.zip
### Launch STMCUFinder  


⚓ STM32CubeMX ; https://www.st.com/content/ccc/resource/technical/software/sw_development_suite/group1/4e/b5/ca/af/8b/51/44/aa/stm32cubemx-lin-v6-12-1/files/stm32cubemx-lin-v6-12-1.zip/jcr:content/translations/en.stm32cubemx-lin-v6-12-1.zip

  # Explanation of the awk condition 'found && $0 ~ /^end$/'
  # -----------------------------------------------
  # 1. $0:
  #    - Represents the entire current line being processed by awk.
  #    - If the current line is 'end', then $0 will contain exactly 'end'.
  #
  # 2. ~:
  #    - The pattern matching operator in awk.
  #    - '$0 ~ /regex/' checks if the content of the current line ($0) matches the given regular expression (regex).
  #
  # 3. /^end$/:
  #    - A regular expression that matches a line containing only the word 'end'.
  #      - ^: Matches the beginning of the line.
  #      - end: The exact word 'end'.
  #      - $: Matches the end of the line.
  #    - This ensures that lines like '  end  ' or 'somethingend' will not match.
  #
  # 4. found && $0 ~ /^end$/:
  #    - Logical AND condition in awk.
  #    - Ensures that:
  #      (1) 'found' is 1, meaning that the 'if status is-interactive' block has been encountered.
  #      (2) The current line ($0) is exactly 'end'.
  #    - This ensures that commands are inserted right before the 'end' line within the 'if status is-interactive' block.

📰 ... prettify_via_pipe 에 각각에 넣을 indent block 개수 인자로 받게 바꾸기.
STM32CubeCLTz
  .ioc 파일 기반으로 명령어 실행
  자동화 및 CI/CD 환경에서 사용 적합


  
  waydroid status
waydroid app install "$HOME/Downloads/project-telnettcpterminal-15-63800857-9ee11a50bd9186ab1d90025625830286.apk"
sudo run waydroid
waydroid show-full-ui
🚨 Issue: Bug: When quit the Waydroid, Ubuntu crashes. 📅 2024-11-20 17:45:18
  When
    %shell> waydroid show-full-ui
    When using the 'Quit' button or pressing 'Alt + F4'.
  Similar Issues:
    - [BUG] Waydroid causes GNOME 46 crashes on Ubuntu 24.04; https://github.com/waydroid/waydroid/issues/1384"
    - [BUG] Waydroid crashes gnome shell ; https://github.com/waydroid/waydroid/issues/1458
    - [BUG] Waydroid breaks nouveau and crash desktop ; https://github.com/waydroid/waydroid/issues/1513
  ➡️ Workaround: Close the application by sending a process signal, such as SIGINT.



빌드 시스템 생성기	CMake, Meson, Bazel, Premake	빌드 설정 파일(예: CMakeLists.txt)을 읽고 빌드 스크립트(Makefile, build.ninja)를 생성
빌더 (Build Tool)	Make, Ninja, SCons, MSBuild, Xcode Build	빌드 스크립트를 읽고 컴파일, 링크를 수행하여 최종 결과물을 생성
🪱 VS Code Command Palette.

📰 .. 프로젝트 옮겼을 때 작동하는지 확인해봐야 함.
🖇️ STM32 VS Code extension User Guide  ; $Home/.vscode/extensions/stmicroelectronics.stm32-vscode-extension-2.1.1/User guide.md 📅 2024-11-21 10:48:01
  ❓ I can not find Web file. It seems that I can view this document after install VS Code extension.
  📝
    Flash memory is a non-volatile memory stored inside (or outside) the microcontroller.
      The code (firmware) of the MCU is usually stored in the internal flash memory and executed from there.
    "Boot Flash" refers to the process where the MCU starts execution from code stored in external flash memory during the boot process.
      For example, external memory like QSPI flash or NOR flash can be used
      , where the contents of the external memory are either copied into the MCU's internal memory during boot or executed directly.

  📰 ### Add a build target
    STMM23 CMake .. cpp, lldb 사용하도록 변경, 
    📰 #### Build advanced devices
  ### Debug advanced devices
    #### Debug trust zone devices
      ⭕ Projects generated with STM32CubeMX, use Build & Debug Microcontroller Secure and NonSecure - ST-Link. Also, use Attach to Microcontroller Secure and NonSecure - ST-Link. This is recommended because the secure code transitions to non-secure code by default. Debugging or attaching to secure or non-secure code separately causes a hard fault.
      STM32Cube VSCode extension does not support option 📰 bytes settings. To set the TrustZone option byte, use STM32CubeProgrammer tool.
    #### Debug dual core devices
      NOTE: STM32CubeMX and most STM32Cube examples for dual-core devices configure CPU1 to control CPU2's launch.
        The master-slave setup requires CPU1 to run code to make CPU2 accessible to the debugger.
        ⭕ Therefore, we recommend debugging CPU1 first, then attaching CPU2.
  ### Advanced devices debug issues
    #### Handle multiple projects in one workspace
      When multiple projects are open in one workspace, the debugger may fail to detect which project to work on.
      In such cases, use the STM32 VS Code Extension: Update CMake Information feature to force the debugger to use a specific project.





https://code.visualstudio.com/docs/editor/profiles


- GPIO 모드가 "External Interrupt Mode with Rising Edge Detection"으로 설정되었는데, 이는 버튼이 눌렸을 때 신호의 상승 에지(LOW → HIGH)를 감지하여 인터럽트를 발생시키기 위함입니다.
- ??? Pull-up / Pull-down 옵션은 "No pull-up and no pull-down"으로 설정되어 있습니다. 이는 외부 회로(예: 버튼)의 저항으로 신호를 안정화할 수 있다는 전제를 가진 설정입니다. 만약 외부 회로에 저항이 없었다면, 내부 Pull-up 또는 Pull-down 저항을 활성화해야 신호가 부동 상태로 변하지 않습니다.
  
- ??? Output Push-Pull vs External Interrupt Mode with Rising Edge Detection 모드 차이 구체적인 설명..
  그리고 그럼 LED 에 대해서는 모두 Output Push-Pull 모드가 써?
- ??? Falling/Rising Edge 에서 신호가 HIGH, LOW 로 변하는거는 구성회로도에 따라 달라지는거야? pull-up, pull-down?
  그리고 왜 사진에서는 User label "B1 [Blue PushButton]" 에 대해서만 Falling Edge로 되어있는거야?

  LD2 (PA5):
이 핀은 보드에 기본적으로 연결된 LED를 제어하는 데 사용됩니다.
또한 PA5는 PWM 신호 출력을 지원할 수 있지만, 여기서는 단순 LED ON/OFF 제어를 위해 Output Push-Pull 모드로 설정되었습니다.

. 핀 선택 이유
핀 선택은 다음과 같은 STM32F411의 기능과 제약을 기반으로 결정됩니다:

PC0PC3 (BTN0BTN3):
  이 핀들은 일반 GPIO로 사용 가능하며, 특별히 추가적인 주변기능(예: PWM, UART 등)에 종속되지 않습니다. 따라서 입력 핀으로 활용하기 적합합니다.
  외부 인터럽트 기능(EXTI)을 지원하여 버튼 입력에 적합합니다.
PA5 (LD2):
  이 핀은 STM32F411RE 보드에서 기본적으로 LED가 연결되어 있는 핀입니다. LED 제어용으로 사용하는 것이 보드 설계에 자연스럽게 맞아떨어집니다.
  또한 PA5는 PWM 신호 출력을 지원할 수 있지만, 여기서는 단순 LED ON/OFF 제어를 위해 Output Push-Pull 모드로 설정되었습니다.
Output Push-Pull:

  GPIO 핀에서 강한 HIGH 또는 LOW 출력 신호를 제공합니다.
  예: LED와 같은 부하를 구동할 때 사용됩니다.

  1. Output Push-Pull vs External Interrupt Mode with Rising Edge Detection
Output Push-Pull 모드
역할: 핀을 출력(output)으로 설정합니다.
동작:
핀이 HIGH(3.3V) 또는 LOW(0V) 신호를 강하게 출력합니다.5
외부 부하(예: LED)나 디지털 신호를 확실하게 구동할 때 사용합니다.
LED 사용 시:
LED 제어는 Output Push-Pull 모드가 기본적으로 사용됩니다. LED를 켜거나 끌 때 핀이 확실하게 HIGH 또는 LOW 신호를 출력해야 하기 때문입니다.
예를 들어:
핀이 HIGH이면 LED가 켜지고, LOW이면 LED가 꺼지도록 설계됩니다.
왜 Push-Pull?
Push-Pull은 출력이 HIGH일 때도 강하게 드라이브하고, LOW일 때도 강하게 드라이브하는 구조입니다. 이는 외부 부하의 안정적인 동작을 보장합니다.
  🚣 특별한 경우(예: PWM으로 밝기를 제어하거나 LED 스트립 제어)는 PWM 모드로 설정할 수 있지만, 기본적으로 GPIO Output Push-Pull 모드가 기본값입니다.


📖 Relationship between GPIO pins and Rising Edge Detection
  Using the STM32 HAL library, an interrupt occurs when a Rising Edge (or Falling Edge) is detected, and the callback function (HAL_GPIO_EXTI_Callback) is called to handle the interrupt.

  Key operational steps:
    GPIO pins configured for Rising Edge Detection cause the microcontroller to trigger an interrupt when the pin transitions from LOW to HIGH.
    When the interrupt occurs, the HAL library automatically calls the HAL_GPIO_EXTI_Callback function.
    The HAL_GPIO_EXTI_Callback function passes the GPIO pin that triggered the interrupt as the variable GPIO_Pin.
    Therefore, if (GPIO_Pin == GPIO_PIN_0) checks whether a Rising Edge event occurred on GPIO_PIN_0.

📖 USART 🔪 Configuration 🔪 Maximum High Speed
  Maximum Output Speed:
    - Refers to how fast the GPIO pin can switch its output signal between HIGH and LOW.
    - This setting affects the "electrical response speed" of the pin.

  Why Very High Speed is used for UART:
    - UART operates at high baud rates (e.g., 115200bps or higher).
    - A slow transition speed can cause signal degradation and data loss.
    - The TX pin must be set to a high speed (e.g., Very High) to support rapid signal transitions.

  Other speed options:
    Low Speed:
      - Slower signal transitions.
      - Lower power consumption.
      - Suitable for low-speed signals, like button inputs.

    Medium Speed:
      - Moderate signal transition speed.
      - Suitable for low-speed data transfer, such as I2C or GPIO outputs.

    High Speed:
      - Faster signal transitions.
      - Commonly used for high-speed communication, such as SPI.

    Very High Speed:
      - The fastest signal transition rate.
      - Required for UART, SPI, and high-speed PWM.

근데 왜 84를 쓰려고 하는건가?

1/주파수 * 50..hz?
1000*20 = 20000
❓ Counter Period 설정..  -> 20000

1000000 (1M)
(1 / 1000000) * 20000


DSP Digital signal Processing? 이미지와 관련..?
 🌟 탈모약>>>>>>>>>>>>>>>>>>>> 프로페시아, 아보다트, 미녹시딜?

usage of emojis
  🅱️.. Beta.. NOt officially released. (not default package?)

AD 변환기  ADC 인터럽트
 Peripheral Components
  settings Analog - ADC1. 
  ❓ What is Resolution.. 12bits (15 ADC clock cycles)
  ❓ DMA
  ❓ Scan Conversion Mode
  ❓ End Of Conversion (EOC)
  폴링?

>>>>>>>>>>. # https://osg.kr/archives/3109

>> 📰 Wayland 말고 다른거 에뮬레이터 찾기..



TODO:
  우분투 22포맷하고
  STM32 패키지 설치 자동화 정리하고, stm32 시뮬레이션 해보기.
  platform io (stm32 이외 보드에 추천..글까지 정리) 사용법 정리
  >> 그리고 통신까지 다 테스트해보기.. 우분투 - 윈도우 WSL 간의 통신? (.. 이거 물어봐야함.)

raspberry pi - system pakcages
  mariadb-server
  mariadb client
  php
  apache

  install from https://mariadb.com/kb/en/mariadb-package-repository-setup-and-usage/
  Install
    %shell>
      curl -LsS https://r.mariadb.com/downloads/mariadb_repo_setup | sudo bash
      sudo apt update
      sudo apt install -y mariadb-server mariadb-client
  // home manger

>>>>>>> https://discourse.nixos.org/t/how-to-really-prefetch-the-sha256/14817
  You need to use the real url for the download, the “latest” url is a redirect. $ nix-hash --type sha256 --base32 --flat <(curl -o - https://update.code.visualstudio.com/latest/darwin-arm64/insider) 0n5mxh0xyilf97sc3g4ghvp8bdcalj6xj6y6mayvqx5qs01y12av gives the same hash as your fetchurl, but if yo…
nix-hash --type sha256 --base32 --flat <(curl -s https://codeload.github.com/facebook/watchman/tar.gz/refs/tags/v2024.11.11.00)
nix-prefetch-url https://codeload.github.com/facebook/watchman/tar.gz/refs/tags/v2024.11.11.00
  0bnd0y4w58k8cxqm14nm1falnnbr8r2z6rk4f9a46nw5b3x05fgr
nix-prefetch-url https://github.com/facebook/watchman/archive/v2024.11.11.00.tar.gz
  0bnd0y4w58k8cxqm14nm1falnnbr8r2z6rk4f9a46nw5b3x05fgr
home-manager switch -f ~/.config/nixpkgs/home.nix

clang --target=arm-linux-gnueabihf -march=armv7-a -mfpu=neon -mfloat-abi=hard -o output_file input_file.c
  크로스 컴파일에는 타겟 환경에 맞는 링커와 표준 라이브러리가 필요합니다. 이를 위해 gcc의 크로스 컴파일 툴체인(arm-linux-gnueabihf-gcc)에서 사용하는 라이브러리를 함께 사용할 수 있습니다. clang에서 이를 설정하려면 추가 옵션으로 크로스 툴체인의 경로를 지정해야 합니다.

📰 uznip 문제 해결해야하네? 뭐지? 왜 된거지?.... brew 에 있는 unzip 이 중간에 설치되서 그런가?

PPT 만들기
  인포그래픽: 냅킨 AI
  로고: 아이콘스카우트
  ??: 감마

📰 TODO Windows Font
📰 git config.. init  에 넣어야 함.
  git config --global user.email "$USER@gmail.com"
  git config --global user.name "$USER"

https://jseobyun.tistory.com/473
📰 poewrrshell message:? Failed to run .NET runtime. You may be missing key Linux libraries. Install them now?

CMakeLists.txt .. Debug Configure  할 때 발생? vscode reload..
enable_language(C ASM)


Exception has occurred: FATAL_ERROR
CMake Error at CMakeLists.txt:31 (enable_language):
  The CMAKE_C_COMPILER:

    arm-none-eabi-gcc

  is not a full path and was not found in the PATH.

  Tell CMake where to find the compiler by setting either the environment
  variable "CC" or the CMake cache entry CMAKE_C_COMPILER to the full path to
  the compiler, or to the compiler name if it is in the PATH.

  STM32F411 Board
    STM32F411에 XBee 모듈이나 TI CC2530과 같은 Zigbee 모듈을 UART 또는 SPI 인터페이스를 통해 연결할 수 있습니다.
    Zigbee 모듈이 자체적으로 Zigbee 프로토콜을 처리하므로, STM32F411은 모듈과의 데이터 통신만 처리하면 됩니다.

  XDG 표준 준수: ~/.local/share/는 XDG Base Directory 표준에 따라 애플리케이션 데이터를 저장하는 데 사용되는 디렉토리입니다.

  arm-none-eabi-newlib
  brew install arm-none-eabi-gcc arm-none-eabi-gdb
  ## arm-none-eabi-gcc arm-none-eabi-gdb 각 약자 뜻 확인하기. gcc arm none (embedded. no os) eabi (Embedded Application Binary Interface)
  ## ⚠️ after install, vscode must be restarted. (Not reload windows)
  Preference - local - stm32
  The following toolchain applications are missing: arm-none-eabi-addr2line, arm-none-eabi-gcc, arm-none-eabi-gdb, arm-none-eabi-nm, arm-none-eabi-objcopy, arm-none-eabi-

  Preference - STM32Cube - Toolchain Manager - 
    Add Local...
      Name: ✔️ local
      Prefix: arm-none-eabi-
      Location: ✔️ /home/linuxbrew/.linuxbrew/bin
    Finish
    make this ✔️ Set default
    Apply and Close
 🚨 not works.. USB 를 허브?스위치를 통해서가 아니라 직접 곶으면 되는듯?
    https://community.st.com/t5/stm32cubeide-mcus/linux-st-link-v2-does-not-work-after-installing-ide-1-4-bug/td-p/311005 
    When "Upgrade ST Link firmware" in VS Code stm 32 extension
      [out] libusb: error [get_usbfs_fd] libusb couldn't open USB device /dev/bus/usb/007/004, errno=13
      libusb: error [get_usbfs_fd] libusb requires write access to USB device nodes
      libusb: error [get_usbfs_fd] libusb couldn't open USB device /dev/bus/usb/007/004, errno=13
      libusb: error [get_usbfs_fd] libusb requires write access to USB device nodes
      libusb: error [get_usbfs_fd] libusb couldn't open USB device /dev/bus/usb/007/004, errno=13
      libusb: error [get_usbfs_fd] libusb requires write access to USB device nodes
      Access to ST-Link was denied by the system. Ensure it is not already in use, and that you have enough rights.
  🚨 The 6.12.1 seems to generate a linker script (.ld) that lacks some 'RAM' symbols on its code, which leads syntax errors.
    MakeFiles/led_test.dir/startup_stm32f411xe.s.obj -o led_test.elf   && :
    /home/wbfw109v2/st/stm32cubeclt/GNU-tools-for-STM32/bin/../lib/gcc/arm-none-eabi/12.3.1/../../../../arm-none-eabi/bin/ld:/home/wbfw109v2/led_test/STM32F411RETx_FLASH.ld:56: syntax error
    collect2: error: ld returned 1 exit status
    https://community.st.com/t5/stm32cubemx-mcus/flash-ld-syntax-error-when-upgrading-to-cubemx-v6-12-1/td-p/722343
    
    이거 _estack = ORIGIN() + LENGTH();    /* end of RAM */
    이거로 바꾸기
    _estack = ORIGIN(RAM) + LENGTH(RAM);
    ㅜㅐ.. not works
    https://community.st.com/t5/stm32cubemx-mcus/flash-ld-syntax-error-when-upgrading-to-cubemx-v6-12-1/m-p/725646/highlight/true#M29630
      found a quick solution. You can generate the code by setting the Toolchain to STM32CubeIDE. Then make a copy of the .ld file and use it on your project. Becausae the .ld file generated when setting Toolchain to STM32CubeIDE is still correct.
      👌 📅 2024-11-25 08:01:36

🪱 SBC(Single Board Computer)**는 단일 회로 기판에 CPU, 메모리, 저장 장치, 입출력 포트 등이 모두 통합된 컴퓨터를 말합니다. Raspberry Pi, Nvidia Jetson, BeagleBone 등이 대표적인 SBC입니다.
# https://mariadb.com/docs/server/connect/programming-languages/c/install/#CS_Package_Repository

? 이거를 CmakeList 에 추가할 수 있나
  gcc iot_client_bluetooth.c -o iot_client_bluetooth -lbluetooth -pthread
  


Conan:/// 여기서 target_link_libraries(cpp_study PRIVATE ${CONAN_LIBS} opencv::opencv fmt::fmt)
  이렇게 설정했는데, 이거는 빌드할 때 동적으로 필요하면 opencv 를 찾아서 라이브러리를 사용하는거야? 만약 main.cpp 에 include opencv 가 없으면 저거 없이 빠르게 빌드되나?
  CMake에서는 target_link_libraries로 지정된 라이브러리가 실제로 해당 코드에서 사용되는 경우에만 링크됩니다.
❓ -> 어차피 C 라이브러리는 

bwer install nginx
  ==> Caveats
  Docroot is: /home/linuxbrew/.linuxbrew/var/www

  The default port has been set in /home/linuxbrew/.linuxbrew/etc/nginx/nginx.conf to 8080 so that
  nginx can run without sudo.

  nginx will load all files in /home/linuxbrew/.linuxbrew/etc/nginx/servers/.

  To start nginx now and restart at login:
    brew services start nginx
  Or, if you don't want/need a background service you can just run:
    /home/linuxbrew/.linuxbrew/opt/nginx/bin/nginx -g daemon\ off\;
  ==> Summary
❯ brew services start nginx
Created symlink '/home/wbfw109/.config/systemd/user/default.target.wants/homebrew.nginx.service' → '/home/wbfw109/.config/systemd/user/homebrew.nginx.service'.
==> Successfully started `nginx` (label: homebrew.nginx)


/home/linuxbrew/.linuxbrew/opt/nginx/bin/nginx -g daemon\ off\;

❔ 
  cat /home/wbfw109/.config/systemd/user/homebrew.nginx.service
    ExecStart=/home/linuxbrew/.linuxbrew/opt/nginx/bin/nginx -g daemon\ off\;
    ExecStart=/home/linuxbrew/.linuxbrew/opt/nginx/bin/nginx -g 'daemon off;'
  systemctl --user daemon-reload
  brew services restart nginx
CPU conerns
  IO != CPU bound operations
  NodeJS 는  I/O 중심의 작업에서는 매우 뛰어난 성능을 바휘하지만, CPU 중심의 작업에서는 단일 쓰레드만 사용하고 있기에 적절한 구성과 안전장치가 마련되지 않으면 작업이 빠륵 통제 불가능한 상태로 치닫는다.
    ---> Caching staategy 사용

mysql.server


📰 platform io ..장치이름으로 인식되게 하는 그 코드 넣어야 함..
https://community.st.com/t5/stm32cubemx-mcus/solved-cubemx-run-code-generation-from-command-line/td-p/156367
java -jar cubemx.jar -q my_script
config load my_project.ioc
project generate ./
exit


LCD 반영, SQL 쿼리에서 마리아디비 데이터 가져오기

**** Usecase, Class Diagram, Activity diagram
  유스케이스 다이어그램: 시스템과 사용자 간 상호작용을 설명하는 고수준 개요.
  활동 다이어그램: 유스케이스나 프로세스의 세부 흐름.
  상태 다이어그램: 객체의 상태 전이.
  시퀀스 다이어그램: 객체 간의 메시지 흐름.
  클래스 다이어그램: 시스템의 구조와 관계.

  추천 순서:
    유스케이스 다이어그램: 전체 시스템의 개요를 먼저 설명.
    활동 다이어그램: 주요 프로세스의 세부 흐름을 보여줌.
    시퀀스 다이어그램: 상호작용 흐름을 시각화.
    클래스 다이어그램: 시스템의 구조를 설명. 정적 구조.
    상태 다이어그램: 객체의 동적 상태 변화를 설명.


사용할 Devices 에 interal, external 를 구분하기 위해서 별칭이 있었으면 좋겠어
이거 장치에 대해 

내가 STM32 내부 파트 구현과 라즈베리파이 부분 구현을 맡기로 했는데 무엇부터 하는 것이 좋을까. 스텝을 추천 및 나열해줘


주요 구현 사항
  STM32 들로부터 데이터 수집 시, 정확한 시간 측정을 위한 timer 사용
  

- 디버깅용 UART 핀? printf 설정

📰 Wlrctl: the best Wayland replacement to xdotool
  https://forums.raspberrypi.com/viewtopic.php?t=371406
❓📰 dconf gui 버전은 없나? 실제로 수정해보고 명령어로 어떤 값이 바뀌는지 확인해보려고
  ❗ Tip!!! dconf-editor
STM32
  왼쪽의 메뉴에서 [System Core] 를 클릭하고 다시 여기서 [SYS] 를 클릭합니다.
  Debug 항목이 "No Debug" 로 되어 있는데 "Serial Wire" 로 바꿔 줍니다. 
  그러면 MCU 의 34번 핀(PA13)과 37번 핀(PA14)이 SYS_JTMS-SWDIO, SYS_JTCK-SWDCLK 로 바뀝니다. 이제 이 MCU 는 SWD 가 가능해 졌습니다.

apt-cache show dconf
  N: Can't select versions from package 'dconf' as it is purely virtual
  N: No packages found
  dconf가 "virtual package"로 나타난다는 메시지는, 실제로는 dconf라는 이름의 패키지가 물리적으로 존재하지 않고, 해당 이름이 여러 패키지를 대표하거나 의존성 그룹으로 설정되어 있기 때문입니다. 
apt search dconf



📰 init_in_pwsh 에 추가. Docker
  when use docker in WSL2
  wbfw109@home:~$ docker

  The command 'docker' could not be found in this WSL 2 distro.
  We recommend to activate the WSL integration in Docker Desktop settings.

  For details about using Docker Desktop with WSL 2, visit:

  https://docs.docker.com/go/wsl2/
  ..? 이미 되어있음. 그냥 docker 한번 더 입력하면 정상적으로 실행되느늣?
도커 컨테이너의 IP 대역은: https://rimo.tistory.com/entry/Docker-Network-%ED%98%B8%EC%8A%A4%ED%8A%B8%EC%99%80-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88%EB%A5%BC-%EC%9C%84%ED%95%9C-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC%EB%A5%BC-%EA%B5%AC%EC%84%B1%ED%95%B4%EB%B3%B4%EC%9E%90
  docker run -it --name ubuntu_host --net host ubuntu
이거로 해결.. 어차피 테스트 용도니까
❓ 윈도우 Hyper-V 에서와 linux Qemu 에서 생성한 방식 차이.. 에서 스위치 vs 브릿지.. ㄷ

📰🆚 ext4 vs btrfs
  Btrfs (B-tree Filesystem)

❓📰 STM32 VSCode extension 어떻게 하는지 모르겟네..
  ❗ 아 필요한건 ioc 파일이고, 여기서 바로 "GENERATE CODE" 버튼을 누르면 안되고, Project - Toolchain / IDE 를 CMake 로 바꿔주어야 한다. 
    - 그리고 Cmake Configure ? - Debug? 를 해주어야 패키지 위치를 정상적으로 인식하는 듯 보임.
  저장해도,Vscode 재시작해도 안됫는
Import 하고

📰 STM32 Design Pattern 
  <user functions>
  <callbacks>

  <main>
    <init functions>
    <loop>
  

📰 ㅇㅎ Timer - 모드 3개 개념. (Input Capture, Output Compare, PWM)
  Input Capture 초음파 센서에서 채널 2개를 enabled 하여 사용?
  Input Capture Channel 1 은 Input Filter (4bits value) 를 4 로 설정
  Input Capture Channel 2 은 Input Filter (4bits value) 를 0 로 설정 (default)
    # Why Input Filter is Applied Only to Channel 1

    **Channel 1** is configured to detect the **Rising Edge (start signal)** of the ultrasonic signal. This configuration is critical for the following reasons:

    ### Channel 1 is Sensitive to Noise

    - Ultrasonic sensors generate a short 10μs Trigger signal, and immediately after the ultrasonic wave is emitted, the Echo pin transitions to HIGH (Rising Edge).
    - Environmental factors, such as electrical interference, nearby ultrasonic sensors, or other noise sources, can easily cause disturbances at this stage.
    - If this noise is mistakenly detected as a Rising Edge, the timer records an inaccurate start time.
    - Therefore, an **Input Filter** is applied to Channel 1 to ensure the accuracy of the start signal.

    ### Importance of the Rising Edge Signal

    - To measure the travel time of the ultrasonic wave, the starting point of the signal must be precisely captured.
    - If noise is mistakenly detected at the starting point, the entire distance calculation will be incorrect.
    - Conversely, the **Falling Edge (end signal)** is a natural event as the ultrasonic wave returns, and it is relatively less prone to noise interference.

    ### Stability of the Received Signal

    - The Echo signal, reflected from an obstacle, inherently has a longer duration (Pulse Width), making it less likely to include short-duration noise.
    - As a result, no filtering is necessary for the Falling Edge (Channel 2), as its stability is already ensured by the physical properties of the signal.

    ---

    By configuring the Input Filter only for Channel 1, the system effectively balances noise immunity and signal processing speed, ensuring precise ultrasonic measurements.


STM32F411RET6에는 디버깅을 위한 **SWD (Serial Wire Debug)**와 SWO (Serial Wire Output) 핀이 포함되어 있습니다. 이 핀들은 디버깅 및 로깅에 사용됩니다.

SWD (기본 디버깅 인터페이스)
PA13 (TMS / SWDIO):
디버깅 데이터 입출력 핀.
SWD 또는 JTAG 모드에서 사용됩니다.
PA14 (TCK / SWCLK):
디버깅 클럭 신호 핀.
SWD 또는 JTAG 모드에서 사용됩니다.
SWO (로깅 및 출력 인터페이스)
PB3 (SWO):
printf와 같은 디버깅 출력에 사용 가능한 핀.
SWD 모드에서만 사용 가능합니다(JTAG에서는 사용 불가).
STM32의 ITM (Instrumentation Trace Macrocell)을 통해 디버깅 메시지 출력.

❓ OS 구글에서 개발하는 차세대 OS이다. 소스 코드는 여기. 2016년 8월, 공식적인 예고도 없이 GitHub에 프로젝트가 등장하고부터 대중에 알려지기 시작했다.




❓ 점퍼 다른 STM 에 있는거 뽑아서 해보니까 된다. 📅 2024-11-26 20:07:36
  https://www.st.com/en/development-tools/stm32cubeprog.html
  https://www.st.com/content/ccc/resource/technical/software/utility/group0/3f/99/f1/92/bd/74/4f/5f/stm32cubeprg-lin-v2-17-0/files/stm32cubeprg-lin-v2-17-0.zip/jcr:content/translations/en.stm32cubeprg-lin-v2-17-0.zip
    점퍼는 전기 회로를 연결하거나 끊어주는 역할을 합니다. 이를 통해 MCU의 특정 동작이나 설정을 쉽게 바꿀 수 있습니다.

    MCU에서의 주요 점퍼 역할
      BOOT0 점퍼:
      BOOT0 핀의 전기적 상태를 GND(LOW) 또는 **VDD(HIGH)**로 설정하여 MCU가 어디에서 부팅할지 결정합니다.
      예: 부트로더(System Memory) 또는 Flash 메모리에서 부팅.
    ST-LINK/NUCLEO 점퍼:
      ST-LINK 디버거가 보드의 내장 MCU 또는 외부 MCU와 통신할 수 있도록 연결을 설정.
      예: ST-LINK를 외부 보드에서 사용할 경우, 점퍼를 제거하여 외부 MCU와 연결.
    ST-Link configuration
      Mode: Under reset
      Reset mode: Hardware reset 
      Firmware upgrade

  [24/24] Linking C executable led_test.elf
  Memory region         Used Size  Region Size  %age Used
              RAM:        1656 B       128 KB      1.26%
            FLASH:        7808 B       512 KB      1.49%
  build finished with warning(s).
  *  Terminal will be reused by tasks, press any key to close it. 

  *  Executing task: STM32_Programmer_CLI --connect port=swd --download /home/wbfw109v2/led_test/build/Debug/led_test.elf -hardRst -rst --start 

        -------------------------------------------------------------------
                          STM32CubeProgrammer v2.17.0                  
        -------------------------------------------------------------------

  STM32Prgorammer 개별적으로 설치해보고..
  ST-LINK error (DEV_CONNECT_ERR)

  *  The terminal process "/usr/bin/fish '-c', 'STM32_Programmer_CLI --connect port=swd --download /home/wbfw109v2/led_test/build/Debug/led_test.elf -hardRst -rst --start'" terminated with exit code: 1. 
  *  Terminal will be reused by tasks, press any key to close it. 

    ~/led_test2 via △ v3.28.1 
  [🔴 1; ERROR] ❯ STM32_Programmer_CLI --fwupgrade

        -------------------------------------------------------------------
                          STM32CubeProgrammer v2.17.0                  
        -------------------------------------------------------------------

  Error: Connection to target must be established before performing the fwupgrade command.

  TM32_Programmer_CLI --connect port=swd --hardRst

        -------------------------------------------------------------------
                          STM32CubeProgrammer v2.17.0                  
        -------------------------------------------------------------------

    ST-LINK SN  : 066AFF495648807567060728
    ST-LINK FW  : V2J45M30
    Board       : NUCLEO-F411RE
    Voltage     : 3.26V
    Error: No STM32 target found! If your product embeds Debug Authentication, please perform a discovery using Debug Authentication

    ~/led_test2 via △ v3.28.1 

  "label": "CubeProg: List all available communication interfaces",
  "command": "STM32_Programmer_CLI",
  "args": 
    "--list"
    -------- Connected ST-LINK Probes List --------

    ST-Link Probe 0 :
      ST-LINK SN  : 066AFF495648807567060728
      ST-LINK FW  : V2J45M30
      Access Port Number  : 0
      Board Name  : NUCLEO-F411RE
    -----------------------------------------------


    이제 다른 오류 뜨는데? 애지?
  [out] libusb: error [udev_hotplug_event] ignoring udev action unbind
  Detected firmware is up to date; use -force_prog to enforce reprogramming.
  Firmware version detected: V2J45M31
  libusb: error [udev_hotplug_event] ignoring udev action unbind
  libusb: warning [libusb_exit] device 2.2 still referenced
  ...



  왜? 오류?
  ❓ ST-LINK는 인식되지만 MCU와 통신 불가
  *  Executing task: STM32_Programmer_CLI --connect port=swd --download /home/wbfw109v2/led_test/build/Debug/led_test.elf -hardRst -rst --start 

        -------------------------------------------------------------------
                          STM32CubeProgrammer v2.17.0                  
        -------------------------------------------------------------------

  ST-LINK SN  : 066AFF495648807567060728
  ST-LINK FW  : V2J45M31
  Board       : NUCLEO-F411RE
  Voltage     : 3.27V
  Error: No STM32 target found! If your product embeds Debug Authentication, please perform a discovery using Debug Authentication

❯ git log --name-only -n 1
❯ git log --name-only -n 3

❓ git.openRepositoryInParentFolders


1. Asynchronous 모드에서의 특징
  클럭 신호 불필요:

  비동기 모드는 클럭(SCLK)을 사용하지 않고, TX(Transmit)와 RX(Receive) 라인만 사용합니다.
  따라서 동기 모드(Synchronous)처럼 클럭 라인 설정과 관련된 추가 코딩은 필요하지 않습니다.
  전송 속도 동기화:

  송신자와 수신자는 동일한 Baud Rate를 사용하여 데이터 전송을 동기화합니다. Baud Rate 설정이 매우 중요합니다.
  Start/Stop/Parity Bits:

  데이터 프레임에는 시작 비트, 데이터 비트, 선택적 패리티 비트, 정지 비트가 포함됩니다.
  HAL 라이브러리 사용 가능:

  HAL 또는 LL 드라이버를 사용하여 비동기 모드에서 기본적인 송수신 코드를 작성할 수 있습니다.

>> 집청소 다시하기.. 이어폰 끝부분 안보인다.



우분투 - Windows WSL device usb
  https://blog.golioth.io/usb-support-in-wsl2-now-with-a-gui/
  https://marketplace.visualstudio.com/items?itemName=thecreativedodo.usbip-connect




----------------------------------------------
Temp
  ⚓ C++ language reference ; https://learn.microsoft.com/en-us/cpp/cpp/cpp-language-reference
    ⚓ Welcome back to C++ (Modern C++) ; https://learn.microsoft.com/en-us/cpp/cpp/welcome-back-to-cpp-modern-cpp
    # Built-in types
      ⚓🚣 Data type ranges ; https://learn.microsoft.com/en-us/cpp/cpp/data-type-ranges
    # Statements
    ⚓ Namespaces ; https://learn.microsoft.com/en-us/cpp/cpp/namespaces-cpp
    ⚓ Enumerations ; https://learn.microsoft.com/en-us/cpp/cpp/enumerations-cpp
    ⚓ Unions ; https://learn.microsoft.com/en-us/cpp/cpp/unions

    ⚓ Arrays ; https://learn.microsoft.com/en-us/cpp/cpp/arrays-cpp

  ⚓ C Docs ; https://learn.microsoft.com/en-us/cpp/c-language
    ⚓ C language reference ; https://learn.microsoft.com/en-us/cpp/c-language/c-language-reference
      # Elements of C
      # Program structure
      # Declarations and types
      # Expressions and assignments
        # C operators
          ⚓ C operators ; https://learn.microsoft.com/en-us/cpp/c-language/c-operators
          # C additive operators
            ⚓💡 Pointer arithmetic ; https://learn.microsoft.com/en-us/cpp/c-language/pointer-arithmetic

      # Statements
      # Functions
      # C language syntax summary
      # Implementation-defined behavior
      # C/C++ preprocessor reference


    ⚓ C runtime library (CRT) reference ; https://learn.microsoft.com/en-us/cpp/c-runtime-library/c-run-time-library-reference
      # Function family overviews
        ⚓🚣 Format specification syntax: printf and wprintf functions ; https://learn.microsoft.com/en-us/cpp/c-runtime-library/format-specification-syntax-printf-and-wprintf-functions#flags
        ⚓🚣 Format specification fields: scanf and wscanf functions ; https://learn.microsoft.com/en-us/cpp/c-runtime-library/format-specification-fields-scanf-and-wscanf-functions
          ... White-space characters: blank ( ); tab (\t); or newline (\n). A white-space character causes scanf to read, but not store, all consecutive white-space characters in the input up to the next non-white-space character.
      # CRT alphabetical function refernce
        ⚓ _countof Macro ; https://learn.microsoft.com/en-us/cpp/c-runtime-library/reference/countof-macro


        ⚓ scanf_s, _scanf_s_l, wscanf_s, _wscanf_s_l ; https://learn.microsoft.com/en-us/cpp/c-runtime-library/reference/scanf-s-scanf-s-l-wscanf-s-wscanf-s-l
          ... Unlike scanf and wscanf, scanf_s and wscanf_s require you to specify buffer sizes for some parameters. Specify the sizes for all c, C, s, S, or string control set [] parameters.
        ⚓ div, ldiv, lldiv ; https://learn.microsoft.com/en-us/cpp/c-runtime-library/reference/div

  C언어
    이식성을 갖춘 프로그램을 만들 수 잇다.
    함수 사용 가능.. ISO/IEC 9899:1999 -> C99 .... 버전 23 찾기 .
  임베디드는 특수목적. <-> 범용
    하드웨어를 제어하는 드라이버를 만드는 것.
  Source file -> Preprocess -> Compile -> object file? 파일? -> 링크... Soulution build 안에 포함되나?.. -> Debugging.. -> 실행 파일 작성.
    개체파일은 CPU가 해석할 수 있는 instructino 들로 이루어진 기계어 파일이지만, 바로 실행하는 것은 불가능??.
    운영체제에 의해서 실행되므로 설치된 운영체제에서 인식할 수 있는 형태의 실행 파일로 바꿔야 한다.
    포인터는 메모리 주소 제어 떄문에 사용한다.
    Win32bit 7 -> 4Gvb 밖예 사용을 못햇엇음.. 2^32 = 4GB. 32비트가 물리적인 길이.
  메모리의 최소 단위는 1 Byte
    0x01 0x02 0x03 ... 
    메모리 주소는 고유하고 연속적. 
    RAM: Random! 접근시간 동일, 임의로 접근 가능. 주소가 있기 때문.

Book
  C++ 시작  
    컴퓨터와 프로그래밍
      🆚 기계어 Machine language, 어셈블리어.. 니모닉 기호 (mnemonic symbol),  
      소프트웨어는 CPU가 이해할 수 있는 일련의 명령들과 데이터로 구성되어 CPU는 이 명령을  실행하여 요구된 기능을 수행한다.

    컴파일->링킹->;.. 목적 파일 관련해서 ..
    `컴파일.. 전처리기.. 해더 파일의 확장..; #include 문이 있던 그 자리에 삽입..
      컴파일 후 생성된 object file 은 라이브러리에 대한 참조 표시만 있을 뿐 코드를 포함하지 않아서 결합되도록 한다.
      ??? 링킹이 항상 "실행 파일"을 만드는 과정?은 아니지 않나. .lib 도 실행파일인가??
        어떤 목적 파일이 참조하는 c++ 표준 라이ㅡㅂ러리나 다른 목적 파일 속에 있는 함수 ,객체, 데이터를 포함하여 실행에 필요한 모든 기계어 코드를 확ㅇ보하여, 하나의 실행 파일로 만드는 과정
      목적 파일은 윈도우에서는 .obj 이며 유닉스는 .o 를 사용한다. 실행파일은 윈도우에서는 .exe 이며, unix-like 에서는 정해진 확장자가 없다!🚣
      디버깅이란? 프로그램 내 오류 위치를 발견하거나 문제의 원인을 찾아 수정하는 과정.// beakpoint..  . 실행파일 실행할떄 나타나는 오류 발견/수정 과정이 아님!
      
    C++ 표준 -> ISO/IEC14882 
    🆚 C, C++
      C언어와의 호환성; C언어의 문법척 체계를 그대로 계승. C언어로 작성되어 컴파일된 목적파일과 라이브러리를  C++ 에서 링크하여 사용 가능
      객체 지향 개념 도입
        Default parameter, Reference
        generic
        new, delete

        ❔OOP: 실제 세상과 가깝게 모델링하기 위해, 응용에 필요한 물체(객체)를 모델링하고, 이들 간의 관계, 상호작용을 표현하는 프로그래밍 기법
        특징 OOP 🗺️
          Capsulation : 데이터를 캡슐로 감싸서 외부의 접근으로부터 데이터를 보호
            namspace
          Inheritance:: 자식이 부모의 유전자를 물려받는 개념.
          📍 Polymorphism: 하나의 기능이 경우에 따라서 서로 다르게 보이거나 다르게 작동하는 것???
            Function overloading, Operator overloading
          Generic: ... template.. 📰
      엄격한 타입 체크.
    C++ 라이브러리를 구성하느 ㄴ헤더 파일들
      STL library: alg`orithm, complex, exception, list, stack, bitset, locale, stdexcept, functional, map, memory, string, numeric, typeinfo, utility, queue, valarray, iterator, set, vector, deque, limits
      new (STL에 포함되지 않은 기타 기능 구현?)
      C++ 입출력 라이브러리: fstream, strstream, streambuf, iomainip, ios, iosfwd, iostream, ostream, istream
      C 라이브러리: csetjmp, cassert, csignal, cctype, cstdarg, cerrno, cstddef, cfloat, cstdio, ciso646, cstdlib, climits, cstring, clocale, ctime, camth

  C++ 프로그래밍의 기본
    🆚 주석문 (Comment).. annotation
    📍 표준 C++ 파일은 확장자가 없고, c++ 표준에서 지원되는 모든 라이브러리는 std 이름 공간 안에 구현되어있다.
    🆚 #include < >  vs.  #include " "
    ❓ 헫 ㅓ파일에는 무엇이 들어ㅡ있나?.. e.g. string 객체를 사용하려면 string.h 를 include 하는데, string 정확히는 함수의 코드가  들어가 잇는것ㅇ ㅣ아니다? 이미 컴파일된 기계어 형태로 들어가잇는것??.. 이거는 C 라이브러리에만 해당되는건가? <cstring> strcpy()?
      헤더 파일에 선언된 객체들?
    c++ 에서는 int main() 에서는 에외적으로 return 문을 생략할 수 있도록 하였다? return 0; 가 기본값인듯.>
    std::cin, std::cout, std::endl
      <<: 🪱 stream insertion operator 오른쪽 피연산자 데이터를 🪱 왼쪽 스트림 객체에 삽입.. <iostream> 헤더 파일에 연산자가 재정의됨. 여러 개를 쓸 수 있다. std::cout << "Hello" << ": Hi"; // (근데 성능 문제 있는것으로 앎.)
        
        std::cout '\n'; 문장은 << 연산자가 '\n' 문자를 cout 의 🪱 스트림 버퍼에 단순히 삽입하고 끝난다. 그 후 cout 스트림 버퍼가 꽉 차거나 강제 출력 지시가 있는 경우 🚣 cout은 'n' 을 해석하여 다음 줄로 넘긴다.
        std::endl; 은 '\n' 을 스트림 버퍼에 넣고, cout에게 현재 스트림 버퍼에 있는 데이터를 즉각 장치에 출력하도록 지시한다. endl을 사용하면 커서를 다음 줄로 넘기는 것고 ㅏ동시에 현재 cout의 스트림 버퍼에 있는 모든 데이터를 출력시킨다.
      >>: cin.. 표준 입력 스트림인 >> 연산자. 🪱Stream Extraction operator
        cin >> coffee >> num; // 처럼 한 줄에 가능
      cin.getline() 공백이 포함된 문자열 입력
      문자열 입력방법
        C-string
        #include <string.h> // string class
    #include <iostream>..
    ❓ Boolean 값을 1, 0 이 아닌 "true", "false" 문자열로 출력 방법?
    ❔ namespace.. 이름공간.. identifier... scope 와 관련해서 설명하기. https://learn.microsoft.com/en-us/cpp/cpp/namespaces-cpp?view=msvc-170
      충돌을 막기 위해.
      using diretives ; https://learn.microsoft.com/en-us/cpp/cpp/namespaces-cpp?view=msvc-170#using_directives
    ⚓📍Keywords ; https://learn.microsoft.com/en-us/cpp/cpp/keywords-cpp?view=msvc-170
      using
    Operators
      Scope resolution operator: :: ; https://learn.microsoft.com/en-us/cpp/cpp/scope-resolution-operator?view=msvc-170
    
    실행문 중간에 변수를 선언하는 방식
      사용하는 코드 바로 위에 변수를 선언할 수 있어 코드를 읽기 쉽게 만든다.
      선언된 변수들이 코드 사이에 흩어져 있으므로 선언된 모든 변수를 한 눈에 보기 어렵다.
    🚣 C언어에서 전역 변수는 상수로만 초기화 가능.. C++ 에서는?     
    C++ 초기화 방법. Foo bar(arguments...)
  # Classes and structs
    🆚 객체, 클래스, 인스턴스
      클래스는 객체를 정의하는 틀 혹은 설계도.: 붕어빵 틀과 붕어빵과의 관계와 비슷하다.
      객체는 멤버 변수 메모리, 멤버 함수 코드를 실제 카지고 실체화된 데이터 구조나 개체.
        객체 = 인스턴스. 인스턴스는 어떤 클래스의 구현체인지를 강조할 때 사용되는 용어
      
      클래스 정의 시
        클래스 자체의 클래스의 코드(메서드, 클래스 변수 등)는 메모리에 로드되지만, 이는 객체 생성과는 별개로 프로그램 전체에서 공유됩니다.
      객체 생성 시
        객체가 생성되면 그 객체의 인스턴스 변수를 저장하기 위한 메모리가 할당된다. 클래스의 크기만큼 메모리가 할당되는것이 아님!
    객체들은 서로 정보를 교환하고 통신하기 위해 일부 요소의 공개 노출이 필요할 수 있따.: TV on/off button, 밝기 조절, 채널 조절, 음량 조절 등. 사람도 귀 눈, 코 등.
    객체는 🪱 State (상태), 행동 (behavior) 으로 구성된다.
    선언부와 구현부로 나뉜다: class delcaration, class implementation
      🚣 !! 이를 분리하는 이유는 클래스의 재사용을 위함. . 클래스를 사용하고자 하는 다른 c++ 파일에서는 컴파일 시 클래스의 선언부만 필요하기 때문.
    함수 사용 이유.. 재사용성을 위함
      📰 위임 생성자에서는 이니셜라이저 리스트에 다른 생성자 호출 외에 멤버 초기화를 포함할 수 없다는듯?
      Delegating constructors
        자신의 코드를 실행하기 전 위임생성자를 호출함.
      소멸자 필요 이유:
        객체가 소멸할 때, 동적으로 할당받은 메모리를 운영체제에 돌려주거나, 열어 놓은 파일을 저장하거나 닫거나, 연결된 네트워크를 해제하는 등 객체가 사라지기 전에 필요한 조치를 하도록 하기 위함.
        소멸자는 리턴 타입이 없고 어떤 타입도 리턴해서는 안된다.
        객체 소멸 순서: 지역 객체 -> 전역 객체
        ⚠️ 특히 얕은 복사에서 포인터타입이 있는 경우. char* name 을 동적할당할 경우, 멤버 변수 포인터가 그대로 복사되므로 객체 소멸 시 이미 소멸된 변수의 메모리를 반환하려는 오류가 발생할 수 있으니 주의해야 함.
          사용자 복사 생성자를 생성해서 새로 동일한 길이만큼 new ~ 및 strcpy 를 this->name 에 할당해야 한다.
          🚣 복사 생성자 호출 시기: 객체 초기화하여 생성될 때, 값에 의한 호출로 객체가 전달될 때ㅐ, 함수가 객체를 리턴할 때

      생성자의 목적은 객체가 생성될 때 필요한 초기작업을 하기 위함.
      생성자 함수는 오직 한 번만 실행되고, 생성자 함수의 이름은 클래스 이름과 동일하게 작성되어야 한다.
      생성자 함수의 원형에 리턴 타입을 선언하지 않음.
      📰 속도 벤치마킹 필요: Initializer list constructors
      위임 생성자는 속도 향상과 관련 없다는 듯.
  객체 포인터와 객체 배열, 객체의 동적 생성
    객체 배열 선언문은 오직 매개 변수 없는 기본 생성자를 호출한다. 소멸 시, 높은 인덱스부터 원소 객체가 소멸된다.
    💡 동적 메모리 할당. new, delete
    news 로 배열 동적 할당을 때 생성자를 통해 직접 초깃값을 지정할 수 없다.
    ?매개 변수 없는 생성자 호출..
      Circle waffle;  // o
      Circle waffle();  // x. waffle 을 함수로 인지함.
    그러나 다음 두 라인은 문제없다.
    Circle *p = new Circle; // o
    Circle *q = new Circle(); // o

    ⚠️ Memroy leak
      char n = 'a';
      char *p = new char[1024];
      p = &n;
    
    Design pattern.. ?  현재 객체의 주소를 리턴하는..
    public:
      Smaple* f(){
          ...
          return this;
      }
    내부 컴파일러에 의해 this 가 묵시적으로 멤버 함수에 포함된다.
      public:
        void setA(int x)
      -->
      public: // 묵시적으로 삽입된 매개 변수.
        void setA(Sample* this, int x)
    string class
      >> 으로 문자열 입력 가능.

  함수와 참조, 복사 생성자
    값에 의한 호출로 객체를 전달하면, 함수 내부에서는 복사 생성자가 호출되고 이후 소멸자만 실행되도록 컴파일된다고 함.
    📍 참조 리턴
      1.
        char c = 'a';
        char get() {  // char 값 리턴
          return c; // 변수 c의 값 리턴
        }
        char a = get(); // a = 'a' 가 됨.
        get() = 'b'; // 컴파일 오류
      2.
        char c = 'a';
        char& find() { // char 타입의 참조 리턴
          return c; // 변수 c 에 대한 참조 리턴.
        }
        char a = find(); // a = 'a' 가 됨.
        char &ref = find();   //ref 는 c 에 대한 참조.
        ref = 'M';  // c = 'M'
        find() = 'b'; // c = 'b' 가 됨.
    객체 치환 시 모든 데이터가 🚣 비트 단위로 복사된다. Assignment?
  함수 중복과 static 멤버
    묵시적 형 변환으로 인해 int형과 실수형 간의 함수 오버로딩에서 모호성에 의해 컴파일 오류가 발생할 수 있다.
    reference 형 변수, default 변수로 인해서도 발생 가능함.
    static
      static 멤버 함수는 객체가 생성되지 안ㅇ흔 어떤 시점에서도 호출될 수 있고, 클래스 이름으로 직접 호출될 수 있기 때문에, static 멤버 함수에서 non-static 멤버에 접근하는 것은 허용되지 않는다.
  프렌드와 연산자 중복
    friend 클래스의 멤버 함수로는 적합하지 않지만, 클래스의 private, protected 멤버를 접근해야 하는 특별한 경우 사용.
    --- 각 연산자 중복 어떻게 구현할 지 생각해보기. 전위, 후위 연산자나. <iostream> 의 cout 의 << n
  상속
    🚣 기본 클래스의 생성자가 파생 클래스의 생성자보다 먼저 실행된다.
    💡 기본적으로 파생 클래스는 생성자 호출 시 기본 클래스의 기본 생성자를 호출한다. 명시적으로 지정하고 싶으면, : ... 으로 위임해야 한다. 컴파일러가 묵시적으로 삽입하지 않도록.
    🚣 iostream, ostream 도 virtual public ios 를 상속받고, class iostream 은 istream, ostream 을 상속받는다.
    e.g.
      Product
      └ Book
        └ ConversationBook
      └ CompactDisk

      AirlineBook
        └ Schedule
          └ Seat
        └ Console

      

  가상 함수와 추상 클래스
    가상 함수는 상속받는 파생 클에서 구현해야 할 일종의 함수 인터페이스를 제공. 
      컴파일러의 Dynamic binding. 실행 중에 객체 내에 오버라이딩한 가상 함수를 동적으로 찾아 호출한다.
        = run-time binding. late binding ?; 오버라이딩된 함수가 무조건 호출됨.
        !! 동적 바인딩은, 파생 클래스 객체에 대해, 기본 클래스의 포인터로 가상 함수가 호출될 때 일어난다.; 업캐스팅?
    ; 오버라이딩 시 virtual 지시어를 생략해도 자동으로 virtual 로 간주된다.
    vs. 정적 바인딩 // 사용예씨.

    Scope rule; 동일한 identfier (이름)의 변수나 함수가 여러 곳에 선언되어 있을 때 가장 안쪽에 속하는 선언된 이름을 사용하는 규칙.

    !! 가상 소멸자.; 파생 클래스의 객체가 기본 클래스에 대한 포인터로 delete 되는 상황에서도 정상적인 소이 되도록 하기 위해서.
    오버라이딩: 런타임 다형성. 오버로딩: 컴파일 시간 다형성.
    * 동적 바인딩이 제대로 되었는지 확인하는 패턴?
      Shape * p = pStart;
      while(p != NULL) {
        p->paint();
        p = p->getNext();
      }
    // p.paint() p.getNext(), p.add(), Shape *pStart , Shape *pLast 로 연결 리스트를 만드는 예시코드.

    순수가상함수? pure virtual function
      >> 설계와 구현을 분리할 수 있다. 계층적 상속 관계를 가진 구조를 만들 때 적합
      추상클래스를 상속받는 파생 클래스는 추상함수를 구현하지 않으면 자동으로 추상 클래스가 된다. (순수 가상 함수 상속받기 떄문).
      추상클래스는 불완전한 클래스.
      파생 클래스가 온전한 클래스가 되려면 추상 클래스의 구현을 해야 한다.
        //
      추상 클래스에 대한 포인터 생성 불가.

    함수 오버라이딩 조건
      virtual? 컴파일러에게 자신의 대한 호출을 실행 시간까지 미루도록 한다.?
      시그니쳐 일치.
      상속 DEFAULT 규칙.
        소멸자, ...
        
    구현 예시:
      Printer - 잉크젯 프린터, 레이저 프린터.
      GraphicEditor - Shape - ...
      abstract class Compareable ... Shape 에 대해서.
  템플릿과 표준 템플릿 라이브러리
    템플릿은 타입이나 값에 의존적인 코드를 일반화하여, 여러 타입이나 값에 대해 재사용 가능한 코드를 작성할 수 있게 해주는 
    🆚 #define, template
      매크로는 복잡한 함수나 클래스는 표현하는 데 한계까 있으며, 타입 안정성이 확보되지 않아서, side-effect 를 초래할 가능성이 높다.
      반면에 템플릿은 정적 타입 검사를 한다는 장점
    🚣 "new" 를 동적 생성하여 스택에 .add(new Point(10, 20)) 이런 식으로도 넣을 수 있다.
    Standard Template Library; STL
      container; 데이터를 검색하고 담아둘 수 있는 자료구조를 구현한 클래싀.
      🆚 vector, list
        vector: 가변 크기의 배열을 일반화한 클래스 (동적 배열). 파이썬의 list 와 유사. 원소를 맨 뒤에서 추가하거나 삭제하는 작업이 O(1)
        list: 임의의 위치에서 빠른 삽입/삭제가 가능한 이중 연결 리스트 클래스
      📰🆚 .at(), indexing operator []
        인덱스 범위를 벗어나도 오류가 발생하지 않고, 정의되지 않는 동작을 초래할 수 있다 ?? (Undefined Behavior)
        .at 은 인덱스 범위를 벗어날 경우 std::out_of_range 예외를 던져서 오류를 처리할 수 있도록 한다.
      erase(iterator it) // 🚣  iterator 가 가리키는 원소 삭제, 삭제 후 자동으로 벡터 조절.
        vector 의 중간 원소를 삭제했을 때 vector 는 메모리가 연속적으로 위치해야 하는데 이 내부과정은 vector 내부에서 이루어진다.
      insert(iterator it, element)  // 벡터 내 it 위치에 element 삽입.
        map, set
          make_pair()
          /// find() 있나? 못찾았을 경우 뭘 반환하지?
          insert(pair <> &element)
          operator[key_type& key]()
          operat=()
      Iterator: 컨테이너의 원소들을 순회 접근할 수 있는 클래스.


  C++ 입출력 시스템
    stream: 연속적인 데이터의 흐름 혹은 데이터를 전송하는 소프트웨어 모듈.
    c++ 에서는 입력 스트림, 출려 스트림으로 나뉨.
      입력 스트림: 키보드, 네트워크, 파일 등 입력 장치로부터 입력된 데이터를 순서대로 프로그램에 전달하는 "객체"
      출력 스트림: 프로그램에서 출력한 데이터를 프린터나 하드 디스크, 스크린, 네트워크, 파일 등과 같은 목적 장치로 순서대로 보내는 객체.
    c++ 응용 프로그램은 출력 장치에 직접 출력하는 대신, 출력 스트림에서 출력하고, 입력 장치로부터 직접 입력받는 대신, 입력 스트림으로부터 입력 받는다.
      표준 입력 스트림 객체는 cin, 표준 출력 스트림 객체는 cout.
    각 객체는 "버퍼"를 가진다.
      입력 스트림 버퍼는 입력된 데이터를 프로그램에 전달하기 전에 일시 저장하는 공간이며, 출력 스트림 버퍼는 출력 장치로 보내기 전에 데이터를 일시 저장하는 공간.
      Backspace.. 버퍼에서 가장 최근된 입력 데이터를 지우는 제어키 역할.
      Enter ...
    cout.flush(). 출력 스트림은 버퍼에 있는 데이터를 모두 장치에 출력.
    ❔📰 버퍼가 없으면, OS kernel 단의 파일 입출력이 잦아져 시스템 효율이 나빠진다.
    🆚 저수준 입출력 방식. vs 버퍼가 있는 방식. (버퍼가 없는 방식)
    문자를 한 바이트로만 다루는 클래스 (2바이트로 구성되는 문자를 읽을 수 없음):
      iostream, ifstream, ofstream, fstream 
    한 문자를 여러 바이트로 표현하는 다국어의 입출력
      basic_ios, basic_iostream, basic_ifstream, basic_ofstream, basic_fstream
    istream
      int get() // 입력 스트림에서 문자를 읽어 리턴. 오류나 EOF 를 만나면 -1 EOF 리턴.
      istream& get(char& ch)  // 입력 스트림에서 문자를 읽어 ch에 저장. 현재 입력 스트림 객체(*this) 의 참조 리턴. 오류나 EOF 르 만나면 스트림 내부의 오류 플래그(failbit) 세팅.
      istream& get(char* s, int n)  // 스트림으로부터 문자열 읽어서 배열 s 에 저장. EOF 를 만나거나 오류가 발생하면 읽기를 중단하고, '\0' 를 배열에 삽입하고 리턴한다.
      ⚠️ // 한글 문자열을 위해 get(char* strl, int n) 함수를 호출해서 문자 개수의 2배의 크기의 배열을 str 에 넘겨주면 한글 문자열을 읽을 수 있다. get() 는 2바이트 구성되는 한글 문자 못읽음.
      istream& get(char* s, int n, char delim='\n')
      istream& getline(char* s, int n, char delim='\n') // ❓ 위와 동일하지만 dlim 에 지정된 구분 문자를 스트림에서 제거한다는 차이.
      istream& ignore(int n=1, int delim=EOF) // 제거 도중 delim 문자를 만나면 delim 문자레르 제거하고 리턴.
    C와 마찬가지로 마찬가지로 버퍼에 남은 "\n" 문자에 주의해야 함.
    insertion operator (<<) overloading; 스트르림에 데이터를 출력하기 위해 ostream 클래스에 작성된 연산자.
      operator overloading. ostream& operator << (ostream& stream, Book a) {return stream} ...  
        //❓ friend 키워드를 사용해서 외부함수로 작성해야 사용 가능하다.
      operator overloading. ostream& operator << (ostream& stream, Book a) {reurn *this} ...
      e.g. cout << book
    // extraction operator (>>) overloading; 스트림으로부터 데이터를 입력받기 위해 istream 클래스에 작성된 연ㅅ나자
      operator overloading. istream& >> (istream& ins, UserCalss& obj);
    ostream& ostream::operator << (ostream& (* _f)(ostream&)) {
      (*_f)(*this); // *this is cout. call (*_f) function, which is the manipulator
      return *this;
    }
    //❓ 원형이 (ostream& stream, Point a) {reurn *this} 이런거였는데 인수가 달라도 되나보네? 인수가 포인터일 경우? 함수일경우? 오버로딩하느 ㄴ것인가?
    사용자 조작자
    istream& manipulatorFunction (istream&^ ins)
    ostream&^ manipulatorFunction (ostream& outs)
    e.g.
      string answer;
      cin >> question >> answer;
      istream& question(istream& ins){
        cout << "거울아 거울아 누가 제일 예쁘니?";
        return ins;
      }

        
  C++ 파일 입출력
    기록되는 데이터는 데이터의 종류에 따라 텍스트 파일과 바이너리 파일로 나뉜다.
      텍스트 파일: letter/character (글자/문자) 만으로 구성되는 문서 파일. 🆚 letter 은 알파벳 문자로 한정된 개념. character 는 모든 기호를 포함하는 더 넓은 개념???
        사용자들이 사용하는 글자에는 각 기호/글자마다 고유한 바이너리 코드(이진 코드)가 주어진다. e.g. ASCII 코드 (1바이트), Unicode (2바이트~)
        e.g. 파일의 마지막 부분의 1961에서 '1'은 문자로서 0x31로 저장. 0x01로 저장되지 않음.
          ⚠️ 텍스트 파일은 문자들만 다루는 파일이기 때문. 문자 코드가 아닌 어떤 값도 존재할 수 없다.
        line feed, carriage return.
      바이너리 파일: 이미지, 오디오, 그래픽 이미지, 컴파일된 코드와 같은 문자로 표현되지 않는 바이너리 정보들을 저장하는 파일.
        바이너리 파일의 각 바이트는 다르게 해석될 수 있다.
          jpeg, mp 등의 이미지 파일
            mp3 등의 오디오 파일
              hwp, doc, ppt 등의 확장자를 가진 멀티미디어 문서 파일. // 📝 hwp 는 문서/텍스트에 대한 포매팅을 제공하기 때문에 텍스트 파일이 아니다.
                obj, exe 등의 확장를 가진 컴파일된 코드나 실행 파일.
    https://en.cppreference.com/w/cpp/io 
      파일을 프로그램과 연결하는 스트림: ifstream, ofstream
      ifstream  // 파일 읽기 시 사용
        get(); 스트림이 키보드에 연결되어 있따면 키보드에서 문자 하나를 읽고, 스트림이 파일에 연결되어 있따면 파일에서 문자 하나를 읽음.
          ㅍ한 바이트를 읽고 파일 포인터를 다음 바이트 위치로 전진시킨다. 이후 eof 함수를 호출하는데파일 끝에 도달하면 -1 을 리턴한다. ??
        eof();  // eofbit 플래그의 값이 1인지만 확인하여 리턴하므로 while(!fin.eof()) 이런 식으로 코드를 짜면 안된다. -1 도 true 이기 때문.
      ofstream; 파일 쓰기 시 사용
      fstream ; 하나의 파일에 대해 읽기와 쓰기를 동시에 할 때 사용
      getline(), put(), read(), write()
    fout.open()
      // if (!fcout) ... 파일 열기 성공 검사. or fout.is_open()
      파일명 존재하는지, 작성에 필요한 충분한 디스크 공간, 읽기 전용 파일에 쓰기를 하는지, 접근 금지 파일을 읽고자 하는지 등에 대한 검사를 하는 과정.
      void open(const char * filename, ios::openmode mode)
    🚣 // "<<" 연산자를 이용한 파일 쓰기. ofstream fout("file_path"); //default open mode 가 text 모드인듯?
    fout.close()
      파일 열기 시에 구성한 자료 구조를 해제??? 하여 읽기/쓰기를 끝내는 작업. 버퍼에 남아있는 데이터를 물리적으로 장치에 기록하는 마무리 작업도 포함.
    🚣 // ">>" 연산자를 이용한 텍스트 파일 읽기.
    file mode // 여러 개를 동시에 사용할 때 💡 OR 연산자 | 를 사용하면 된다. e.g. ios::out | ios::app | ios::binary
      ios::in
      ios::out
      ios::ate  // at end. 쓰기 위해서 파일을 열고 열기 후 파일 포인터를 파일 끝에 둔다.
      ios::app; // 파일 쓰기 시에만 적용된다. 파일 쓰기 시마다, 자동으로 파일 포인터가 파일 끙트로 옮겨져서 항상 파일의 끝에 쓰기가 이루어진다.
      ios::trunc // 파일을 열 때, 파일이 존재하면 파일의 내용을 모두 지워 파일의 크기가 0인 상태로 만든다. ios::out 모드를 지정하면 default 값이다.
      ios::binary // 이 파일모드가 지정되지 않으면 디폴트는 text i/o mode.
    파일 포인터를 파일 내에 읽거나 쓸 위치를 가리키는 특별한 마크.
    fbinout.write(buf, 128) //..
    // ❔ ios::app 로 텍스트 파일을 다른 파일에 덧붙여 써보기

    라인 단위로 읽기.
      istream getline(char* line, int n)
      👍 getline(ifstream& fin, string& line)
    binary i/o: 파일의 각 바이트를 바이너리 값 그대로 읽거나 변수나 버퍼의 바인너리 값을 그대로 파일에 저장하는 raw level (저수준?) 입출력ㅂ ㅏㅇ식.
    🚣 텍스트 파일은 I/O 나 바이너리 I/O 로 읽고 쓰는 것이 둘 다 가능하지만, 바이너리 파일은 반드시 바이너리 I/O 를 사용해야 한다.
      🚣 1 바이트 단위로 입출력
        get(), put() 으로 바이너리 입출력 가능.
          // 소스 파일에서 목적 파일로 복사하기.
          int c;
          while((c=fsrc.get()) != EOF){
            fdest.pupt(c)
          }
      👍 Block 단위로 입출력.
        istream& read(char* s, int n)
        ostream& write(cahr* s, int n)
        int gcount()
        🛍️ e.g.
          char buffer[100];
          // 파일을 읽는 도중에 실패하거나 끝에 도달할 때까지 반복
          while (fin.read(buffer, sizeof(buffer))) {
              // 데이터를 처리하는 코드
          }

          // 마지막에 읽은 데이터가 파일의 끝에 도달했는지 확인
          if (fin.eof()) {
              cout << "End of file reached." << endl;
          } else if (fin.fail()) {
              cerr << "Error occurred while reading the file!" << endl;
          }

          fin.close();
    📍 직렬화를 할 때, 부동소수점 같은 복잡한 데이터를 정확하게 직렬화하기 위해서는 binary 모드를 사용해야 한다.
    ❓ text/io, binary i/o 는 '\n' 을 읽고 쓸 때 서로 다르게 작동한다?; get(), put()
      put(); 출력: '\r', \n' 두 문자가 기록된다.
      get() 입력: '\r', \n' 두 문자를 읽고 '\n' 하나만 리턴한다.
    stream state
      member function
        eof()
        faizXar() // 스트림 상태 변수를 0으로 지움.
      
      Sequential file access // default. ? 용어...ㄴ
      get, put 모두 읽은/쓴 바이트 수만큼 파일 포인터 진전시킴.
  예외 처리와 C 언어와의 링크 지정
    예외 처리 방법
      조건문/매개변수를 이용하는 예외 처리
      리턴 값을 이용하는 예외 처리
    Exception. 예상치 못한 상황 발생을 예외.
    try-throw-catch ; https://learn.microsoft.com/en-us/cpp/cpp/try-throw-and-catch-statements-cpp?view=msvc-170
      trhow 3.5 이런식으로 double 형 예외도 던질 수 있긴 하다.
      다수의 catch() {} 블록 가능.
      예외 전파 >>> ❓ propgation.. 외부에 계속 전파.
      ❓⭕함수 선언 시, trhow(~) 로 어떤 예외를 발생시켜주는지 컴파일러에게 알릴 수 있다. 프로그램의 작동을 명확히 하여 가독성을 높인다.
    ⭕ 예외 클래스 만들기.. 패턴 있엇는데
      MyException{
        int lineNo;
        string func, msg;
        ...
      }
      class DividedByZeroException: public MyException {
        public:
        DividedZeroException(int lineNo, string func, string msg): MyException(lineNo, func, msg) {}
      }
    💡 C 컴파일러에서는 소스도크를 컴파일하여 목적 코드 obj 파일을 만들 때 함수 이름 앞에 밑줄표시문자를 붙인다.
      int f(int x, int y)
      int main()
      --> 
        _f
        _main
      때문에 C언어에서 함수 오버로딩이 불가능하다.
    C++ 컴파일러는 목적 코드를 만들 때, 함수의 매개 변수 개수와 타입, 리턴 타입 등을 참조하여 복잡한 기호를 포함하는 이름으 붙인다.
      >> ❓ 이름 규칙. name mangling 에는 표준이 없다!! 
    C, c++ 의 이름 규칙이 다르기 때문에, c++ 에서 C 파일을 링킹할 때  C언어로 작성된 것임을 알려야 한다.
      extern "C" int f(int x, int y)
      extern "C" {
        int f(int x, int y);
        void g();
        #include "mycfunction.h"
        // 한 번에 여러 개 선언 가능
      }



[Embedded programming]
*✅🚨  Flexible Numeric Display (FND)'s 4th digit is bright other than 1 ~ 3digit.
  - when: use for-loop statement to display number (it is used in ISP), and +1 _dealy_ms(100).
  - solution: one function must print one digit. so use enum or array with switch-case statement, and accees by using Index. 
  - why: for-loop causes unbalanced displayed time for each digit in FND.

🚨• can not recognize target voltage... JMOD-128-1 : ATmega128(AVR) "board" is problem..

=================================
Preprocessor
  #if, #elif, #else, and #endif directives ; https://learn.microsoft.com/en-us/cpp/preprocessor/hash-if-hash-elif-hash-else-and-hash-endif-directives-c-cpp ... defined() ...
  https://learn.microsoft.com/en-us/cpp/preprocessor/warning
 pragma pack https://learn.microsoft.com/en-us/cpp/preprocessor/pack
  pragmatic, https://learn.microsoft.com/en-us/cpp/preprocessor/pragma-directives-and-the-pragma-keyword 
 cpp...  https://learn.microsoft.com/en-us/cpp/preprocessor/pragma-directives-and-the-pragma-keyword
 #@ https://learn.microsoft.com/en-us/cpp/preprocessor/charizing-operator-hash-at
  # https://learn.microsoft.com/en-us/cpp/preprocessor/stringizing-operator-hash
  ## https://learn.microsoft.com/en-us/cpp/preprocessor/token-pasting-operator-hash-hash

https://learn.microsoft.com/en-us/cpp/c-runtime-library/reference/fseek-fseeki64
  SEEK_SET, SEEK_CUR, SEEK_END
https://learn.microsoft.com/en-us/cpp/c-runtime-library/reference/rewind

https://learn.microsoft.com/en-us/cpp/c-runtime-library/reference/feof

https://learn.microsoft.com/en-us/cpp/c-runtime-library/reference/fclose-fcloseall
  Both

https://learn.microsoft.com/en-us/cpp/c-runtime-library/reference/fopen-wfopen
  A null pointer value indicates an error
Command line argument: *argument count and argv stands for argument values

calloc ; https://learn.microsoft.com/en-us/cpp/c-runtime-library/reference/calloc ... https://stackoverflow.com/questions/31888422/what-does-the-first-c-stand-for-in-calloc

https://learn.microsoft.com/en-us/cpp/c-runtime-library/reference/malloc
  malloc returns a void pointer to the allocated space, or NULL if there's insufficient memory available. NULL!


★ ??? STate diagram... ? https://github.com/StateSmith/StateSmith/
....https://www.google.com/amp/s/blogs.itemis.com/en/advanced-state-machine-modeling-with-entry-exit-final-states%3fhs_amp=true
종료 포인트가 종료 시 어떤 상태를 반환하여 이 값에 따라 처리하고 싶을 때 사용하는듯


https://www.chiark.greenend.org.uk/~sgtatham/coroutines.html

??? C언어 코루틴구현방법?? https://www.chiark.greenend.org.uk/~sgtatham/coroutines.html

int * const ptr  라고한다면 포인터 자신의 값을 변경못하게하는것이고

const int * ptr 이라고 한다면 포인터가 가리키는 대상의 값을 변경하지못하게하고

const int * const ptr 이라고 하면 포인터자신과 자신이 가리키는 대상의값을 둘다 변경할수없다.

이러 문제가..
https://stackoverflow.com/questions/44621553/is-there-a-way-for-countof-to-test-if-its-argument-is-an-array

#define countof(a)  (sizeof(a) / sizeof(*(a)))
The problem with this is it fails silently if the argument is a pointer instead of an array. Is there a portable way to ensure this macro is only used with an actual array by generating a compile time error if a is not an array?

https://en.wikipedia.org/wiki/C_syntax
  Designated initializers



volatile 키워드는 주로 하드웨어 레지스터나 멀티스레드 환경에서 사용됩니다. UART 통신의 경우, 인터럽트 서비스 루틴(ISR)에서 데이터를 수신하고 메인 코드에서 이를 처리할 때 변수를 보호하기 위해 volatile 키워드를 사용하는 것이 일반적입니다. 이는 컴파일러가 해당 변수를 최적화하지 않도록 하여 ISR과 메인 코드 간의 데이터 일관성을 유지하는 데 도움이 됩니다.

하지만 volatile 키워드가 항상 필요한 것은 아닙니다. 예를 들어, 만약 당신이 단일 스레드 환경에서 작업하고 있고 인터럽트를 사용하지 않는다면 volatile 없이도 잘 작동할 수 있습니다. 그러나 대부분의 UART 통신 구현에서는 인터럽트를 사용하기 때문에 volatile 키워드를 사용하는 것이 좋습니다.


모터 드라이버 소리나는것.. 50000 헤르츠~ 사용하는 것이 소리가 안난다고 한다. ㅁㅁ 

https://en.wikipedia.org/wiki/Jump_wire

★ https://code.visualstudio.com/docs/cpp/config-wsl
프리오피스 ! 프레텐테이션 무료; https://www.freeoffice.com/de/

!!! prev !! https://en.wiktionary.org/wiki/prev

https://en.wikipedia.org/wiki/Dynamic_dispatch
 >> 함수형 포인터!

https://en.wikipedia.org/wiki/Nibble .. High nIbble, Low nibble.
Data Structure - Circular buffer ; https://en.wikipedia.org/wiki/Circular_buffer

https://learn.microsoft.com/en-us/cpp/c-runtime-library/reference/va-arg-va-copy-va-end-va-start
★ C23 typeof https://learn.microsoft.com/en-us/cpp/c-language/typeof-c

https://en.wiktionary.org/wiki/RX
https://en.wiktionary.org/wiki/Tx

https://en.wikipedia.org/wiki/Variadic_function

https://en.wikipedia.org/wiki/Learning_management_system

 UART + 프로젝트

PWM.. (Purse Width Modulation)
https://en.wikipedia.org/wiki/Duty_cycle


https://learn.microsoft.com/en-us/cpp/c-runtime-library/reference/sprintf-sprintf-l-swprintf-swprintf-l-swprintf-l

https://stackoverflow.com/questions/459743/is-null-always-false
Yes. NULL evaluates to false, since C considers any non-zero value true and any zero value false. NULL is essentially the zero address and is treated as such in comparisons, and I believe would be promoted to an int for the boolean check. I would expect that your code is readable to anyone familiar with C although I would probably make the check explicit.

In C and C++ programming, two null pointers are guaranteed to comp

7-segment 4 FND (Flexible Numeric  Display) - ? common-Cathode  + common-Anode
https://en.wikipedia.org/wiki/Prescaler

>>> 솔루션 만들 때 가장 먼저? 고려해야하는것.. 에ㅣ시를 보자. [...한 곳에 정리 필요..
. 어디다가..devops 파일 하나 만들고 여기에다가 정리?)● https://en.m.wikipedia.org/wiki/Solution_stack
  ㅡhttps://www.techtarget.com/searchapparchitecture/definition/software-stack
● https://en.wikipedia.org/wiki/Finite-state_machine
  UML state machines; state, transition, transition condition, entry actcion
// ★ 무조건 소스 짤 때 FSM STATE machine .. 그려보기.. 유한 상태 머신. 그림을 그리고 코드로 옮겨야 한다. 이벤트에 의해 상태 변경 시 Context Switching 이 발생한다.

폴링방식 말고 인터러븥 방식을 써아햔다.
https://gyeonghokim.github.io/embedded/interrupt/
Interrupt Sense Contrl: ISC
★ 택트 스위치 버튼 이벤트 처리... ?? 바운스 현상 처리 필요.? 채터링? (Hardware 적으로: 커페시터 1마이크로 패럿 정도 용량을 달아주기 or Software 적으로 또는 눌렀을 때 delay 10ms 정도 줘서 해결할 수 있다고 한다. 디바운싱 시키기)
 https://namu.wiki/w/%EC%B1%84%ED%84%B0%EB%A7%81
?? 인터럽트 처리 필요.
  External Interrupt Control Register (EICR) A ~ C?B?D?
?? pull up 방식으로 하드웨어 구성 vs pull down 으로 하드웨어 구성 방법?
// Delay 함수는 컴파일 시간 동안 루프를 계산하며 컨트롤러에서 동적으로 사용할 수 없습니다/.... https://stackoverflow.com/questions/64850098/how-can-i-fix-this-builtin-avr-delay-cycles-expects-a-compile-time-integer-c


??? C언어 코딩 컨벤션.. 대문자? 소문자?ㅋ ㅏ멜케이스?
Tact Switch. 버튼 스위치.
??? 임피던스?.. 택트 스위치..? 안눌러졌을떄 VCc -> PA 핀으로 1.. 
  ㅇㅎ... 택트스위치를 누르면 회로가 닫혀서 VCC 에서 GND 로 빠지므로 PA 로 가지 않아서 PA 는 값이 0이 된다. ㅇㅇ
/// >> 풀업저항 풀다운저항 방식이라고 한다.
??? 플로팅 현상; 
  버튼이 눌러지지 않았을 때는 왼쪽 다리와 오른쪽 다리가 연결되지 않은 "열린 회로"가 되죠? 그래서 3번핀은 HIGH도 아니고, LOW도 아닌 불안정한 상태가 됩니다. 저희는 이 상태를 플로팅 현상이라고 불러요. (floating). 이를 없애주려고 PORTA = 0xff; 와 같이 준다. ㅣ.. 플로팅 현상으루해결 하기 위한 것이 풀업/풀다운 저항인듯..https://k96-ozon.tistory.com/m/59

AVR .. wiki: The creators of the AVR give no definitive answer as to what the term "AVR" stands for.[3] However, it is commonly accepted that AVR stands for Alf and Vegard's RISC processor
// RISC(Reduced Instruction Set Computer)
// CISC(Complex Instruction Set Computer)
// DDRD: Data Direction Register's port D. DDRC. DDRA .. -> GPIO . Pin. //
   핀은 개발자의 의도에 따라서 핀을 사용할 수 있는 있다는 의미로 다목적 용도의 GPIO(General Purpose Input Output : 범용입출력) 라고도 한다.
... " 53 general purpose I/O lines"

//  https://m.blog.naver.com/crucian2k3/222642389070
- Universal Asynchronous Receiver/Transmitter (UART ) 비동기 병렬 통신 !!! 면접 준비. RS-232 표준  RS-422/485
- I2C (Inter-Integrated Circuit)
- 
- https://en.wikipedia.org/wiki/Serial_Peripheral_Interface
https://en.wikipedia.org/wiki/Electronic_oscillator
 I2C(Inter-Integrated Circuit), UART 통신??, SPI 통신 한다?
 예를들어 SPI 는 4개의 핀을 연결해야 한다. SS* SCK, MOSI, MISO.. 즉 각각의 핀이 역할이 있다고 함.  GPIO 에 더해서 각각의 부가 역할이 있는데 여기에 맞춰서 설치해야 한다.
// 사용중인 보드: https://www.eleparts.co.kr/goods/view?no=528130 JMOD-128-1] ISP다운로더내장 atmega128(AVR) 개발/실습 모델 .. 사양서 여기 안에있음.
>> "Maximum frequency vs. VCC" Safe Operating Area ,참고.
https://learn.microsoft.com/en-us/cpp/c-runtime-library/standard-types
  uint8_t -> unsigned char


// “Register Description for I/O Ports” 86page
  + https://blog.naver.com/85mighty/221139265535
  각각 Data Register, Data Direction Register, Input Pins 를 가지고 있다.
  DDR: 포트의 입출력 방향을 제어하는 레지스터;  만약 특정 핀에 해당하는 DDR 레지스터 값이 1이면 출력 용도로 사용 할 핀임을 의미하며,  반대로 0이면 입력 용도로 사용 할 핀임을 의미합니다.
입출력포트에 필요한 레지스터들 중 출력데이터를 저장하는 레지스터는 DDRx
입력된 데이터를 저장하고 있는 레지스터는 PinX
//  PORT x 레지스터는 읽기/쓰기가 모두 가능하지만 PINx 는 일기만 가능하고 쓰끼가 불가능하다. DDRx 레지스터도 읽기쓰기가 모두 ㄱ능하다.//소프트웨어살 말하는듯?
DDRxn=0: PORTxn=입력 -> 입력된 데이터가 PINxn에 저장됨.
DDRxn=1: PORTxn=출력 -> PORTxn  의 데이터가 출력됨. (N 은 0 또는 1. 0도 출력이다) LED 의 경우 1이면 빛이 난다.
(N은 비트. 핀.)


>>>> Breadboard 사용법 + 깔끔하게 회로 구성하는 방법; .. 핀셋을 사용하지않으면 전건이 자꾸 휘어져ㅜ브레드보드에 끼우기 힘들어진다고 한다..
  선을 적당한 길이로 대략적으로 자른다.
  한쪽 끝단의 피복을 적당히 벗기고 빵판에 구리선을 넣어본다. 잘 들어가면,  반대쪽까지 최대한 직선으로 구성하기 위해 빵판에 피복을 붙여서 어디부터 빵판에 구리선이 들어가야하는지 손톱으로 찍는다. 그리고 다시 빵판에서 이 선을 빼고 반대쪽 피복을 다 벗겨낸다.  많이 벗겨내서 너무 길어도 자르면ㅍ 되기때문에 상관없다.; LED 8개 + 저항 + Character LCD 까지 구성. >> 하드웨어마다도 사양서가 있으니 여기서 사용방법을 찾야아 한다.
// Warning: 피복을 벗길 떄도 플라이어, 피복의 구리선의 양 끝을 수직으로 휘게 할 떄도,  이 구리선을 브레드보드에 넣을 떄도, 뺼 떄도 플라이어를 사용해야 한다. 손으로 하면 구리선이 휘어서 들어가지를 않는다. 플라이어 끝부분의 평평한 부분을 이용.


>>>> MPU (Microprocess Unit)  vs MCU (Micro Controll Unit) ? = MPU 는 CPU 만 내장, MCU 는 CPU + @
https://developerhelp.microchip.com/xwiki/bin/view/products/mcu-mpu/32bit-mpu/differences-between-mcu-and-mpu-development/
    major difference is that MCUs are generally all-in-one devices containing CPU, ALU, programmable Non-Volatile Memory (NVM) (Flash), volatile Static Memory (SRAM), and a host of peripherals (UART, ADC, etc.) in a single package.
...
MPU: 단일 IC칩. 범용목적
MCU: CPU+@. 특수한 목적.

>>> 하버드 vs 폰 노이만 구조 // 면접준비..
 폰 노이만 구조가 모든 프로그램은 메모리에 올려놓아서(Load) 실행된다.
  AVR 은 하버드 구조이다. 프로그램 메모리와 데이터 메모리가 분리되어있다.
https://en.wikipedia.org/wiki/Harvard_architecture
https://en.wikipedia.org/wiki/Von_Neumann_architecture

Atemga 에서 만든 MCU: AVR Atemgea28
 8-bit AVR® RISC-based microcontroller 

MIcrochip Studio 프로그램 - create GCC C Excuetable Project . name GPIO
- ATmega128A 
// general-purpose input/output, GPIO

https://onlinedocs.microchip.com/

준비물: Breadboard Wanjie BB-4T7D -> SMD 타입?
.. 카메라 사진 찍은거 참고..
VEXT: 외부전원. Voltage External?.. 인둣.? (VCC: Voltage Circuit), GND

Breadboard 사용법?
https://www.devicemart.co.kr/mart7/upload/fd_html_img/32749/JMOD-128-1.pdf
회로 구성하고 
+ CP210x_Universal_Windows_Driver 설치

>> Debug 메뉴 - Properties ... 설정하고 메인메뉴의 시작버튼 눌러도 안됨.
Tools - ADd target- Select tool - SKT500 - COM(x); x is driver number from CP210x_Universal_Windows_Driver.
Microchip Studio 에서 솔루션 빌드. -  
Tools - Device Programming Tools -STK500- COm(x) - ATMEga128A - ISP - apply 버튼 - Memories 메뉴 - Flash 파일 선택 (솔루션 빌드한 파일) - Program 버튼 클릭. (>> MCU 내에 프로그램 메모리에 업로드하는 것.).
/ 
// Flash (128 KB) 라고 되어있다. 이름이. Atemga128 인 이유.

Atmega18A 기기에서 ISP/UART 선택 스위치 ISP 로 변경. 
LED 개수 제어: https://deumdroid.tistory.com/entry/ATmega128-LED8%EA%B0%9C%EB%A5%BC-%EC%A0%9C%EC%96%B4%ED%95%98%EA%B8%B0
   >> DDRD = 0b10100000; ㅇㅇ비트  8개 각각 LED 8개 제어.
What is DDRD: https://www.quora.com/What-is-DDRB-PORTB-and-PINB-and-what-do-they-do-What-does-it-mean-if-a-port-or-pin-is-an-output-pin

★ 교재가 이것; atmega128 L datasheet ; https://ww1.microchip.com/downloads/en/devicedoc/doc2467.pdf
   // 여기서 나오는 REgister 가 메모리 저장보다는 데이터를 제어하기 위한 용도에 가깝다고 한다. 검색 필요.
==> 재료를 가지고 요리를 하는 것. 하드웨어 드라이버를 만드는 것.
데이터 시트 = 사양서
 // 면접 ★ 플래시메모리 얼마짜리 램은 얼마짜리 썻나요? 사양 물어봣다고 한다. 그냥 얼마나 깊게 파봣는지 물어봣는듯.
 //  SRAM 
  //Up to 16MIPS Throughput at 16MHz ? MIPS?   // Million Instructions Per Second
    주파수를 낮추면 LED 가 설정한 초에 비해 매우 빨리 깜빡거린다.
    #define F_CPU 16000000UL
 // refer to  "Register Summary"

AVR ATmega128



Try 'uname --help' for more information.
wbfw109@home ~/r/study-_all (main) [1]> uname -a
Linux home 5.15.153.1-microsoft-standard-WSL2 #1 SMP Fri Mar 29 23:14:13 UTC 2024 x86_64 x86_64 x86_64 GNU/Linux

check version for prerequiste
Install USBIPD on WSL
  %pwsh (admin)> winget install --interactive --exact dorssel.usbipd-win
  # A service called usbipd (display name: USBIP Device Host). ...
Restart Powershell
  %pwsh> usbipd list
  usbipd bind --busid <Camera BUSID>
Reboot

⚠️ To attach the USB device, run the following command. (You no longer need to use an elevated administrator prompt.)
  Ensure that a WSL command prompt is open in order to keep the WSL 2 lightweight VM active.
  Note that as long as the USB device is attached to WSL, it cannot be used by Windows.
  Once attached to WSL, the USB device can be used by any distribution running as WSL 2.
  
  Verify that the device is attached using usbipd list.
  From the WSL prompt, run lsusb to verify that the USB device is listed and can be interacted with using Linux tools.
  프롬프트를 닫으면 WSL 2의 가상 머신이 중단될 수 있으며, 이 경우 USB 장치가 더 이상 WSL 2에서 인식되지 않을 수 있습니다. 
  프롬프트를 열고 명령어를 실행한 후에도 계속해서 WSL 2의 가상 머신이 활성화된 상태로 유지되기 때문에, 프롬프트는 계속 열려 있어야 합니다

USB2.0 PC CAMERA가 목록에 표시되면, 카메라가 WSL 2에서 인식된 것이지만, /dev/video* 장치가 없는 경우 OpenCV와 같은 도구에서 사용할 수 없게 됩니다.
https://www.linuxquestions.org/questions/linux-hardware-18/no-dev-video%2A-despite-usb-webcam-being-detected-4175465187/
  Try installing Cheese webcam booth in the Vinux install. It usually adds the required webcam dependencies.


Orders
  1. connect USB into Computer.
    1.1. check It is recgonized by Windows 11
      - in Device Manger
      - in Bluetooth & device - Camera
    1.2. check it is operated well in Camera app in Microsoft Store.
      and exit the app.
  
  2. find BUSID and attach into WSL.
    2.1. find BUSID of a "*USB CAMERA*"
      %pwsh (administrator)>
        usbipd list
      >> e.g. 4-4    1908:2310  USB2.0 PC CAMERA, USB2.0 MIC                                  Not shared
    2.1. share device
      %pwsh (administrator)>
        usbipd bind --busid 4-4

    2.2. attach into WSL
      %pwsh>usbipd attach --wsl --busid 4-4

    2.3. find attached device
      %bash> lsusb

  3. 🚨 https://askubuntu.com/questions/1405903/capturing-webcam-video-with-opencv-in-wsl2
    https://github.com/PINTO0309/wsl2_linux_kernel_usbcam_enable_conf
    Problem
      WSL2에서 USB 장치를 연결하면 lsusb 명령어로는 장치가 보이지만, 실제로는 /dev 디렉토리에 장치가 나타나지 않아서 사용할 수 없다는 문제가 발생합니다.
      이는 WSL2의 기본 커널이 USB 대용량 저장 장치(USB Mass Storage)를 기본적으로 지원하지 않기 때문에 발생하는 문제입니다.

      https://www.reddit.com/r/bashonubuntuonwindows/comments/17chaed/how_to_mount_usb_device_after_installing_usbipdwin/
        >>> Edit: Note that the USB over IP performance is *really* slow, but it does work.
      https://dongle94.github.io/windows/windows-wsl2-use-usbdevice/
        >>> VideoCapture('/dev/video0', cv2.CAP_V4L), VideoCapture('/dev/video0', cv2.CAP_FFMPEG) 등으로 바꿔본 결과 비디오캡처 객체가 영상을 가져올 때 타임아웃 에러를 일으킨 다는 것을 일부 확인
        Timeout Error ...
      
    3.1 check wsl kernerl version     
      https://github.com/microsoft/WSL2-Linux-Kernel/tags

      %bash >
        sudo apt update && sudo apt upgrade -y
        sudo apt install -y \
          build-essential flex bison \
          libgtk-3-dev libelf-dev libncurses-dev autoconf \
          libudev-dev libtool zip unzip v4l-utils libssl-dev \
          python3-pip cmake git iputils-ping net-tools dwarves \
          guvcview python-is-python3 bc

        cd /usr/src
        # --kernel-release.  -d: delimiter. -f1: field 1
        # kernel_version=$(uname -r | cut -d'-' -f1) \
        kernel_version=6.6.36.3 \
          && TAGVER=linux-msft-wsl-${kernel_version} \
          && WINUSERNAME=wbfw1
        sudo git clone --depth 1 -b ${TAGVER} \
            https://github.com/microsoft/WSL2-Linux-Kernel.git \
            ${kernel_version}-microsoft-standard \
          && cd ${kernel_version}-microsoft-standard

sudo cp /proc/config.gz ./
sudo gunzip config.gz
sudo mv config .config
sudo make menuconfig

https://medium.com/software-dev-explore/wsl2-webcam-23c1dc9408ae
# Build WSL2 kernel with usb camera support
# 📝 Device Drivers is in 1 page.  Multimedia support is in 3 page (press 2 page down key)
# 📝 USB support is in 3 page.
# 📝 Network device support is in 2 page.
#   USB Network Adapters is in last page of Network device support .
# 📝 press Y key at Multimedia support cursor.
# 📝 press Y key at <last menu Item>
https://github.com/phuoctan4141/WSL/blob/main/Connect%20USB%20devices/USB%20Camera.md
These are the necessary additional features in menuconfig.
  Device Drivers->USB support[*]
  Device Drivers->USB support->Support for Host-side USB[M]
  Device Drivers->USB support->Enable USB persist by default[*]
  Device Drivers->USB support->USB Modem (CDC ACM) support[M]
  Device Drivers->USB support->USB Mass Storage support[M]
  Device Drivers->USB support->USB/IP support[M]
  Device Drivers->USB support->VHCI hcd[M]
  Device Drivers->USB support->VHCI hcd->Number of ports per USB/IP virtual host controller(8)
  Device Drivers->USB support->Number of USB/IP virtual host controllers(1)
  Device Drivers->USB support->USB Serial Converter support[M]
  Device Drivers->USB support->USB Serial Converter support->USB FTDI Single Port Serial Driver[M]
  Device Drivers->USB support->USB Physical Layer drivers->NOP USB Transceiver Driver[M]
  Device Drivers->Network device support->USB Network Adapters[M]
  Device Drivers->Network device support->USB Network Adapters->[Deselect everything you dont care about]
  Device Drivers->Network device support->USB Network Adapters->Multi-purpose USB Networking Framework[M]
  Device Drivers->Network device support->USB Network Adapters->CDC Ethernet support (smart devices such as cable modems)[M]
  Device Drivers->Network device support->USB Network Adapters->Multi-purpose USB Networking Framework->Host for RNDIS and ActiveSync devices[M]
These are additional features required for the camera.
  Device Drivers->Multimedia support[M]
  Device Drivers->Multimedia support[M]->Filter media drivers[*]
  Device Drivers->Multimedia support[M]->Auto ancillary drivers[*]
  Device Drivers->Multimedia support[M]->Media device types->Camera and video grabbers[*]
  Device Drivers->Multimedia support[M]->Video4Linux options->V4L2 sub-device userspace API[*]
  Device Drivers->Multimedia support[M]->Media drivers->Media USB Adapters[*]
  Device Drivers->Multimedia support[M]->Media drivers->Media USB Adapters[*]->USB Video Class(UVC)[*]
  Device Drivers->Multimedia support[M]->Media drivers->Media USB Adapters[*]->UVC input evnets device support[*]


sudo make -j $(nproc)
sudo make modules_install -j $(nproc)
sudo make install -j$(nproc)

💡 A little tip here. After build process either completed or fail, there are some files will be generated. In order to make a clean rebuild we can run these commands to clean it up. Then you start from where you copy configuration file step.
  sudo make clean
  sudo make mrproper
  sudo make distclean


new_kernel_path="/mnt/c/users/${WINUSERNAME}/wsl-dist-ubuntu-kernel-${kernel_version}"
new_kernel_windows_path=$(echo $new_kernel_path | sed 's|/mnt/c|c:|;')

sudo cp vmlinux $new_kernel_path

cat << EOT > /mnt/c/Users/${WINUSERNAME}/.wslconfig
[wsl2]
kernel=${new_kernel_windows_path}
EOT


wget https://github.com/microsoft/WSL2-Linux-Kernel/archive/refs/tags/linux-msft-wsl-5.15.90.1.tar.gz
$ tar zxf linux-msft-wsl-5.15.90.1.tar.gz
$ cd WSL2-Linux-Kernel-linux-msft-wsl-5.15.90.1


sudo apt install -y build-essential flex bison dwarves libssl-dev libelf-dev bc libncurses-dev


https://www.youtube.com/watch?v=I2jOuLU4o8E
@adamryason5509
1년 전(수정됨) translate
The USB device shows up when I run lsusb but I don't see anything under dev (i.e. dev/video, dev/ttyusb0). What would I have to do to be able to access it under dev? In my case, the device is a USB Webcam.

https://www.reddit.com/r/bashonubuntuonwindows/comments/17chaed/how_to_mount_usb_device_after_installing_usbipdwin/

현재 상황:


sudo mv config .config
sudo make menuconfig
# save as .config
sudo sed -i 's/^CONFIG_USB=m/CONFIG_USB=y/' .config


cd /usr/src/5.15.153.1-microsoft-standard   # root
cp arch/x86/boot/bzImage /mnt/c/Users/wbfw1/usbip-bzImage

sudo usbipd wsl list

Video4Linux options -> Enable old-style fixed minor ranges on drivers/video devices /// cehcked..
Video4Linux options -> V4L2 sub-device userspace API


이거 한뒤로..
https://github.com/phuoctan4141/WSL/blob/main/Connect%20USB%20devices/USB%20Camera.md

PS C:\Windows\system32> usbipd attach -w -b 4-4
  usbipd: info: Using WSL distribution 'Ubuntu' to attach; the device will be available in all WSL 2 distributions.
  usbipd: info: Loading vhci_hcd module.
  usbipd: error: Loading vhci_hcd failed.

============ 커널 빌드 방식 안됨 ============
>>>>>>>>> https://blog.naver.com/112fkdldjs/223427966518?trackingCode=rss

Windows - Hyper-V Manager
  Home 
    Actions - Virtual Switch Manager...
      Virtual Switches
        1. New virtual network switch - Create virtual switch - External - Create Virtual Switch
        2. <New Virtual Swtich>
          rename as wsl2
        


윈도우에 wsl을 설치하고 ifconfig를 치면 172로 시작하는 ip가 보인다. 이 ip는 내부 ip로, 내 윈도우 PC의 ip와 정말 떨어져 있는 주소라서 이 wsl을 활용하여 라즈베리파이에 연결한다던가 등을 할 수가 없다. 그래서 ip 주소를 윈도우PC랑 동일한 192.로 시작하는 주소로 맞춰 줘야 한다.
구글링을 해보면 hyper-v를 통해서 하라는 말들이 많다. 그 방법을 그대로 따라 해도 나는 죽어도 되지 않아서 별 해 별 이상한 방법을 다 하다가 운 좋게 성공하고 그 과정을 공유하고자 한다.
from 🔗 https://blog.naver.com/112fkdldjs/223426191186
  https://blog.naver.com/112fkdldjs/223427966518?trackingCode=rss

wbfw109@home:~/repository/study-core$ ifconfig
eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 172.23.44.237  netmask 255.255.240.0  broadcast 172.23.47.255
        inet6 fe80::215:5dff:fe96:df7b  prefixlen 64  scopeid 0x20<link>
        ether 00:15:5d:96:df:7b  txqueuelen 1000  (Ethernet)
        RX packets 385  bytes 192780 (192.7 KB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 307  bytes 94571 (94.5 KB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
        inet 127.0.0.1  netmask 255.0.0.0
        inet6 ::1  prefixlen 128  scopeid 0x10<host>
        loop  txqueuelen 1000  (Local Loopback)
        RX packets 13552  bytes 48368656 (48.3 MB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 13552  bytes 48368656 (48.3 MB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0


cat << EOT > /mnt/c/Users/${WINUSERNAME}/.wslconfig
[wsl2]
networkingMode = bridged
vmSwitch = wsl2
EOT


[wsl2]
kernel=c:/users/wbfw1/usbip-bzImage

wbfw109@home ~/r/study-core (dev) [127]> ifconfig
eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 192.168.0.42  netmask 255.255.255.0  broadcast 192.168.0.255
        ether 5e:bb:f6:9e:ee:fa  txqueuelen 1000  (Ethernet)
        RX packets 354  bytes 181440 (181.4 KB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 249  bytes 89720 (89.7 KB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
        inet 127.0.0.1  netmask 255.0.0.0
        loop  txqueuelen 1000  (Local Loopback)
        RX packets 2526  bytes 38969493 (38.9 MB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 2526  bytes 38969493 (38.9 MB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collision

%shell> nvidia-smi  # check whether you can use CUDA






https://blog.naver.com/112fkdldjs/223427966518?trackingCode=rss

❯ cat build_bt.sh 
#sudo apt-get install libbluetooth-dev
gcc iot_client_bluetooth.c -o iot_client_bluetooth -lbluetooth -pthread
https://github.com/comfyanonymous/ComfyUI



📰 VSCode tools
  ms-vscode.makefile-tools
  llvm-vs-code-extensions.lldb-dap
libbluetooth-dev

⚓ STM32Cube initialization code generator ; https://www.st.com/en/development-tools/stm32cubemx.html
  https://www.st.com/en/development-tools/stm32cubemx.html#documentation
      
  UM1718 ; STM32CubeMX for STM32 configuration and initialization C code generation
    https://www.st.com/resource/en/user_manual/um1718-stm32cubemx-for-stm32-configuration-and-initialization-c-code-generation-stmicroelectronics.pdf

huart6.Init.BaudRate
  모듈과 통신하기 위해 필요한 속도입니다
  HAL_UART_Receive_IT(&huart6, &btchar, 1);
    비동기 데이터 수신: UART 데이터를 기다리며 블록하지 않고, 데이터를 수신하면 인터럽트가 발생합니다.
    수신한 데이터는 btchar에 저장되며, 수신 완료 시 HAL_UART_RxCpltCallback이 호출됩니다.
HAL_UART_RxCpltCallback 함수는 데이터 수신 시 실행됩니다.
  btData (array) 에 값 저장

❓ 
  - bluetooth_Event() 에서 다음 코드는 뭘 하는거지? HAL_UART_Transmit(&huart6, (uint8_t *)sendBuf, strlen(sendBuf), 0xFFFF);
    ; 블루투스 모듈로 데이터를 보내는 역할.
      &huart6: UART6 인터페이스 핸들러.
      (uint8_t *)sendBuf: 송신할 데이터의 시작 주소.
      strlen(sendBuf): 송신할 데이터의 길이.
      0xFFFF: 타임아웃 설정값. 여기선 충분히 긴 값으로 설정해 타임아웃이 발생하지 않도록 합니다.
  - StopBits 를 왜 설정해야해? Parity, OverSmapling, HwFlowCtl 은 뭐야? 통신 메커니즘이 어떻게 되길래? 구체적으로 알려줘.
    송신자와 수신자의 Stop Bit 설정이 같아야 정상적으로 통신 가능합니다.
    OverSampling; UART 수신에서 데이터의 정확도를 높이기 위한 샘플링 방법. 데이터 한 비트의 신호를 여러 번 샘플링하여 신뢰성을 높입니다.
    HwFlowCtl = 송수신이 비동기로 동작할 때 데이터를 안정적으로 전달하도록 지원.
      추가적인 신호선(RTS/CTS)을 사용하여 송수신 상태를 제어.
      UART_HWCONTROL_NONE: 흐름 제어 미사용.
      UART_HWCONTROL_RTS: 송신 제어.
      UART_HWCONTROL_CTS: 수신 제어.
      UART_HWCONTROL_RTS_CTS: 양방향 제어.
  - "HAL_UART_RxCpltCallback " 가 뭐의 약자야? 너무 약자가 많아서 모르겠어.
    HAL: Hardware Abstraction Layer (STM32 HAL 라이브러리의 레이어).
    UART: Universal Asynchronous Receiver-Transmitter
      UART 프레임 (8N1) e.g.
        | Start |  H  | Stop |
        | Start |  E  | Stop |
        | Start |  L  | Stop |
        | Start |  L  | Stop |
        | Start |  O  | Stop |
    Rx: Reception (데이터 수신).
    Cplt: Complete (완료).
    Callback: 콜백 함수.

    - HAL_UART_Receive_IT(&huart6, &btchar, 1); 이 코드는 뭘 하는거야?
      역할
        비동기 방식으로 UART 데이터를 1바이트씩 수신.
        수신이 완료되면 HAL_UART_RxCpltCallback이 호출됩니다.
      동작 방식:
        UART6으로부터 데이터 1바이트를 btchar 변수에 저장.
        데이터가 수신되면 콜백(HAL_UART_RxCpltCallback) 호출.
        다시 HAL_UART_Receive_IT를 호출해 다음 데이터를 수신.
  - 코드를 보면 HAL_UART_RxCpltCallback 에서 (\n \r) 으로 끝나는 어떤 한 문장 이 오면 btFlag 를 셋하고
    main while loop 에서 이 플래그에 따라 코드를 실행시키는데, 이럴 경우 저 문장들이 빠르게 연속적으로 들어오면 main 에서 받은 데이터 일부를 처리를 하지 않고 넘어가는 현상이 생기나?
    그러면 차라리 btFalg 를 설정하는 것이 아니라 원형 큐의 한 원소에다가 btData 를 strcpy 로 넣는 것이 좋나?
    // 그리고 이건 개별적으로 파이썬의 큐는 항상 원형큐인가? 
    >> devshell 사용해서 - .. 원형 큐 라이브러리 찾기? 일단 stm32 이거 c++ 코드로 바꿀 수 있는지도 봐야 함.
블루투스 통신의 구조
  블루투스는 주로 **프로파일(Profile)**과 서비스(Service) 개념을 기반으로 작동.
  SPP (Serial Port Profile):
    가상 UART 통신처럼 동작. STM32의 UART를 블루투스를 통해 우분투와 연결하는 데 적합.
  BLE (Bluetooth Low Energy):
    저전력 데이터 교환 프로토콜로, 일반 블루투스와는 구조적으로 다르며 주로 센서 데이터를 교환할 때 사용.
AT 명령어를 코드 내에서 작동시킬 수 있도로 경변경하기
  <CompanyName>-<ModelName>-<UniqueID>

👍 MAC Address (Media Access Control Address):
  네트워크 장치(유선 또는 무선)가 고유하게 가지는 식별 번호.
  블루투스 모듈마다 고유한 MAC Address 가 존재한다.

test..
  현재 구조의 문제는 인터럽트 연속 호출로 메인 루프가 실행되지 않아 btFlag가 초기화되지 않는 경우입니다.
  이를 해결하려면 다중 버퍼 또는 원형 큐를 사용하여 데이터를 저장하고, 메인 루프에서 처리하는 구조를 구현하는 것이 좋습니다.
  다중 메시지 처리와 확장성을 고려하면 원형 큐가 더 적합하며, 코드에서 데이터를 안전하게 관리할 수 있습니다.

  #define QUEUE_SIZE 5
  #define MESSAGE_SIZE 50

  typedef struct {
      char messages[QUEUE_SIZE][MESSAGE_SIZE];
      int head;
      int tail;
      int count;
  } CircularQueue;

  CircularQueue uartQueue = {.head = 0, .tail = 0, .count = 0};

  void enqueue(CircularQueue *queue, const char *data) {
      if (queue->count == QUEUE_SIZE) {
          // 큐가 가득 찼으면 데이터 손실 처리
          return;
      }
      strncpy(queue->messages[queue->tail], data, MESSAGE_SIZE - 1);
      queue->messages[queue->tail][MESSAGE_SIZE - 1] = '\0';
      queue->tail = (queue->tail + 1) % QUEUE_SIZE;
      queue->count++;
  }

  int dequeue(CircularQueue *queue, char *buffer) {
      if (queue->count == 0) {
          return 0; // 큐가 비었음
      }
      strncpy(buffer, queue->messages[queue->head], MESSAGE_SIZE);
      queue->head = (queue->head + 1) % QUEUE_SIZE;
      queue->count--;
      return 1;
  }

  void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart) {
      static char tempBuffer[MESSAGE_SIZE];
      static int index = 0;

      if (huart->Instance == USART6) {
          tempBuffer[index++] = btchar;

          if (btchar == '\n' || btchar == '\r') {
              tempBuffer[index - 1] = '\0'; // 문자열 종료
              enqueue(&uartQueue, tempBuffer); // 메시지 큐에 추가
              index = 0; // 임시 버퍼 초기화
          }

          // 다음 데이터 수신
          HAL_UART_Receive_IT(&huart6, &btchar, 1);
      }
  }
  메인 루프에서 처리:
  c
  Copy code
  char message[MESSAGE_SIZE];
  while (1) {
      if (dequeue(&uartQueue, message)) {
          printf("Received: %s\n", message);
          bluetooth_Event(message); // 데이터 처리
      }

      // 다른 작업 수행
  }

보안 모드가 강화된 경우:
예를 들어, Bluetooth LE (Low Energy)의 Secure Connection 모드처럼 높은 수준의 암호화를 사용하는 경우에는 연결 시 인증이 필요할 수 있습니다.

strtok ; https://cplusplus.com/reference/cstring/strtok/
  🚣 This end of the token is automatically replaced by a null-character, and the beginning of the token is returned by the function.

- Wifi ..파일 분리 필요. 모듈화.


왜 UART는 8비트 단위를 사용하나?
  UART 프로토콜은 저속 직렬 통신을 위해 설계되었으며, 데이터 단위가 작아야 노이즈와 오류에 대한 내성이 높습니다.
  기본 단위를 작게 설정하여, 데이터 손상 시 손실 범위를 최소화.
  과거 하드웨어 제약에서 시작된 설계지만, 현재도 UART의 데이터 처리 단위는 **바이트(8비트)**가 표준입니다.
  📝 Start 비트와 Stop 비트는 Data 비트에 "포함되어 전송"되는 것이 아니라, Data 비트를 감싸는 독립적인 신호로 간주됩니다.
 1초에 전송되는 총 비트 수 계산
보드레이트(Baud Rate)가 9600bps이고, 데이터가 8N1 (8 Data, No Parity, 1 Stop)인 경우:
    1 프레임 = 10비트.
    1초에 전송 가능한 데이터:
      9600 bps ÷ 10 비트/프레임 = 960 프레임/초
      960 프레임 = 960바이트(8비트 기준).


Wifi ❓
  - 와이파이도 블루투스와 마찬가지로 badu rate 는 112000 이었나? 그 값으로 하는게 좋나? 아두이노가 아니라 STM32 니까?
  - AT+CWMODE=1 ?스테이션 모드가 뭐야? 모드가 뭐가있는데?
    Wi-Fi 모드의 종류:
      1 (Station Mode):
      Wi-Fi 클라이언트 모드입니다.
        ESP8266/ESP32가 **AP(Access Point)**에 연결하여 인터넷이나 네트워크에 접속합니다.
        예: 스마트폰이나 노트북이 AP에 연결하는 것과 동일한 동작.
      2 (SoftAP Mode):
        Wi-Fi AP 모드입니다.
        ESP8266/ESP32가 자체적으로 AP를 생성하여 다른 장치들이 연결할 수 있습니다.
        예: 휴대폰 핫스팟 기능.
      3 (Station + SoftAP):
        Station Mode와 SoftAP Mode를 동시에 사용합니다.
        ESP8266/ESP32가 AP에 연결된 상태에서 자체적으로 AP를 만들어 다른 장치를 연결시킬 수 있습니다.
  - AT+CWJAP 이 뭐야?  CW? JAP? 뭐의 약자야?
    ESP8266/ESP32가 AP에 연결할 때 사용하는 명령어입니다.
    CW: Connect Wi-Fi.
    JAP: Join Access Point.
  - 이러한 초기확 방법은 모두 데이터시트에 쓰여있나? 내가 혼자서 작성할 수 없을 것 같아.
  - AT+CIPSTA 는 뭐의 약자야? CIPSTA? 각 약자들 문자가 뭐를 나타내 ?
    ESP8266/ESP32의 IP 주소를 설정하거나 확인할 때 사용하는 명령어입니다.
    CIP: Connect IP.
    STA: Station Mode.
  - 이 코드도 보면 이전의 수정 전 블루투스 코드와 같이 원형 큐를 사용하지 않아서 발생할 수 있는 문제가 동일한가?

각각 간단히 무엇인지 알려줘
  Basic
    AT             - 모듈과의 연결 확인 (OK 응답)
    AT+RST         - 모듈 재설정 (리셋)
    AT+GMR         - 펌웨어 버전 확인
    AT+GSLP        - 모듈을 저전력(Sleep) 모드로 전환
    ATE            - Echo 모드 설정 (명령어 입력 시 표시 여부)

  Wi-Fi Layer
    AT+CWMODE      - Wi-Fi 동작 모드 설정 (Station, SoftAP, Station+SoftAP)
    AT+CWJAP       - AP에 연결 (SSID, 비밀번호 사용)
    AT+CWLAP       - 주변 AP 목록 검색
    AT+CWQAP       - 현재 연결된 AP에서 연결 해제
    AT+CWSAP       - SoftAP 모드에서 AP 이름, 비밀번호, 채널, 암호화 설정
    AT+CWLIF       - SoftAP에 연결된 클라이언트 목록 확인
    AT+CWDHCP      - DHCP 사용 여부 설정 (Station, SoftAP)
    AT+CIPSTAMAC   - Station 모드에서 MAC 주소 설정/조회
    AT+CIPAPMAC    - SoftAP 모드에서 MAC 주소 설정/조회
    AT+CIPSTA      - Station 모드에서 IP 주소 설정/조회
    AT+CIPAP       - SoftAP 모드에서 IP 주소 설정/조회

  TCP/IP Layer
    AT+CIPSTATUS   - 현재 TCP/UDP 연결 상태 확인
    AT+CIPSTART    - TCP/UDP 연결 시작 (서버 IP와 포트 지정)
    AT+CIPSEND     - TCP/UDP로 데이터 전송
    AT+CIPCLOSE    - TCP/UDP 연결 종료
    AT+CIFSR       - 현재 IP 주소 확인
    AT+CIPMUX      - 다중 연결(Multiple Connection) 모드 설정
    AT+CIPSERVER   - TCP 서버 시작/중지
    AT+CIPMODE     - 투명 모드(Transparent Mode) 설정
    AT+CIPSTO      - TCP 연결 유지 시간 설정
    AT+CIUPDATE    - 펌웨어 업데이트
    +IPD           - 데이터 수신 알림 (수신된 데이터 길이 및 내용 포함)



STM32
  Bluetooth - Server
  TCP/IP (Wireless) - Client
Raspbery Pi
  Bluetooth - Client
  TCP/IP - Server
>> 구조
  라즈베리파이 무선 클라이언트로부터 (우분투 or 핸드폰 TCP connector 앱으로 접속) 명령을 받아서, STM32 블루투스 서버에에서
    쓰레기통 시스템 모드 전환: 자동모드 (뚜껑 자동 닫힙/열림, 쓰레기 자동 봉투 묶음)  <-> 유지보수 모두 전환 (명령 수동 모드)
  라즈베리파이 TCP/IP 서버에서는 STM32 에서 보낸 초음파센서로 측정하여 얻은 적재량 데이터를 받아서 MariaDB 에 저장한다.
    이 데이터는 Apache + PHP 를 통해 웹으로 보여준다.


만약 conan + embedded (stm32) 조합이 된다고 했을 때, 내가 gcc 버전까지는 개별로 관리해봤는데, libbluetooth-
dev 이런 시스템 패키지도 버전관리가 가능해? 그래야 라이브러리 버전 관리가 가능하잔아.
  ➡️ 결국 "장치" 관련해서는 진짜 하드웨어가 필요해서 노트북이나 휴대용 라즈베리파이 하나쯤 필요한듯
    근데 이 뿐 아니라, STM32 등 GUI 를 실제 필요로하는 것은 데스크탑이/노트북에서 하는 게 좋아서.
  ➡️ 작업환경을 우분투로 옮기고.. 모니터 암 아래에 노트북 두고 스피커는 안보이게 그뒤쪽으로 치운다.. 

  Conan System Package Tools 은 또 OS에 종송적인가?


  -- 블루투스 연동하기.


  ➡️ 확실한  건 sudo apt 으로 설치하는거보다 nix 로 설치하는게 더 버전 높은 게 있음.
    >> nix - 
      // runtime library
      libmariadb3
      php
      httpd

        
    >> 프로젝트 별로 설치할 패키지 관리하자.
      현재 embedded (C,C++; stm32 에 대해) 버전을 프로젝트별로 관리해야 할 필요성이 생겼어.
      파이썬 개발자들은 파이썬 가상환경을 사용해서 패키지의 버전을 관리하는데
      C, C++ 개발자들은 실제로, 실무자들은 대체 어떻게 관리하지? (2024년 기준) 어떤 추세지?
        conan 을 사용해봣는데 이거는 Embeedde 개발 때 사용은 가능한건가? 응용 프로그램 전용인가?
        아니면 Devshell + Flake?? 을 사용해서 관리하나?
          근데 Devshell + Flake 은 너무 안정적인 버전만 있어서 원하는 버전은 라이브러리르 사용하기 어렵나? (내가 실제로 빌드하기 위한 패키지를 모두 알아내서 정의하여 빌드하는 것은 어려우므로)
        아니면 다른 방법?

    📰 Devshell + Flake??
      - Conan 과 통합 필요 또는
        https://docs.conan.io/2/reference/conanfile/methods/system_requirements.html
      - apache 와 같은 것은 시스템의 네트워크 포트를 사용하는 서버 데몬으로 전역적인 서비스를 제공하므로, home-manager 나 flake 로 관리하기에 적절하지 않음
        https://search.nixos.org/packages?channel=24.05&from=0&size=50&sort=relevance&type=packages&query=mariadb
        nix 로 apache, home-manaegr 관리하기.

    libmariadb3; 런타임 라이브러리로 >> sys shell.. 에서 설치가능 arm..? qemu virt? 그거 해봐야함.
    libmariadb-dev; 개발 환경을 위해 필요한 헤더 파일과 정적 라이브러리를 제공합니다
      it includes libmariadb3



    >> 이거 devshell 정의하고 실제 우분투에서 할 때 c -> cpp 코드로 바꾸기.. code generator 에서
      📰🧪
        libmariadb3 (runtime)
        php (runtime)
      📰 Apache TODO:
        Listen 8080
        Listen 8081

        <VirtualHost *:8080>
            DocumentRoot "/home/linuxbrew/.linuxbrew/var/www/site1"
            ServerName localhost
        </VirtualHost>

        <VirtualHost *:8081>
            DocumentRoot "/home/linuxbrew/.linuxbrew/var/www/site2"
            ServerName localhost
        </VirtualHost>



>rust-analyzer: Run
  *  The terminal process failed to launch: Path to shell executable "cargo" does not exist. 
  
  cargo run -p hello_world
    -p: --package

  [🤎1] 일곱 난쟁이 ; https://www.acmicpc.net/problem/2309
    tag: 브루트포스 알고리즘, 정렬

  [🤎2] 트럭 주차 ; https://www.acmicpc.net/problem/2979
  구현
  시뮬레이션

  [🤎3] 팰린드롬인지 확인하기 ; https://www.acmicpc.net/problem/10988
  구현
  문자열

  [🤎2] 농구 경기 ; https://www.acmicpc.net/problem/1159
  구현
  문자열

  [🤎1] ROT13 ; https://www.acmicpc.net/problem/11655
  구현
  문자열

  [🩶3] 한국이 그리울 땐 서버에 접속하지 ; https://www.acmicpc.net/problem/9996
  문자열
  정규 표현식

  [🩶3] 수열 ; https://www.acmicpc.net/problem/2559
  누적 합
  두 포인터
  슬라이딩 윈도우

  [🩶4] 나는야 포켓몬 마스터 이다솜 ; https://www.acmicpc.net/problem/1620
  자료 구조
  해시를 사용한 집합과 맵

  [🩶3] 패션왕 신해빈 ; https://www.acmicpc.net/problem/9375
  수학
  자료 구조
  조합론
  해시를 사용한 집합과 맵

  [🩶3] 팰린드롬 만들기 ; https://www.acmicpc.net/problem/1213
  구현
  그리디 알고리즘
  문자열

  [🩶4] 주몽 ; https://www.acmicpc.net/problem/1940
  정렬
  두 포인터

  [🩶4] 좋은 단어 ; https://www.acmicpc.net/problem/3986
  자료 구조
  스택

  [🩶1] 곱셈 ; https://www.acmicpc.net/problem/1629
  수학
  분할 정복을 이용한 거듭제곱

  [🩶3] 1 ; https://www.acmicpc.net/problem/4375
  수학
  브루트포스 알고리즘
  정수론


  1주차
  문자열, 누적합, 구현

  2주차
  그래프이론,  DFS,  BFS

  3주차
  완전탐색, 백트래킹

  4주차
  비트마스킹

  5주차
  그리디,라인스위핑,투포인터 7주차DP

  6주차
  이분탐색과LIS

  8주차
  펜윅트리, 최단거리


코딩 테스트 - 상어 문제 https://www.acmicpc.net/problem/17143
  Prerequisite
    (2 ≤ R, C ≤ R×C)

  Definition
    $max_index = (R/C -1)
    ❓ 한 칸씩 움직여서 상어를 잡아먹는 것이 아니라, 최종 위치에 대해서 판단을 한다.
      수식을 만들어서 이동 후 위치와 방향을 한 칸씩 움직이지 않고 이동변위를 한 번에 처리하도록 할 수 있지 않을까?
      Formula: (초기 위치 + 이동변위) % $max_index
    ❓ 끝에 도착했을 때 방향은 반대 방향을 바라보게 하겠다. 결과에는 동일.

  R*C 가 4*6 이면. C 에 대해서
    if Direction is positive, 
      (0 + 5) mod 5     =     q: 1,   r: 0
      if quotiant is odd number, set $position = $max_index - r. and Final Direction will be (Direction * -1) after each turn.
      (0 + 6) mod 5     =     q: 1,   r: 1
      (0 + 10) mod 5     =     q: 2,   r: 0
      if quotiant is even number, set $position = r. and Final Direction will be (Direction * 1) after each turn.
     // >> 테스트 필요. 초기 위치가 max_index 랑 같으면 내가 원하는 결과가 똑같이 나오나?

    if Direction is negative,
      (0 - 5) mod 5     =     q: -1,  r: 0
      >>>>>>>>>>>> (0 - 6) mod 5     =     q: -2,  r: 4
      set $position = r
        if q is even, Final Direction will be (Direction * 1) after each turn.
        if q is odd, Final Direction will be (Direction * -1) aㄹfter each turn.
        
      edge case range 


https://doc.rust-lang.org/rust-by-example/index.html



python tesorflow requires... 📅 2024-12-01 14:43:42
  sudo apt install -y g++-11

dyn은 **동적 디스패치(dynamic dispatch)**를 나타냅니다. 실행 중에 구체적인 타입이 결정됩니다.
  dyn Iterator<Item = String>는 **"구체적인 반복자 타입을 몰라도, 반복자의 동작만 보장"**하려는 의도입니다.


  .lock(): 입력을 효율적으로 처리하기 위해 **락(lock)**을 사용하여 버퍼링합니다.
  비유: 자바의 BufferedReader 또는 C++의 std::cin과 비슷합니다

  input.next(): 반복자에서 다음 항목을 가져옵니다. 이 함수는 한 번 호출할 때마다 새로운 줄을 반환합니다.
  비유: 파이썬의 next(iterator) 또는 C++의 std::getline()과 비슷합니다.
  .unwrap(): Option 타입에서 값을 꺼냅니다. 값이 없는 경우 프로그램을 종료합니다.
  비유: 자바의 Optional.get() 또는 파이썬에서 assert value is not None과 유사합니다.

  as.. 타입 캐스팅?
    lines는 컴파일러가 구체적인 타입으로 알고 있지만, 이를 Box<dyn Iterator<Item = String>>로 변환해 동적 디스패치를 지원합니다.

  match로 Some(lines)를 처리하는 이유
  Option<T>는 두 가지 상태(Some 또는 None)를 가질 수 있습니다.
  Some(lines)는 반복자가 전달된 상태를 처리하고, None은 표준 입력을 처리합니다.


  Box는 Rust의 스마트 포인터로, 데이터를 힙(heap)에 저장합니다. Rust에서는 기본적으로 값이 스택(stack)에 저장되므로, 큰 데이터를 다룰 때 Box를 사용해 힙 메모리에 저장합니다.
    왜 Box를 사용하는가?
    Rust에서는 함수 반환값의 크기가 고정되어야 합니다. 하지만 dyn Iterator는 실행 중에 타입이 결정되므로 크기를 알 수 없습니다.
    Box를 사용하면 힙에 저장된 포인터를 반환하므로 크기를 고정할 수 있습니다.
    Box::new(...): 반복자를 힙에 저장하여 동적 디스패치를 가능하게 합니다.

  .collect::<Vec<_>>():
    변환된 데이터를 벡터로 수집합니다.
    Vec<_>는 벡터의 타입을 자동 추론합니다.


  println!은 **매크로(macro)**입니다. Rust의 매크로는 일반 함수와 달리 컴파일 타임에 코드가 확장됩니다.
    비유:
    파이썬의 f-string이나 자바의 String.format과 유사하지만, Rust 매크로는 더 강력합니다.
    !가 붙는 이유:
    Rust에서 매크로 호출을 명확히 구분하기 위해 사용됩니다.
    함수는 println처럼 호출하지만, 매크로는 println!처럼 호출해야 합니다.


  Rust에서 **트레이트(trait)**는 공통 동작(메서드)을 정의하는 인터페이스입니다.

    다른 언어의 유사 개념:
    자바: 인터페이스(interface)
    C++: 가상 클래스(virtual class) 또는 추상 클래스
    파이썬: 프로토콜 또는 덕 타이핑
    트레이트는 객체가 특정 동작을 할 수 있도록 보장합니다.


  2. .lock(): 입력에 대한 버퍼를 잠급니다.?
    .lock()이란?
    Rust에서 .lock()은 멀티스레드 환경에서 데이터를 안전하게 보호하기 위해 사용하는 메커니즘입니다. 이 문맥에서는 버퍼를 사용하는 객체를 안전하게 잠금 처리하여 다른 작업과의 충돌을 방지합니다.

    Rust에서의 역할
    io::stdin().lock()은 표준 입력(stdin())에 대한 잠금을 제공합니다.
    이 잠금은 입력 데이터의 **버퍼링(buffering)**을 가능하게 하고, 데이터가 안정적으로 읽히도록 합니다.
    비유:
    자바의 synchronized 블록이나 BufferedReader와 유사합니다.
    .lock():
      stdin()은 기본적으로 비동기적으로 데이터를 읽기 때문에, lock() 메서드를 호출해서 동기적으로 읽도록 만듭니다.
      이 동작은 표준 입력에 대한 **잠금(lock)**을 의미하며, 데이터를 읽는 동안 다른 스레드가 접근할 수 없게 됩니다.
    io::stdin():

      표준 입력을 읽기 위한 핸들을 반환합니다. 일반적으로 터미널에서 사용자가 입력한 데이터를 프로그램이 읽을 수 있게 해줍니다.

  3. map에서의 |line| line.unwrap()과 |&count| count.to_string()
    | |의 의미
    | |는 Rust에서 **클로저(closure)**를 정의하는 문법입니다.

    클로저는 익명 함수로, 해당 함수의 동작을 표현합니다.
    비유:
    파이썬의 lambda 문법.
    자바의 람다 표현식 () -> {}와 유사.
    |line| line.unwrap() 구문
    |line|: map 함수가 전달한 각 요소를 line 변수로 받습니다.
    line.unwrap(): line이 Result<String, io::Error> 타입이므로, unwrap()을 통해 String을 추출합니다.
    |&count| count.to_string() 구문
    |&count|: 배열 요소의 참조(&count)를 받습니다.
    count.to_string(): count 값을 문자열로 변환합니다.
    Rust에서는 to_string()을 호출해 숫자를 문자열로 바꿀 수 있습니다

    solve 내부적으로 Box 에 있던 데이터가 계속 소유권이 이전되는데, 그거를 스마트 포인터가 어디로 이동됬는지 알고있다는거야? 그래서 나중에 solve 스코프를 벗어나면 해제하는거고?
map(|line| line.unwrap())
  .map(|line| line.unwrap()):
  lines()는 각 줄을 Result<String, std::io::Error> 형태로 반환합니다. 즉, 각 줄은 성공적으로 읽혔으면 Ok(String) 형태로, 오류가 발생하면 Err 형태로 반환됩니다.
  .map() 메서드는 각 줄에 대해 적용할 변환 작업을 정의합니다.
  unwrap()은 이 Result에서 **Ok(String)**만 가져오고, 만약 **Err**이 나면 프로그램을 패닉시킵니다. 즉, unwrap()은 오류가 없다고 가정하고 안전하게 값을 꺼내는 방법입니다.

1. 소유권(Ownership)이란?
  Rust에서 소유권은 데이터를 누가 관리하고 책임지는지를 명확히 하는 메커니즘입니다.

  주요 규칙:
  모든 값은 하나의 소유자만 가질 수 있다.
  소유자가 스코프(scope)를 벗어나면 값은 자동으로 해제된다.
  소유권이 없는 상태에서는 데이터를 사용할 수 없다.
  예제: 소유권의 이동
  rust
  Copy code
  fn main() {
      let s1 = String::from("hello");
      let s2 = s1;

      println!("{}", s1);
  }
  let s2 = s1에서 소유권이 s1에서 s2로 이동(Move)했습니다.
  s1은 더 이상 사용할 수 없습니다.
  2. 소유권과 함수
  함수 호출 시에도 소유권이 이동할 수 있습니다.

  예제: 함수 호출에서 소유권 이동
  rust
  Copy code
  fn main() {
      let s = String::from("hello");
      take_ownership(s); // 소유권이 함수로 이동
      println!("{}", s); // 오류: s는 더 이상 유효하지 않음
  }

  fn take_ownership(s: String) {
      println!("{}", s);
  } // 여기서 s가 스코프를 벗어나면서 메모리가 해제됨
  take_ownership 함수는 s의 소유권을 가져갑니다.
  s의 소유권이 함수로 이동했기 때문에, 이후 s를 사용할 수 없습니다.
  3. 참조와 소유권
  소유권을 이동하지 않고 데이터를 읽거나 수정하려면 **참조(reference)**를 사용해야 합니다.

  참조의 종류:
  불변 참조(&T): 데이터를 읽기만 가능.
  가변 참조(&mut T): 데이터를 수정 가능(하지만 동시에 하나만 가능).
  예제: 불변 참조
  rust
  Copy code
  fn main() {
      let s = String::from("hello");
      let len = calculate_length(&s); // &s: s를 참조, 소유권은 이동하지 않음
      println!("Length: {}", len);   // s는 여전히 유효
  }

  fn calculate_length(s: &String) -> usize {
      s.len() // 참조를 사용해 데이터를 읽음
  }
  예제: 가변 참조
  rust
  Copy code
  fn main() {
      let mut s = String::from("hello");
      change(&mut s); // &mut s: s의 가변 참조를 넘김
      println!("{}", s); // 변경된 값 출력
  }

  fn change(s: &mut String) {
      s.push_str(", world"); // 참조를 통해 데이터 수정
  }
  4. 소유권 vs 참조 vs 역참조
  (1) 소유권
  소유권이 있는 값은 자유롭게 사용할 수 있습니다.

  예: String 소유권이 있으면, 메서드를 자유롭게 호출할 수 있습니다.
  (2) 참조
  참조는 소유권을 이동하지 않고 값에 접근하는 방법입니다.

  불변 참조: 데이터를 읽을 수만 있음.
  가변 참조: 데이터를 수정할 수 있음.
  (3) 역참조
  참조된 값을 사용할 때는 **역참조(dereference)**를 통해 원래 값을 가져옵니다.

  예: * 연산자로 참조를 해제(역참조)합니다.
  예제: 소유권 vs 참조 vs 역참조
  rust
  Copy code
  fn main() {
      let s = String::from("hello"); // 소유권
      let s_ref = &s;               // 불변 참조
      let s_ref_mut = &mut s;       // 가변 참조 (오류: 불변 참조가 이미 있음)

      println!("{}", *s_ref);       // 역참조로 값 사용
  }
📍⌨️ Sound output: Ctrl+Windows+V



📰 STM32 모듈파일 새로추 가하면 cmake 폴더 삭제 후, 다시 CubeMx 에서 code genreate 해야 하는듯


📰 >>> Rust 패키지 cargo.toml 프로젝트루트로 올리기. 
  algorithm_solutions
  algorithm_theory
  ...
  ...
  패키지들.




왜 대체 업로드가 안되늑너야 잘 되다가.
  build + flush 시 3.26V 전압문제?
  IAR에서 컴파일 후 다운로드 잘 하다가 갑자기 아래와 같은 에러가 발생한다.
    ST-LINK 고장난 줄 알았는데, 어느 블로그에 아래와 같은 조치 방법이 있어서 
  https://blog.naver.com/top60331/221499885506

❓❓❓❓❓❓❓❓❓❓❓❓
  Error: No STM32 target found! If your product embeds Debug Authentication, please perform a discovery using Debug Authentication 11:15:20 : Error: Connection to target must be established before performing the erase command.
  점퍼 문제 ㅡ.ㅡ 제대로, 맞느 ㄴ위치에, 헐렁거리지 않는지 확인

  ... ㅡ먀ㅜ Squiggle 문제 📅 2024-12-02 14:29:59
  #include errors detected based on information provided by the configurationProvider setting. Squiggles are disabled for this translation unit (/home/wbfw109v2/project_alarm_clock/Core/Src/main.c).C/C++(1696)
  cannot open source file "stm32f4xx.h" (dependency of "main.h")C/C++(1696)


  #include "main.h" in /home/wbfw109v2/project_alarm_clock/Core/Src/main.c  to /home/wbfw109v2/project_alarm_clock/Core/Inc/main.h
  ⚙️ c_cpp.preoprtei: default
    {
        "version": 4,
        "configurations": [
            {
                "name": "STM32",
                "configurationProvider": "ms-vscode.cmake-tools",
                "intelliSenseMode": "${default}",
                "includePath": [
                    "${default}"
                ]
            }
        ]
    }
    configurationProvider를 ms-vscode.cmake-tools로 설정했을 때, includePath를 c_cpp_properties.json에서 직접 설정하는 대신, CMake 설정 파일에서 설정해야 합니다. 이는 CMake Tools 확장이 CMake를 통해 설정을 가져오도록 지정했기 때문입니다.

  ⚙️ CMakeLists.txt from imported value (not vscode created file)
      cmake_minimum_required(VERSION 3.22)

      #
      # This file is generated only once,
      # and is not re-generated if converter is called multiple times.
      #
      # User is free to modify the file as much as necessary
      #

      # Setup compiler settings
      set(CMAKE_C_STANDARD 11)
      set(CMAKE_C_STANDARD_REQUIRED ON)
      set(CMAKE_C_EXTENSIONS ON)


      # Define the build type
      if(NOT CMAKE_BUILD_TYPE)
          set(CMAKE_BUILD_TYPE "Debug")
      endif()

      # Set the project name
      set(CMAKE_PROJECT_NAME project_alarm_clock)

      # Include toolchain file
      include("cmake/gcc-arm-none-eabi.cmake")

      # Enable compile command to ease indexing with e.g. clangd
      set(CMAKE_EXPORT_COMPILE_COMMANDS TRUE)

      # Enable CMake support for ASM and C languages
      enable_language(C ASM)

      # Core project settings
      project(${CMAKE_PROJECT_NAME})
      message("Build type: " ${CMAKE_BUILD_TYPE})

      # Create an executable object type
      add_executable(${CMAKE_PROJECT_NAME})

      # Add STM32CubeMX generated sources
      add_subdirectory(cmake/stm32cubemx)

      # Link directories setup
      target_link_directories(${CMAKE_PROJECT_NAME} PRIVATE
          # Add user defined library search paths
      )

      # Add sources to executable ⚙️ VSCode 의 intellisesne 를 함께 받기 위해서 이것과 이 아래에 새로운 소스를 추가해야 한다.
      target_sources(${CMAKE_PROJECT_NAME} PRIVATE
          # Add user sources here
          Core/Src/clcd.c
      )

      # Add include paths ⚙️
      target_include_directories(${CMAKE_PROJECT_NAME} PRIVATE
        Core/Inc
          # Add user defined include paths
      )

      # Add project symbols (macros)
      target_compile_definitions(${CMAKE_PROJECT_NAME} PRIVATE
          # Add user defined symbols
      )

      # Add linked libraries
      target_link_libraries(${CMAKE_PROJECT_NAME}
          stm32cubemx

          # Add user defined libraries
      )

  ⚙️ 그리고 squiggle 문제.. 해당 함수를 사용해야 사라지는것도 있는듯.. 왜 오류가 저런식으로뜨는지는 모르겠지만 ㅡ.ㅡ
    아직도 정확히 새로 복사하건 프로젝트 이름 바꾸는 방법 제대로 모르겟음.. 하.. 자꾸 새로 고칠려고하니까 오류 발생함..

  ⚙️ >CMake: Select Configure Preset
    은 Debug 로 해야 한다.
    ❌ GCC 12.3.1 arm-none-eabi   아님!!
📰 ARM.. 어셈블리어도 발전한다.. interview 

build/debug/CMakeCache.txt 이거 제거해줘야 CMakeLists 변경한거 반영된다.

/home/wbfw109v2/project_alarm_clock/build/debug/compile_commands.json .. 이거 바꿔야하나ㅏ?
  /project_alarm_clock/Src/ 를
  /project_alarm_clock/Core/Src/ 로
  ❌ not works
  ➡️ 사용자가 건드려야 할 것. 다른 cmake 나 ninja 파일은 자동생성된거라 건드리면안된다.
    /home/wbfw109v2/project_alarm_clock/CMakeLists.txt


%vscode > Cmake build 하면되는거
  /home/wbfw109v2/project_alarm_clock/build/debug/.cmake 이게 새로 생성된다.


💡 STM32 검정색 버튼: (코드 재시작)


음.. 내가 이제 WSL2/또는 순수 우분투에서에서 크로스컴파일 환경을 만들어서 테스트해보려는데, virsh (libvirt library)  였던가 여러 가상머신 에뮬레이터 동일한 API 로 쉽게 컨트롤 가능한게? 이거를  WSL2 에서 사용할 수 있나? 

만약 된다면 이 가상머신과 내 WSL2와 NFS를 사용하는 게 낫겟지? 내 개인 네트워크 전용이니까

https://serverfault.com/questions/1043441/how-to-run-kvm-nested-in-wsl2-or-vmware

🆚 VirtFS NFS Samba
  🪱 virtFS: Virtual Filesystem
  🪱 virtio (Virtual I/O)
    가상머신과 호스트 간 파일 공유: VirtFS는 네트워크 프로토콜 없이 virtio-fs 드라이버를 사용해 공유하므로 성능이 우수합니다.
    고성능이 중요한 경우: VirtFS는 네트워크 스택을 통하지 않아 대용량 파일 전송이나 빈번한 파일 접근에서 NFS보다 빠릅니다.
    호스트 전용 파일 공유: VirtFS는 호스트와 가상머신 간의 공유에만 사용할 수 있습니다. 외부 장치나 네트워크로의 공유는 불가능합니다.
  
  VirtFS를 사용하는 것이 적합한 경우:
    가상머신과 호스트 간의 파일 공유만 필요.
    네트워크 오버헤드를 줄이고 최대한 고성능을 원할 때.
    복잡한 네트워크 설정 없이 간단한 공유 환경이 필요한 경우.

    VirtFS는 기본적으로 KVM(QEMU)을 기반으로 설계된 기술이므로, KVM을 지원하지 않는 가상머신에서는 사용할 수 없습니다.
  NFS를 사용하는 것이 적합한 경우:
    네트워크를 통한 공유가 필요(다른 물리적 장치나 여러 가상머신 간 공유).
    VirtFS를 지원하지 않는 환경(예: 비-QEMU/KVM 기반 가상화 기술)에서 사용.

📅 2024-12-03 05:29:48
  https://serverfault.com/questions/1043441/how-to-run-kvm-nested-in-wsl2-or-vmware
  https://learn.microsoft.com/en-us/windows/wsl/wsl-config#main-wsl-settings
    ⚖️ nestedVirtualization*
      boolean; default: true
      Boolean to turn on or off nested virtualization, enabling other nested VMs to run inside WSL 2. Only available for Windows 11
https://www.libvirt.org/index.html

➡️ NFS
dotenv-linter
  string match의 옵션: -qgr
  -q (quiet):
  -g (global):
  -r (regex):
regex
  (?:...)는 캡처하지 않는 그룹(non-capturing group) ..

❓ PCRE is a defacto standard... 


rust 패키지 프로젝트 루트로 꺼내기..
  어차피 study 용도이므로. / 
프로젝트 이름 바꾸기.

BFS
  cgroup(Control Groups)은 Linux 커널 기능으로, 프로세스 그룹에 리소스(예: CPU, 메모리, I/O 등)를 제한하거나 모니터링할 수 있도록 설계된 메커니즘입니다


🚨 Wayland 사용 중 우분투 22 -> 24 업그레이드 후, 📅 2024-12-03 11:21:35
  로그인 화면에서 아무것도 못할 정도로 매우 느려짐. 마우스 작동 안 됨. 키보드 작동 간헐적으로만 작동하고 거의 안 됨.
  그냥 wayland 쓰지 말자. 잠금모드 해제 시에도 문제 생기고..
  >> Format..

>> https://program-developers-story.tistory.com/83
Failed to execute /home/linuxbrew/.linuxbrew/Cellar/systemd/256.9/bin/pkttyagent: No such file or directory

📰 우분투에서는 https://github.com/lsd-rs/lsd 이거 icons unicoed 로 변경하는 init_in_fish ? ?흠..


🧮 cat /proc/devices
  번호 확인할떄에는 lsmod 보다는 이거 써야 함.


라즈베리파이에 설치하는데.. (라즈베리에 설치할 필요는 없지만..) 📅 2024-12-03 11:40:09

  /etc/resolv.conf
    nameserver 10.0.0.17
    nameserver 10.1.0.12
    nameserver 10.16.0.7

    설정 안해주니까 .. sudo apt install 안됨..
⚓ USB-to-serial adapter ; https://en.wikipedia.org/wiki/USB-to-serial_adapter
  📝 e.g. 🪱 USB to TTL serial Cable
  🪱 TTL-level UART serial data...
⚓ Transistor–transistor logic ; https://en.wikipedia.org/wiki/Transistor%E2%80%93transistor_logic#Serial_signaling
  # Serial signaling
########## https://www.prolific.com.tw/US/ShowProduct.aspx?pcid=41&showlevel=0041-0041
🚨 https://www.reddit.com/r/embedded/comments/16ike8r/help_pl2303_drivers_for_linux_or_alternative/?rdt=34479
  https://www.reddit.com/r/embedded/comments/16ike8r/help_pl2303_drivers_for_linux_or_alternative/?rdt=34479
  ❓ 컴퓨터를 껏다키니까 다시 터미널에 시리얼 잘 보인다.. 이 잘 보이는 상태에서 minicom 은 유지한 상태로 라즈베리파이를 전원을 껏다켜거나 reset 해도 유지되며 잘 보인다. 📅 2024-12-03 19:30:15


Universal Boot Loader
⚓ U-boot Docs ; https://docs.u-boot.org/en/latest/index.html
  # Implementation
    ⚓🚣 Directory hierarchy ; https://docs.u-boot.org/en/latest/develop/directories.html
    ⚓ Standard Boot Overview ; https://docs.u-boot.org/en/latest/develop/bootstd/overview.html
    # Driver Model

    ⚓🔰 Board Initialisation Flow ; https://docs.u-boot.org/en/latest/develop/init.html

https://github.com/RobertCNelson/u-boot
  mirror of git://git.denx.de/u-boot.git
https://source.denx.de/u-boot/u-boot
https://www.denx.de/project/u-boot/

  Flatpack ; https://docs.flatpak.org/en/latest/basic-concepts.html
* Architecture
  * Software component
    ❔ Plug-in ; https://en.wikipedia.org/wiki/Plug-in_(computing)
    ❔ Shell ; https://en.wikipedia.org/wiki/Shell_(computing)
    ❔ Sandbox ; https://en.wiktionary.org/wiki/sandbox
    ❔ Time Window ; ...
    ❔ Nix ; ...
    ❔ Middleware ; ...
      애플리케이션이 다양한 데이터베이스와 통신할 수 있게 해줍니다.
      메시지 브로커는 분산 시스템에서 데이터를 교환하는 애플리케이션 간의 메시지를 중계합니다
      웹 애플리케이션 서버는 클라이언트(예: 웹 브라우저)와 백엔드 애플리케이션 간의 통신을 관리합니다
  * ❔ How Embedded Linux Works ; ...
* Hardware
  ❔ LSB, MSB; Least/Most Significant Bit.
    Big endian, Ltitle endian
  ❔ X Window System ; https://en.wikipedia.org/wiki/X_Window_System
* Programming
  ❔ Full qualified name ; https://en.wikipedia.org/wiki/Fully_qualified_name
  ❔ Reification ; https://en.wikipedia.org/wiki/Reification_(computer_science)
  ❔ OOP ; ...
    ❔ Polymorphism ; ...
  ❔🆚 Value Categories ; ...
    https://learn.microsoft.com/en-us/cpp/cpp/lvalues-and-rvalues-visual-cpp?view=msvc-170  
  ❔ Evaluation Strategy ; https://en.wikipedia.org/wiki/Evaluation_strategy#Call_by_copy-restore
    ... side effect
  ❔ Object copying ; https://en.wikipedia.org/wiki/Object_copying
    📍 Reference copy, Sahllow copy, Deep copy
  ❔ Inheritance ; .. 장점 ,,, 계층적 분류 및 관리의 용이함., 재사용과 확장을 통한 소프트웨어의 생산성 향상
    ❔🆚 upcast, downcast
    ❔ dominance, virtual ... ➡️ Multiple base classes
  ❔ C++ - References (&)
  ❔ C++ - static.. 생명주기, 공간 특성 (사용 범위/🚣공유. static 은 함수 사이에 공유 목적!) 시간적 특성, 
  ❔ C++ - operator overloading
    friend 가 필요할 때와 그 이유.
* Tools
  ❔ Development Containers ; https://containers.dev/


U-boot

GRub vs U-boot
  특정
  =
  사용 플랫폼	      데스크탑, 서버 (BIOS/UEFI 기반)	      임베디드 시스템 (ARM, SoC, 라즈베리파이 등)
  부팅 방식	        메뉴 기반 멀티부팅	                  스크립트 기반 또는 환경 변수로 부팅

  GRUB은 전통적인 BIOS/UEFI 기반의 부트로더로, 주로 데스크탑/서버 환경에서 사용됩니다.
  GRUB은 하드웨어 초기화는 하지 않고, 하드웨어 초기화는 BIOS나 UEFI 펌웨어가 담당합니다.
  GRUB은 초기화된 환경에서 운영 체제를 선택적으로 부팅하는 역할을 합니다.

부팅 프로세스의 주요 단계
  1) 하드웨어 초기화 (Firmware / Boot ROM)
  담당자: SoC 내장 ROM 코드, BIOS, UEFI 펌웨어.
>> steps...
  git clone https://github.com/RobertCNelson/u-boot
  cd u-boot
  # 기본 설정 파일 생성하는 명령어
  # sudo apt install crossbuild-essential-armhf bison flex
  make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- rpi_4_32b_defconfig
  make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- all

  # 실제로 빌드.
  # sudo aept-get install libssl-dev

  # 빌드가 u-boot, u-boot-nodtb.bin, u-boot.bin 3개 나옴. 그 중 라즈베리에서 필요한 파일은  u-boot.bin

  📰 nfs 로 공유 + copy 하기.
  # GNU EABI (Embedded Application Binary Interface) 를
  make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- rpi_4_32b_defconfig
  #make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- menuconfig
  # make ARCH=arm CROSS_COMPILE=(which arm-linux-gnueabihf)- menuconfig
  #   - Device Tree Control: .. bcm2711-rpi-4-b.dts
  #     // in u-boot: fd bcm2711-rpi-4-b.dts
  make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- all

  # 🔰 U-boot ; https://docs.u-boot.org/en/latest/
  # https://forums.raspberrypi.com/viewtopic.php?t=330177
  : '

  🪱 부트로더는 하드웨어 초기화와 운영 체제(OS) 또는 커널을 로드하는 프로그램입니다.
  🔢 In rasberry Pi
    **/boot/firmware/config.txt**에 [all] 섹션을 설정해서 부팅한 방식은 라즈베리파이 전용 부트로더 설정 방식입니다.
    이 방식은 GRUB이나 U-Boot 같은 부트로더 자체의 설정이 아니라, **라즈베리파이의 펌웨어(GPU 펌웨어)**가 사용하는 설정 파일입니다
      config.txt는 라즈베리파이의 GPU 펌웨어가 사용하는 설정 파일입니다.
      펌웨어가 초기화된 후, 여기서 지정된 kernel=u-boot.bin에 따라 U-Boot 또는 다른 부트로더를 로드합니다.

      U-Boot는 이후 하드웨어 초기화와 커널 로드를 수행하는 2단계 부트로더 역할을 합니다.
      GRUB은 U-Boot처럼 사용 가능하지만, 라즈베리파이에서 직접 GRUB을 사용하는 경우는 드뭅니다. 보통 UEFI 환경에서 GRUB이 동작합니다.
    file /boot/firmware/config.txt
      [all]
      enable_uart=1
      kernel=u-boot.bin
      # 한 줄 띄우자.. 혹시 모름..
    file /boot/firmware/cmdline.txt
      복사 후.. PARTUUID 제외하고
      console=serial0,115200 console=ttyS0 root=PARTUUID=d4c41ee9-02 rootfstype=ext4 fsck.repair=yes rootwait // 이후는 지우기. root=PARTUUID 는 기기마다 다른듯.
          
    console=serial0,115200 설정은 라즈베리파이가 내장 UART 포트인 serial0을 통해 콘솔을 사용하는 설정입니다. 이 포트는 GPIO 핀에 연결된 UART를 사용하여 라즈베리파이와 외부 장치(예: USB-to-Serial 어댑터) 간의 통신을 합니다.
    # **console=ttyS0**는 외부 USB-to-Serial 어댑터와 연결된 시리얼 포트를 사용하려는 설정인데, 이 경우 내장 UART인 serial0을 사용하지 않게 되어, 라즈베리파이의 기본 시리얼 포트(serial0)를 통해 콘솔 출력을 볼 수 없습니다.
    #   그러니까 송신이 없고 수신만 잇던건가?
    #    네, 정확히 말씀하신 대로일 수 있습니다. **console=ttyS0**만 설정되어 있으면, 라즈베리파이가 ttyS0 포트에서 수신만 할 수 있게 설정되었을 가능성이 있습니다.
  '
  ; sync or reboot
  "U-Boot 2025.01-rc3-00042-...
  .
  🔢 cp /home/wbfw109v2/pi_bsp/u-boot/u-boot.bin /nfs/class/
  // in raspberry pi
  🔢 sudo cp /mnt/host/class/u-boot.bin /boot/firmware/


  // TFTP (Trivial File Transfer Protocol).. default? 를 이용해서 사용하는 ... 방식이라 이대로 일단 커널부팅하면 커널이미지가 아니라서 Error 가 뜨긴 한다.

  reset? reboot 명령어 중에? 3, 2, 1.. 0 이러는 동안 엔터를 누르면 부트로더로 진입이 된다?
  // reset이나 reboot 명령어를 실행한 후, 3, 2, 1... 카운트다운이 끝나기 전에 키보드에서 Enter 키를 누르면 U-Boot의 부트로더로 진입할 수 있습니다. 이 때, U-Boot 명령어를 통해 커널 이미지를 로드하거나, 커널 부팅을 수동으로 조정할 수 있습니다.

  setenv 로 설정한 거를 볼 수 있는게 printenv

  printenv bootargs
  
  printenv bootargs
  printenv bootcmd
  printenv user_mmc_boot  // not defined.. 그래서 새로 만들려고 하는 것.
  # u-boot 에서 그냥 부팅 되면 커널을 못불러와서 라즈베리파이를 부팅하지 못함. 그래서 이를 부팅하는 용도이다.

  printenv bootargs
    ## Error: "bootargs" not defined
  U-Boot> printenv bootcmd                                                     
    bootcmd=bootflow scan  
  printenv user_mmc_boot
    ## Error: "user_mmc_boot" not defined  

  🔢 setenv bootargs 8250.nr_uarts=1 console=ttyS0,115200 root=/dev/mmcblk0p2 rootwait rw
  🔢 setenv bootcmd 'run user_mmc_boot'
  🔢 setenv user_mmc_boot 'mmc dev 0; fatload mmc 0:1 ${kernel_addr_r} kernel7l.img; fatload mmc 0:1 ${fdt_addr_r} bcm2711-rpi-4-b.dtb; bootz ${kernel_addr_r} - ${fdt_addr_r} '
    bcm2711-rpi-4-b.dtb .. device tree 파일..
  🔢 saveenv //!!!!!
  printenv bootcmd
  #fatal load 시, mmc 0:1번.. 
  printenv kernel_addr_r

  ??? 명령어 목록 보는 방법?
  md: Memory Display
  mw: Memory write (fill)
  // set, celar, level

  // gpf cell zero.. l: long
  md.1 0xfe20000000 1
  md.1 0xfe20000000 4
  // ?초기값은 00으로 설청되어있는건가
  mw.l 0xfe200000
  
  // Register View
  mw.1 0xfe20001c 0x40
  mx.1 0xfe200028 0x40
  mx.1 0xfe200000 0x09240000
  nd,1 0xfe20000
  nx,1 0xfe20001c 0x3c0
  // UART 14 15 는 절대 안건들드로고 해야 한다.

  // 버튼 누르고 있는 상태에서..
  md.l 0xfe200034 1

gcc gpiokey.c -o gpiokey.c
gcc gpioled.c -o gpioled

[   14.340528] ---[ end Kernel panic - not syncing: No working init found.  Try passing init= optio-
xhci-pci init cannot map PCI mem bar  
No USB controllers found 
https://wikidocs.net/18317
  bootcode.bin  >> 라즈베리파이용 전용 부트 로더.
    >> 
raspberrypi.com/

📰 TODO: https://program-developers-story.tistory.com/83
https://en.wikipedia.org/wiki/Transistor%E2%80%93transistor_logic#Serial_signaling


라즈베리파이, 우분투 커널 타이머.
📰 Device.. 소켓들 정리하자.. READMe. 로..
  New T

❓ Unresolved problem
  systemctl daemon-reload
  Failed to execute /home/linuxbrew/.linuxbrew/Cellar/systemd/256.9/bin/pkttyagent: No such file or directory


coapraz.co.kr New Technology Capacitive 8-Channel LEd module 9A471G

coapraz.co.kr
https://datasheets.raspberrypi.com/
https://datasheets.raspberrypi.com/bcm2711/bcm2711-peripherals.pdf
  peripherals.pdf

find . -type f ! -name 'u-boot.bin' -exec mv {} /nfs/class/u-boot \;

BMC2835 스펙 문서 --. 라즈베리파이... 
  물리주소와 가ㅏㅇ 주소가 있나?
GPIO 쓸려고 하면.. 뭘 설정해줘야하나?

  gpio, gpioset?? 저넹?
  gpclear zero 0 1 ?
  gpfset 에 입력으로/출력으로 할 건지 선택하는 기능 있음.


## GPIO Pinout Table
Function Select 0... >> GPIO 0번?

📝 bootfs 의 파일들이 rootfs 의 /boot/firmware 에 부팅 시에 올라간다.
  그래서 SD 카드 리더기로 sd카드를 보면 rootfs 에 아무것도 없다.

.rw-r--r-- wbfw109v2 wbfw109v2  602 KB Thu Aug  8 16:50:50 2024 📄 u-boot.bin
ss -tuln | grep :22

scp raspi_sd_9Gb.img wbfw109v2@10.10.14.19:~/.

time sudo dd if=/dev/sdb of=raspi_sd_backup_20241203.img bs=512 count=19931135 status=progress
19931136

https://raspberry-pi.fr/enable-port-serial-raspberry-pi-4/


명령어 수행 과정
  Fetch
  Decode
  Execute
ARM 명령어 파이프라인
  10ns 10ns ...
  🛍️ e.g.
    LDR
    LDR
    ADd
    SUB
    STR
Instruction Set Type
  CISC, RISC
Memory types
  Main memory
    e.g. DRAN
  Secondary memory
    e.g. HDd, SD, MMC
  Cache
    e.g. SRAM


  휘발성 메모리
    RAM
      DRAM
      SRAM
  비휘발성 메모리
    ROM
    Hybrid
      EEPROM (electrically erasable programmable read-only memory)
      
      FLASH
        NOR (❓ MCU 에 있는 거는 모두 이것..?)
        NAND
  Memory Controller
    ADDR
    nCs ??
    nWr ??
    Data


  I/O-mappd peripheral 🆚 Mermory mapped I/O
  Interrupt Vector 지정 방식: Fixed 🆚 ..??
  DMa
  BUS
임베디드 시스템 설계 절차
  gkemdnpdj
🪱 커널 포팅



하버드 아키텍처 vs 폰 노이만 아키텍처
  현재는 하버드 아키텍처 만 사용한다고 함.
    명령어와 데이터 메모리가 동일한 공간 vs 명령어와 데이터 메모리가 별개


ARCH=arm make tags
ls -
.vimrc
  set tags+=/home/ubuntu/pi_bsp_/ub--ot/tags
  set tags+=/home/ubuntu/pi_bsp_/ub--ot/tags
vi _t _start  ❓??? 뭘 보오ㅕ주ㅡㄴ거지.
u-boot
  bat arch/arm/lib/vectors.S // ? 무슨 파일? .S?
  cd arch/arm/cpu/armv7
  cp start.S start.S_org
  hx start.S

  어셈블리는 라벨 명을 쓴다?

  bl kcci_led_test
    이 주소를 다 복귀하고
  bl _main 으로 실행한다?

3. tj 함수명/구조체 명 => 지정한 함수 또는 구조체로 jump
4. sts 함수명/구조체 명 => tj(tag jump)와 동일하지만 기존 화면을 수평으로 split 하여
   보여준다. 현재 창과 보고 싶은 tag를 동시에 보려고 할 때 유용함.

🆚
  Function Select (GPFSEL) 레지스터
    GPIO 핀의 동작 모드를 설정하며, 각 핀이 3비트를 차지.
    출력 모드로 설정하기 위해 001을 사용.
  GPSET0 / GPCLR0 레지스터
    GPIO 핀을 켜고 끌 때 사용하며, 각 핀이 1비트를 차지.
    핀 번호에 직접 대응하는 비트를 사용.
5. vi -t _start //entry point 파일 오픈
   u-boot 분석 및 어셈블러 예제 - LEDO-3 Shift 테스트 어셈블리어 예제
   u-boot 시작점 ~/pi_bsp/u-boot$ arch/arm/lib/vectors.S
   // _start (u-boot.lds)

   $ vi ~/pi_bsp/u-boot/arch/arm/cpu/armv7/start.S

    127 bl kcci_led_test
      bl(Branch with Link) 명령어는 함수 호출 시 현재 주소를 **링크 레지스터(LR)**에 저장하여, 함수 실행 후 lr을 통해 호출 위치로 복귀할 수 있게 합니다.
    128 bl _main
    
    396 ENTRY(kcci_led_test)
      397 ldr r0,=0xFE200000 /*BCM2711 GPIO BASE*/
      398 ldr r1,=0x09240000 /*gpio6~9 signal output*/
      399 str r1,[r0,#0x00] /*GPFSELO*/
        ✔️ 0x09240000은 GPIO 6~9를 출력 모드로 설정하는 비트 패턴. 그러니까 output 모드로 설정하고 set 을 해야 LED 가 켜져서 사전 초기화를 한 것. 아래는 초기화 값으로 LED 1개를 먼저 킨 것.
      400 ldr r1,=0x00000040 /*gpio6 set*/
      401 mov r2, #4 /*led count*/
    402 ledloop:
      403 str r1,[r0,#0x1C] /*GPSETO ledX on*/ /* ✔️ r1의 값을 r0 + offset 에 저장 */
      404 ldr r3,=0x400000 /*delay 0x400000(4,194,304) / 54MHz = 0.7767Sec */ 
        BCM2711의 54MHz 클럭 속도 기준으로 계산됨
        0x400000 / 54,000,000 = 약 0.776초
        이 루프는 LED가 ON 상태로 유지되는 시간을 설정.
    405 delay:
      406 subs r3,r3, #1
      407 bne delay
      408 str r1,[r0,#0x28] /*GPCLRO ledX off*/
      409 mov r1, r1, LSL #1    /* ✔️ LSL; Logial Shift Left */
        GPIO 명령어 instruction 이 3비트씩 차지하지 않았나? 잘 모르곘어.. 왜 되지?
          아..GIOFSEL0, GPIOSET.. 다른 경로로 셋할 수 있음.
        * 그러니까 16진수 0x40000 이고 이거에 댛나 루프. whlie( dealy ..;- > c언어로 go to 문) */
      410 subs r2, r2, #1
      411 bne ledloop /* bne(Branch if Not Equal); ✔️ 연산 결과의 Z (zero) 플래그가 0일 경우 루프를 반복. */
      412 mov pc, lr
    413 ENDPROC(kcci_led_test)

   - 빌드 후 부팅 및 부팅시 LED 확인
   $ sudo cp u-boot.bin /boot/firmware/u-boot.bin

   - Disassembly 분석
   ~/pi_bsp/u-boot/arch/arm/cpu/armv7$ arm-linux-gnueabihf-objdump -S start.o

  어셈블리 (.S) 코드 (어셈블리) 에서 # 으로 시작하는 값은 상수라고 한다!!
    📍 "[ ]" means pointer.. (address). if a Regsiter not in "[]", It means value of the register's address
    SUB R0, R1, OP2
      R0 = R1 - R2 (OP2)
    LDR R0, [R4, R5]    # LOAD regsiter
      R4 is base register
      R5 is offset
    STR R0, [R4, R5]    # STore register
      R4 is base register
      R5 is offset
    📝 "@" 가 한줄 주석.
모든 ARM 명령어는 조건부 실행이 가능. 32bit로 구성됨.
  32 bit ARM instruction features
    Load/Store 같은 메모리 참조 명령, Branch 명령에서 모두 상대주소 (indirect address)  방식 사용
      Immediate 상수는 32비트 명령어 내에 표시된다??? 
      immediate 상수는 32비트 이하의 상수이다?
    ARM 명령은 크게 11개의 기본적인 type 으로 구분된다.

  32비트의 고정된 명령 길이를 사용하는 이유
    Pipeline 구성이 용이
    명령 디코더의 구현이 쉽다.
    고속으로 처리 가능
Operation MOde
  Usre Mode
  FIq (Fast Interrupt Request) Mode
    전용 레지스터가 더 많아서 빠르다고 함. ; R8 ~ R12
  IRQ (Interrupt Request) Mode
  SVC (Supervisor) Mode
    Systemcall 에 의해서 커널이 동작하는 ㅗㅁ드
  Abort Mode
  Undefined Mode
  Sytsem mode
    User mode 와 동일한 모드지만 priviliage mode 이다.
37개의 레지스터 중에
  30: Genreal Register
  ❓ Shadow register... 파란색?
  Thumb register?
  R14; LR (Link Register)
    서브루틴에서 되돌아 갈 위치 정보를 저장하고 있는 레지스터
Stack Pointer
  프로그램에서 사용하는 스택의 위치 레지스터. 
  ❔ ARM 은 별도의 스택 명령이 없음.. LDR/STR, LDM/STM 과 같은 데이터 전송 명령을 사용하여 스택을 처리한다고 함.
Program Status Register (PSR)
  1개의 CPSR (Current Program Status Register)
  5개의 SPSR (Saved Program Status Register)
  PSR Register structure
    Condition code flag 📰
      Negative flag ("N")
      ...
      "J" ..
        Java 바이트 코드 실행..
    Contro bits
    Reserved
Aligned Access
  HalfWord Access
  Word Access
Un-aligned Access
  홀수번지에 접근하면 Abort 발생
ARM Architecture v6 이상에서 지원되는 16비트 명령어.. Thumb-2 명령어
  16, 32 bit 명령어 혼재되어서 들어가는 명령어..
  Code density, performance 를 개선.
❔ subs 명령 쓸 때 sub.. 하다보면 z 플래그? 가 1이 된다고 한다?
  ❓ 어셈블리 명령어에 s 가 안붙으면 항상 실행된다고 한다?
  ANDS
  S가 붙은 명령어: 연산 결과에 따라 조건 플래그(N, Z, C, V)를 업데이트합니다.; condition field
    N	Negative	연산 결과가 음수일 때 1로 설정됩니다.
    Z	Zero	연산 결과가 0일 때 1로 설정됩니다.
    C	Carry	연산에서 캐리가 발생했을 때 1로 설정됩니다.
    V	Overflow	부호 있는 연산에서 오버플로가 발생했을 때 1로 설정됩니다.
분기 명령어의 구성..
  Condition field, Link bit.. offset.. +32 -32 with uppest bit (+/- sign)

.S file: assembler source code file 📅 2024-12-05 00:35:23
  https://en.wikipedia.org/wiki/List_of_filename_extensions_(S%E2%80%93Z)#.S

임베디드 시스템 설계 절차
  시스템 용도 분석
    하드웨어 설계 흐름
      하드웨어 사양 결정
      프로세서, 메모리 및 주변 장치 선정
      회로도 및 PCB 설계
      하드웨어 조립 및 시험
    소프트웨어 설계 흐름
      소프트웨어 사양 결정
      OS 사용 여부 및 OS 선정
      개발 환경 선정
      시스템 소프트웨어 설계
      디바이스 드라이버 설계
      애플리케이션 설계
  시스템 통합 시험


📰⚓ Windows Default Keybindings ; https://marketplace.visualstudio.com/items?itemName=smcpeak.default-keys-windows
  우분투에 통하는지 확인..



Global Motion Compensation (GMC) is a technique used to compensate for the motion of the camera or the entire scene in tracking algorithms. It helps in isolating the motion of tracked objects from global motion, such as camera panning, tilting, or zooming, which could otherwise distort the motion patterns of the objects in the scene.

Dynamic device management
⚓ udev ; https://man7.org/linux/man-pages/man7/udev.7.html
  #📎 DESCRIPTION 📅 2024-10-11 15:09:24
    The kernel usually just assigns unpredictable device names based on the order of discovery.
    Meaningful symlinks or network device names provide a way to reliably identify devices based on their properties or current configuration.

    🪱 The udev daemon, systemd-udevd.service(8), ...  When udev receives a device event, it matches its configured set of rules against various device attributes to identify the device.
    🪱 udev database

  # Keys
    # ATTRS{filename}

    The ENV, GROUP, MODE, NAME, OWNER, PROGRAM, RUN, SECLABEL, and SYMLINK fields support simple string substitutions. 
⚓ udevadm ; https://man7.org/linux/man-pages/man8/udevadm.8.html
  #🚣 Table 1. udevadm info output prefixes

lsusb
📰
  // STM32 VS Code Extension path ⚠️ Bug: It not interpret Variable Rference like ${userHome} 🔗 https://code.visualstudio.com/docs/editor/variables-reference
  "STM32VSCodeExtension.cubeCLT.path": "/home/wbfw109v2/st/stm32cubeclt",
  "STM32VSCodeExtension.projectCreator.executablePath": "/home/wbfw109v2/STM32CubeMX/STM32CubeMX",
  "STM32VSCodeExtension.productFinder.executablePath": "/home/wbfw109v2/STMCUFinder/STMCUFinder",





➡️ 음 이렇게 보니까 내 개발컴퓨터에서 개발할떄에는 그냥 시스템 패키지로 설치해서 개발하고 (크로스컴파일 포함)) 📅 2024-12-01 16:05:27
  어떤 "다른 사람과"의 프로젝트를 할 때에는 버전이 고정되서 안정적으로 배포해야하니까 그럴 때
    배포 테스트 환경에서는 Docker,
    배포 production 환경에서는
      Container Management 🔪 Podman
      - Image Build 🔪 Kaniko
        non-root user (not requires root permission)
      - Image Management 🔪 Skopeo
      Kubernetes Application Management 🔪 Helm
    둘 모두 사용하기 어려운 저사양의 라즈베리파이 같은 환경
      - nix

그러면 Create empty project 이후, 보드 설정을 해줘야하나? ioc 파일로부터 만들기 해야하나

📰 dd 복사 명령어..  <-> 유틸리티 만들기
📰 면접 T32 명령어 셋 vs A32 명령어 셋

note/temp_to_be_copied.txt
arm 아키텍처 BCM2711 ARM Peripherals 에서 start.S 코드 일부인데 다음을 해야 해.
/* ⚙️ */
ENTRY(kcci_led_test)
	ldr r0,=0xFE200000 /*BCM2711 GPIO BASE*/
	ldr r1,=0x09240000 /*gpio6~9 signal output*/
	str r1,[r0,#0x00] /*GPFSELO*/
	ldr r1,=0x00000040 /*gpio6 set*/
	mov r2, #4 /*led count*/
ledloop:
	str r1,[r0,#0x1C] /*GPSETO ledX on*/
	ldr r3,=0x400000 /*delay 0x400000(4,194,304) / 54MHz = 0.7767Sec */
delay:
	subs r3,r3, #1
	bne delay
	str r1,[r0,#0x28] /*GPCLRO ledX off*/
	mov r1, r1, LSL #1
	subs r2, r2, #1
	bne ledloop
	mov pc, lr
ENDPROC(kcci_led_test)

[수정] 어셈블리어 LED 8개 (현재 4개) 쉬프트하기. GPIO 6 ~ 13 번까지 할당되어있음
[추가] 딜레이 도는 중에 버튼 1 (GPIO 17) 이 눌렸으면 LED 루프 멈추고, 부팅으로 돌아가도록.


⚓ Datasheet: BCM2711 ARM Peripherals ; https://datasheets.raspberrypi.com/bcm2711/bcm2711-peripherals.pdf
  ❔ Using SoC:
    [Soc: Raspberry Pi 4 Model B]
    https://datasheets.raspberrypi.com/bcm2711/bcm2711-peripherals.pdf
⚓ ARM docs ; https://developer.arm.com/documentation
  # Developing on Arm
  # Architecture and Processors
    ⚓ Archiecture ;  https://developer.arm.com/architectures
      ⚓🚣 A32 Instruction Set Architecture ; https://developer.arm.com/Architectures/A32%20Instruction%20Set%20Architecture
      ⚓ A64 Instruction Set Architecture ; https://developer.arm.com/Architectures/A64%20Instruction%20Set%20Architecture
    ⚓ Processor ; https://developer.arm.com/Processors
  # Tools and Software


mkdir -p $HOME/backup/raspbian/


sudo fdisk -l /dev/sdb
time dd if=/dev/sdb of=$HOME/backup/raspbian/raspbian_backup_20241204.img bs=512 count=19931136 status=progress
❗ 
  그리고 블록(섹터)의 번호는 0부터 시작하므로, count에 입력한 값만큼의 블록이 복사됩니다. 
  총 섹터 개수 = 마지막 섹터 번호 - 첫 번째 섹터 번호 + 1
              = 19931135 - 0 + 1
              = 19931136
  dd 이후 sync 하기


❓ Disassembly: arm-linux-gnueabifhf-objdump -S start.o > start.txt
arm-linux-gnueabifhf-objdump -S study/assembly_study/sum.o | bat
  Command 'arm-linux-gnueabifhf-objdump' not found, did you mean:
  command 'arm-linux-gnueabihf-objdump' from deb binutils-arm-linux-gnueabihf (2.42-4ubuntu2.3)
  Try: sudo apt install <deb name>
➡️ brew install arm-linux-gnueabihf-binutils



clang --target=arm-linux-gnueabi -march=armv7-a -o sum.o -c sum.s
clang --target=aarch64-linux-gnu -o sum.o -c sum.s
clang --target=aarch64-linux-gnu -o sum sum.o

3. 라즈베리파이와 젯슨 나노의 요약
  디바이스	기본 아키텍처	운영 체제에 따라 작동 모드
  라즈베리파이 3/4/400	AArch64 (64비트)	기본 32비트, 64비트 OS 사용 가능
  라즈베리파이 Zero/1/2	32비트 (ARMv6/ARMv7)	64비트 미지원
  젯슨 나노	AArch64 (64비트)	기본 64비트

clang --target=aarch64-linux-gnu -o sum.o -c sum.s
clang --target=aarch64-linux-gnu -o sum sum.o

/usr/bin/ld: unrecognised emulation mode: aarch64linux
Supported emulations: elf_x86_64 elf32_x86_64 elf_i386 elf_iamcu i386pep i386pe
clang: error: linker command failed with exit code 1 (use -v to see invocation)
**gcc-aarch64-linux-gnu**와 같은 크로스 컴파일러를 설치해야 하는 이유는 AArch64용 표준 라이브러리와 링커를 제공하기 때문입니다. clang 자체는 크로스 컴파일 타겟을 지원하지만, 실제 실행 파일을 생성하려면 링킹 과정에서 타겟 아키텍처에 맞는 표준 라이브러리와 링커가 필요합니다.
  따라서, clang을 사용하면서도 링킹 과정을 위해 **GNU 크로스 툴체인의 일부(특히 링커와 라이브러리)**를 설치해야 합니다.
➡️ brew install aarch64-elf-gcc

clang --target=aarch64-linux-gnu -o sum sum.o --sysroot=(which aarch64-elf-gcc) -fuse-ld=aarch64elf

brew install arm-linux-gnueabihf-binutils

clang --target=arm-linux-gnueabihf --sysroot=/usr/arm-linux-gnueabihf -o sum sum.o

🆚 https://hybridego.net/entry/armlinuxgnueabihfgcc-%EC%99%80-armlinuxgnueabigcc-%EC%B0%A8%EC%9D%B4
  fpu: Function Calling Convention


clang --target=aarch64-linux-gnu -o sum.o -c sum.s
clang --target=aarch64-linux-gnu -o sum sum.o
  /usr/bin/aarch64-linux-gnu-ld: sum.o: in function `_start':
  (.text+0x0): multiple definition of `_start'; /usr/lib/gcc-cross/aarch64-linux-gnu/13/../../../../aarch64-linux-gnu/lib/Scrt1.o:(.text+0x0): first defined here
  /usr/bin/aarch64-linux-gnu-ld: /usr/lib/gcc-cross/aarch64-linux-gnu/13/../../../../aarch64-linux-gnu/lib/Scrt1.o: in function `_start':
  (.text+0x1c): undefined reference to `main'
  /usr/bin/aarch64-linux-gnu-ld: (.text+0x20): undefined reference to `main'
  clang: error: linker command failed with exit code 1 (use -v to see invocation)
clang --target=aarch64-linux-gnu -o sum sum.o -nostartfiles -nodefaultlibs
file sum
  sum: ELF 64-bit LSB pie executable, ARM aarch64, version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux-aarch64.so.1, not stripped


clang --target=aarch64-linux-gnu -o sum sum.c -static
clang --target=aarch64-linux-gnu -o sum.o -c sum.s
clang --target=aarch64-linux-gnu -o sum sum.o -static -nostartfiles -nodefaultlibs
file sum
  sum: ELF 64-bit LSB pie executable, ARM aarch64, version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux-aarch64.so.1, not stripped

qemu-aarch64 ./sum
➡️ qemu-aarch64: Could not open '/lib/ld-linux-aarch64.so.1': No such file or directory
  .. -static 추가하자.
qemu-aarch64 -gdb tcp::1234 ./sumㄷ -----------

clang --target=aarch64-linux-gnu -o sum.o -c sum.s
clang --target=aarch64-linux-gnu -o sum sum.o -static -nostartfiles -nodefaultlibs
qemu-aarch64 ./sum


clang --target=aarch64-linux-gnu -o sum sum.o

/usr/bin/ld: unrecognised emulation mode: aarch64linux
Supported emulations: elf_x86_64 elf32_x86_64 elf_i386 elf_iamcu i386pep i386pe
clang: error: linker command failed with exit code 1 (use -v to see invocation)


  네, 맞습니다. **glibc**가 x86_64 시스템에서는 설치되어 있지만, AArch64 (64비트 ARM 아키텍처)용 라이브러리가 없다면 QEMU가 실행할 때 ld-linux-aarch64.so.1과 같은 동적 라이브러리를 찾을 수 없어 오류가 발생할 수 있습니다.
➡️ qemu-aarch64: Could not open '/lib/ld-linux-aarch64.so.1': No such file or directory
  # Enable the arm64 architecture (this matches aarch64):
  sudo dpkg --add-architecture arm64
  sudo dpkg --remove-architecture arm64
  sudo dpkg --print-architecture
  # shows what foreign architectures are supported
  sudo dpkg --print-foreign-architectures

  echo "deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ $VERSION_CODENAME main restricted universe multiverse
  deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ $VERSION_CODENAME-updates main restricted universe multiverse
  deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ $VERSION_CODENAME-security main restricted universe multiverse
  deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ $VERSION_CODENAME-backports main restricted universe multiverse
  " | sudo tee /etc/apt/sources.list.d/amd64.list
  # Update the local repository caches:
  sudo apt update
  # Install the arm64 C library:
  sudo apt install glibc:arm64
  not works..

sudo dpkg --add-architecture amd64

ldd --version
  ldd (Ubuntu GLIBC 2.39-0ubuntu8.3) 2.39
https://answers.launchpad.net/ubuntu/noble/arm64/libc6
https://answers.launchpad.net/ubuntu/noble/arm64/libc6-dev-arm64-cross

libc6-dev-arm64-cross
 qemu-aarch64 -gdb tcp::1234 -L /usr/aarch64-linux-gnu ./sum


=============
ARM Compiler 6를 설치하면 armclang이 기본 포함되므로, 별도로 **armclang**을 설치할 필요는 없습니다.
LLVM/Clang만으로도 ARM 아키텍처 타겟 개발이 가능하며, 비용을 절감할 수 있지만 최적화 및 성능 측면에서 ARM Compiler가 유리할 수 있습니다.
비용 vs 최적화의 관점에서, 단순한 프로젝트는 LLVM/Clang이 적합하며, 성능이 중요한 상업 프로젝트는 ARM Compiler를 고려할 가치가 있습니다.


https://developer.arm.com/documentation/dui1093/e/Getting-Started-with-Arm-Compiler-6/Installing-Arm-Compiler?lang=en

https://developer.arm.com/Tools%20and%20Software/Arm%20Development%20Studio
  Arm Development Studio or manually install the component
https://developer.arm.com/documentation/ka005198/latest
0x09249249

KA005198
https://developer.arm.com/documentation/ka005198/latest

https://developer.arm.com/downloads/view/ACOMPE?revision=r6p23-00rel0


>> 맞습니다. **armclang**은 Arm Compiler의 일부로, LLVM/Clang 기반으로 만들어졌지만, Arm Compiler에만 포함된 상용 컴파일러입니다. 따라서 **armclang**은 LLVM 오픈 소스 프로젝트에는 포함되어 있지 않습니다.
  하지만 LLVM/Clang 자체는 ARM 아키텍처용 크로스 컴파일을 지원하며, 일부 기능은 armclang과 유사하게 사용할 수 있습니다.



⚓ Arm Compiler for Linux ; https://developer.arm.com/Tools%20and%20Software/Arm%20Compiler%20for%20Linux#Downloads
  bash -c "bash <(curl -L https://developer.arm.com/-/cdn-downloads/permalink/Arm-Compiler-for-Linux/Package/install.sh)"
Please choose the operating system on which you want to install Arm Compiler for Linux.
  7. Ubuntu-22.04
  Default: N/A The detected host is not supported
Please choose the Arm Compiler for Linux version which you want to install.
  // Default
Do you wish to run the product installer with default options? [Y/n] y

https://marketplace.visualstudio.com/items?itemName=Arm.virtual-hardware
arm clang 은 arm 계열에서만 설치가능한거야? 크로스컴파일용이 아니엇어?
  dd
>>>> https://marketplace.visualstudio.com/items?itemName=Mikhail-Arkhipov.armassemblyeditor
  이거까지가 최선..


STM32 extension depends on 
  dan-c-underwood.arm

ARM Assembly Editor
arm-linux-gnueabihf-objdump -S start.o

https://github.com/eblot/homebrew-armeabi

..helix? https://github.com/bergercookie/asm-lsp

부트로더 역할
  커널 이미지를 sd ram 에 적재하


📰 부트로더 역할.. 


Device
  NODE mcu vs ESP32 ... 
📰 noevim 으로 갈아타야하나..


➡️ JTAG 은 GPIO 핀을 5개를 써야하는 단점같은게 있어서 Serial Wired Device: ST-link 이런 것을 사용한다고 한다.
  ST-LINK는 STM32 MCU와 SWD(Single Wire Debug) 또는 JTAG를 통해 직접 통신합니다.
  펌웨어 업그레이드는 ST-LINK 자체 펌웨어를 대상으로 하기 때문에, MCU와의 통신 상태에 영향을 받지 않습니다.


yarn TODO:
  # https://yarnpkg.com/getting-started/install
  corepack enable


RUST_LOG=debug hx prototypes/_initialization/ubuntu/howto/run_qemu.fish > helix_debug.log 2>&1 &
volta install yarn@1.22.22
volta install node@21.7.1
yarn --version
top 명령에서 전체 명령어를 표시하도록 설정
기본적으로 top은 전체 명령어를 표시하지 않을 수 있습니다. 전체 명령어를 보려면 다음과 같은 설정을 할 수 있습니다.

top 실행 후, c 키를 눌러 전체 명령어 경로를 표시합니다.
이후 목록에서 hx로 시작하는 항목을 찾아보세요. hx 뒤에 전체 명령이 나와야 합니다.

yarn set version classic

Use `volta install yarn` to select a default version (see `volta help install` for more info).

온라인 주문: 
  open hardware ?
  네이버쇼핑 알파마이크로 - 리튬폴리머 배터리, 전류 센서 모듈
    리튬이온 보호회로 충전배터리는 과방전 과충전 방지가 다 들어가있어서 비싼 건 있다.




📰 [Fishshell]
  2. 장치에 마운트된 디렉토리로 들어가서, 추가로 상대경로 etc/os-release (예: /media/wbfw109v2/rootfs/etc/os-release)를 cat 하여
  (ID=raspbian) 이므로 raspbian + 뒤에 현재 날짜를 "_"으로 이어서 이름을 붙여서 이 파일을 $HOME/backup/raspbian/ 에 백업하는 스크립트
  백업하는 코드는 있음
    time dd if=/dev/sdb of=$HOME/backup/raspbian/raspbian_backup_20241204.img bs=512 count=19931136 status=progress
  // 필요 시 df -h, fdisk -l ... 로 해당 장치 + etc/os-release ID 가 맞냐고 묻는 질문하기 y, n

  bat /media/wbfw109v2/rootfs/etc/os-release

  lsblk -o NAME,FSTYPE,MOUNTPOINT,TRAN | grep usb
  #### Script: backup Raspberry pi
  === 🪱 SCSI는 Small Computer System Interface의 약자로, 컴퓨터와 주변 장치(디스크, 프린터, 스캐너 등) 간의 데이터를 전송하기 위한 인터페이스 표준을 의미합니다
  // 🪱 sd: SCSI disk
  " . USB 드라이브, SD 카드 리더기, 외장 하드 드라이브 등 저장 용량을 가진 USB 장치들은 보통 SCSI 디스크로 인식되며, /dev/sdb, /dev/sdc 등의 이름을 갖게 됩니다."
  # 가장 최근에 새로 인식한 장치를 인식해서, ..
❯ set connected_device (sudo dmesg | grep "\[sd.*\] Attached SCSI removable disk" | tail -1 | awk '{
    for(i=1; i<=NF; i++) {
      if ($i ~ /^\[sd.*\]$/) {        # Find values enclosed in square brackets
        print substr($i, 2, length($i)-2)   # Remove the square brackets and print the value
      }
    }
  }')
  echo $connected_device # 🛍️ e.g. sdb

  # Get the output of the 'mount' command and filter for /dev/$connected_device
  for line in (mount | grep sdb)
      # Extract the partition device and mount point using awk
      set partition_device (echo $line | awk '{print $1}')
      set mount_point (echo $line | awk '{print $3}')
      
      # Check if the mount point contains 'bootfs' or 'rootfs' and assign the variables accordingly
      if string match -q "*bootfs*" $mount_point
          set -g partition_bootfs $partition_device
          set -g partition_bootfs_mounted_dir $mount_point
      else if string match -q "*rootfs*" $mount_point
          set -g partition_rootfs $partition_device
          set -g partition_rootfs_mounted_dir $mount_point
      end
  end

  # Output the results
  echo "Partition Bootfs Device: $partition_bootfs"
  echo "Partition Bootfs Mounted Directory: $partition_bootfs_mounted_dir"
  echo "Partition Rootfs Device: $partition_rootfs"
  echo "Partition Rootfs Mounted Directory: $partition_rootfs_mounted_dir"

  ## 사용자에게 정보 확인 용도로 묻기 위한 정보.
  cat $partition_bootfs_mounted_dir/etc/os-release | grep '^ID=' | awk -F= '{print $2}' # raspbian
  cat /etc/os-release | grep '^ID=' | awk -F= '{print $2}' # ubuntu

  📰 뭘 할거냐 여기서.. 
  # 기능 2: export

  # 기능 1: imoprt
  # bootfs 만 import 하기
  # 전체 export
  하지만 /dev/sdb 자체가 마운트되지 않는 이유는 대부분의 경우, 하드 드라이브나 USB 장치 같은 디스크가 물리적으로 마운트되지는 않고, 그 안에 존재하는 파티션들이 각각 마운트되는 방식


cd ~/pi_bsp/u-boot/common/
touch cmd_kcci_led.c

menuconfig 를 하면 .config 가 바뀐다.
bat ~/pi_bsp/u-boot/.config

cmd_kcci_led.c


🚨 Makefile ; https://marketplace.visualstudio.com/items?itemName=ms-vscode.makefile-tools
  If you don't see that message, or you accidentally dismissed it, you can grant Makefile Tools permission to configure IntelliSense by running the C/C++: Change Configuration Provider... command and selecting Makefile Tools from the list.

  https://marketplace.visualstudio.com/items?itemName=ms-vscode.makefile-tools

  ❗
  >C/c++: Change Configuration Provider...
    "configurationProvider": "ms-vscode.makefile-tools",
  If you use CMakeLists.txt instead of Makefile,
    >C/c++: Change Configuration Provider...

    "configurationProvider": "ms-vscode.cmake-tools",


Would you like to configure C++ IntelliSense for this workspace using information from your Makefiles?
  Source: Makefile tools

Always configure C++ IntelliSense using information from your Makefiles upon opening?
  Source: Makefile tools



이게 u-boot 에서 c_cpp_properties 를 쓸 때
왜 컴파일러를 gcc 대신 clang 으로 하면
#include <asm/arch/imx-regs.h>
#include <asm/arch/clock.h>

여기에서
#include errors detected based on information provided by the configurationProvider setting. Squiggles are disabled for this translation unit (/home/wbfw109v2/pi_bsp/u-boot/arch/arm/cpu/arm1136/mx31/generic.c).C/C++(1696)
cannot open source file "asm/arch/imx-regs.h"C/C++(1696) 
이걸 발생시키지?


error is a false : expected a ';'C/C++(65) runs perfectly in gcc
https://github.com/microsoft/vscode-cpptools/issues/8607
Ignore my previous comment -- it appears your cppStandard is c++11 or c++14 and changing it to c++17 should fix the issue.


🚨 Unknown error: SD카드 새로 이전 복원지점으로 복원해서 오류 사라졋다..
  [    3.703248] mmc0: error -5 whilst initialising SD card
[    3.943386] mmc0: ADMA error: 0x02000000
  mmc: Multi Media Card... bad block 이 생긴 경우에도 이럴수 있다고 함?.

  u-boot mmc0: error -5 whilst initialising SD card
  mmc0: ADMA error: 0x02000000

  ADMA (Advanced DMA)란?
  **ADMA (Advanced Direct Memory Access)**는 SD/SDIO/MMC 컨트롤러에서 사용하는 고급 DMA(Direct Memory Access) 기술입니다. 일반 DMA보다 효율적이고 다양한 작업을 자동화하여, CPU 개입을 최소화하고 데이터 전송 속도를 높이는 데 초점을 맞춥니다.

  SD 카드 인터페이스에서, ADMA는 블록 데이터를 SD 카드와 시스템 메모리 간에 전송할 때 CPU의 개입을 최소화하기 위해 사용됩니다. 이는 특히 대량의 데이터를 처리하거나 고속 모드(SDR/DDR 모드)에서 유용합니다.


🔢 cp /home/wbfw109v2/pi_bsp/u-boot/u-boot.bin /nfs/class/
// in raspberry pi
🔢 sudo cp /mnt/host/class/u-boot.bin /boot/firmware/

📅 2024-12-05 15:58:50
  # host
  ssh-keygen -t rsa -b 2048
  ssh-copy-id r-pi.local
ssh pi@pi19.local 

#!/usr/bin/env fish

# === 설정 ===
set backup_image "/home/wbfw109v2/backup/raspbian/raspbian_backup_20241204.img"  # 백업 이미지 경로
set target_device "/dev/sdb"                                                    # 대상 디바이스
set target_partition "/dev/sdb1"                                                # 대상 파티션 (bootfs)
set temp_bootfs "bootfs.img"                                                    # 임시로 추출할 bootfs 이미지 이름

# === 백업 이미지의 파티션 정보 ===
set start_sector 8192        # 첫 번째 파티션의 시작 섹터
set sector_count 1048576     # 첫 번째 파티션의 섹터 수 (512MB)
set sector_size 512          # 섹터 크기 (바이트)

# === 복구 과정 ===

# 1. 백업 이미지에서 bootfs 파티션 추출
echo ">>> Step 1: Extracting bootfs partition from backup image..."
sudo dd if=$backup_image of=$temp_bootfs bs=$sector_size skip=$start_sector count=$sector_count status=progress

# 2. bootfs 이미지를 대상 SD 카드의 첫 번째 파티션에 복사
echo ">>> Step 2: Writing bootfs to the target device..."
sudo dd if=$temp_bootfs of=$target_partition bs=$sector_size status=progress

# 3. 파일 시스템 점검
echo ">>> Step 3: Checking the integ    rity of the bootfs partition..."
sudo fsck.vfat $target_partition
# Option 2 (Copy backup to original
# 4. 마운트하여 복구된 내용 확인
echo ">>> Step 4: Verifying the recovered bootfs..."
sudo mount $target_partition /mnt
ls /mnt
sudo umount /mnt

# 5. 완료 메시지
echo ">>> Bootfs recovery complete!"

# === 정리 ===
# 임시 파일 제거
echo ">>> Cleaning up temporary files..."
rm -f $temp_bootfs
u-boot 호출 순서_boot 커널 스타트
  u-boot.lds ENTRY(_start)
  arch/arm/lib/vectors.S _start
  arch/arm/cpu/armv7/start.S reset
  arch/arm/lib/crt0.S _main
  common/board_r.c board_init_r
  common/board_r.c init_sequence_r
  common/board_r.c run_main_loop 
  common/main.c main_loop
  common/autoboot.c autoboot_command
  common/cli.c  run_command_list
  common/cli_simple.c cli_simple_run_command_list
  common/cli_simple.c cli_simple_run_command
  common/command.c cmd_process 
  common/command.c cmd_call --> result = (cmdtp->cmd)(cmdtp, flag, argc, argv);

  🧮 bat ~/pi_bsp/u-boot/u-boot.lds
    // u-boot/u-boot.lds : link script? 
    bat u-boot.lds
      OUTPUT_FORMAt.. elf32-littlearm : 리틀 엔디안 방식

      ETNRY (_start) : 어셈블리 코드를 실행하겟다.
      SECTIONS : u-boot 실행 과정.
        ALIGN(4) : 버스폭에 맞게 설정.
        __image_copy_start = ADDR(.text); 라벨 설정 ??
        *(.vectors) 벡터 테이블.    check by 🧮 bat ~/pi_bsp/u-boot/arch/arm/lib/vectors.S
        arch/arm/cpu/armv7/start.o (.text*) : 코드 영역의 데이터를 배치하라? 어디에?

      .rodata : read only data

      .data : {
        *(.data*) # 데이터 영역?에 배치?
      }
      // 중간중간마다 ALIGN(...); 를 해주는 이유?  4, 4096 차이? 정렬하는 단위?

      .bss
        *(.bss*) ...
  🧮 bat ~/pi_bsp/u-boot/arch/arm/lib/vectors.S
    reset ...? 
  🧮 bat ~/pi_bsp/u-boot/arch/arm/cpu/armv7/start.S
    reset 함수.
  🧮 bat ~/pi_bsp/u-boot/common/command.c
    find_cmd : u-boot 프롬프트에서 help 에서 명령어를 찾아오는 함수인듯
    cmd_usage

  bootdealy_process();
  


https://ubuntu.com/kernel

# In Raspberry pi
# uname -a
#   // if u-boot, Linux pi19 6.6.51+rpt-rpi-v7l #1 SMP Raspbian 1:6.6.51-1+rpt3 (2024-10-08) armv7l GNU/Linux
#   // if no u-boot, Linux pi19 6.6.51+rpt-rpi-v8 #1 SMP PREEMPT Debian 1:6.6.51-1+rpt3 (2024-10-08) aarch64 GNU/Linux
# cd ~/pi_bsp/kernel; and git clone --depth=1 -b rpi-6.6.y https://github.com/raspberrypi/linux

cat /boot/firmware/config.txt
  [all]
  enable_uart=1
  # kernel=u-boot.bin
/boot/firmware/kernel7l.img  # 32bit
/boot/firmware/kernel8.img   # 64bit

Make 이후..
  ls -l net/nsh/nsh.ko
  ls -l arch/arm/boot/zImage
  uname -a

~ pi_kernel~
  build.fish
  in ~/pi_bsp/kernel/linux
    🧮
      fish install.fish
      sudo cp arch/arm/boot/zImage /nfs/class/pi_kernel/kernel7l.img
      // make 이후 build.fish 에 작성 필요?

  in raspberry pi
    ssh
    cp -r /mnt/host/class/pi_kernel/lib/modules/6.6.63-v7l+ /lib/modules/
    du -hd 1 /lib/modules/ | grep 6.6.63-v7l+

if test $status -eq 0
    echo "Copy from nfs ..."
    ssh r-pi.local 'sudo cp -r /mnt/host/class/pi_kernel/lib/modules/6.6.63-v7l+ /lib/modules/'
    # sudo cp /boot/firmware/kernel7l.img /boot/firmware/kernel7l_orgigin.img
    ssh r-pi.local 'sudo cp /mnt/host/class/pi_kernel/kernel7l.img /boot/firmware/'
    
    ssh r-pi.local 'sudo cp /mnt/host/class/pi_kernel/dts/* /boot/firmware/'
    du -hd 1 /lib/modules/ | grep 6.6.63-v7l+
end

start_kernel()

sudo cp -r lib/modules/6.6.63-v7l+ /lib/modules/.
sudo cp kernel7l.img /boot/firmware/kernel7l.img
sudo cp -r dts/* /boot/firmware/

lsmod | wc -l   ;; 83 개?

CROSS_COMPILE=arm-linux-gnueabihf-: 크로스 컴파일러의 접두어를 지정합니다. 크로스 컴파일러는 arm-linux-gnueabihf-gcc, arm-linux-gnueabihf-ld 등과 같은 바이너리를 호출합니다.

이미지 파일 놓침..


📰 폰트 정리하고 (자동화는 완료)
STM32
    STM32CubeMX에서 나타나는 Warning (⚠️) 아이콘은 설정 충돌이나 제약 조건을 나타냅니다. 이는 오류(Error)와는 다르며, 일반적으로 특정 핀이나 설정에서 **기본값(Default)**으로 설정할 수 없거나 일부 기능이 제한되는 상황을 의미합니다.
      🆗 기본값이 안될 때 enable 설정하면 자동으로 다른 대체 핀으로 할당이 된다.
    CubeMx
      - Yellow: Disable, but configuration is set or customized.
      - Green: The connection is up
      Fuchsia cross: The connection failed 

  ⚓ STM32F411 - PDF Documentation ; https://www.st.com/en/microcontrollers-microprocessors/stm32f411/documentation.html
    # All resources
      # Datasheet
        ⚓💡 DS10314Arm® Cortex®-M4 32b MCU+FPU, 125 DMIPS, 512KB Flash, 128KB RAM, USB OTG FS, 11 TIMs, 1 ADC, 13 comm. interfaces
        ; https://www.st.com/resource/en/datasheet/stm32f411ce.pdf
        


  ⚓ STM32F411 Datasheet ; https://www.st.com/en/evaluation-tools/nucleo-f411re.html?ecmp=tt9470_gl_link_feb2019&rt=db&id=DB2196#documentation
    User Manual
      🚣 UM1724: STM32 Nucleo-64 boards (MB1136) ; https://www.st.com/resource/en/user_manual/um1724-stm32-nucleo64-boards-mb1136-stmicroelectronics.pdf
    https://www.st.com/resource/en/flyer/flstm32nucleo.pdf
    https://www.st.com/resource/en/flyer/flstm32f4x1.pdf
    - STM32 1️⃣ stmicroelectronics.stm32-vscode-extension ; https://marketplace.visualstudio.com/items?itemName=stmicroelectronics.stm32-vscode-extension
  https://www.st.com/en/development-tools/stm32cubeclt.html?dl=redirect
  STM32 CTL 📅 2024-11-22 21:37:54

  ⚓ STMCUFinder 
    https://www.st.com/en/development-tools/st-mcu-finder-pc.html
    https://www.st.com/content/ccc/resource/technical/software/sw_development_suite/group1/bc/e7/29/51/21/17/4a/9c/st-mcu-finderlin-v6-1-0/files/st-mcu-finderlin-v6-1-0.zip/jcr:content/translations/en.st-mcu-finderlin-v6-1-0.zip
  
  ### Launch STMCUFinder  
  =================== end.
  ----- ?? required... 
  set bin_file_name stm32cubeclt.sh
  set binary_path $LOCAL_BIN_PATH/$bin_file_name
  set file_to_copy (find "$unzip_dir_name" -type f -name "st-stm32cubeclt*.sh")
  echo "Copied $file_to_copy to $LOCAL_BIN_PATH"
  cp $file_to_copy $binary_path
  chmod 700 $binary_path
  echo "Cleaning up temporary files..."
  rm $zip_file_name
  rm -fr $unzip_dir_name

  STM32
    📰 Timer 관련 HAL drive..
    Timer.. 🪱 Auto reload Period?? .. -1 을 해주어야 함. 0도 카운트하기 때문
    ❔ 사양서: GPIO port mode register
      GPIO port output speed register
        OSPEEDR12

    ❔ 프로그램을 다운로드하고 디버그할 때 사용하느 ㄴ것이 serial y, tck/ TMS? 3개?
    ❔ Interurpt Vector Table STm32
    Thumb commnad

    ARM Instruction Set, or Execution  State
      - Thumb (T-모드)
        16비트 및 32비트 혼합 명령어 세트를 사용하는 모드.
        코드 크기가 작아지고 효율적으로 실행됨.
      - ARM (A-모드)
        32비트 명령어 세트.
        Cortex-M 시리즈는 ARM 모드를 직접 지원하지 않습니다. ARM 모드는 Cortex-A 시리즈에서 사용됩니다.

    Cortex-M 시리즈는 기본적으로 Thumb 모드에서 동작합니다.
      * Cortex-M 계열
        모두 32비트 프로세서로 64비트 명령어를 지원하지 않습니다.
          32비트 레지스터, 데이터 버스, 주소 버스를 사용합니다.
        Thumb-2 명령어 집합만을 지원하며, ARM 모드는 사용할 수 없습니다.
    ARMv8-M 아키텍처도 32비트 기반입니다.
    ARM 아키텍처의 실행 상태
      ARM State (A 모드)
      Thumb State (T 모드)


  STM32 보드에 사용할 수 있는 프레임워크(Framework)
    Arduino
    CMSIS (Cortex Microcontroller Software Interface Standard)
    STM32Cube
    libopencm3
      오픈소스 경량 프레임워크. 공식 지원이 아닌 커뮤니티 기반
    ❓ ADC_Settings - Clock Prescaler - PCLK2 divided by 6
  HAL; hardware abstraction layer
  STM32  F411 CC CE RE RC
  VDD: 3.3V
  VSS: Ground?
  TMS: ???
  UART_TX PA2, PA3 ?  UART 디버그용?
  https://community.st.com/t5/stm32-mcus-products/update-tool-st-link-gives-old-firmware/td-p/464761/page/2

  >>> Help - ST-Link Upgrade mode
    ST-LINK/V-2-1
    Update to Firmware STM32 Debug+VCP

    https://www.st.com/en/development-tools/stm32cubeprog.html
  ▶️ My Tutorial Step
    ⚓ Datahsset ; https://www.st.com/en/microcontrollers-microprocessors/stm32f411re.html
    ⚓ STM32CubeProgrammer software for all STM32 ; https://www.st.com/en/development-tools/stm32cubeprog.html#get-software
      # It will be installed defualt $HOME/STMicroelectronics/STM32Cube/STM32CubeProgrammer
      🚨 Issue: Bug? 📅 2024-11-19 11:15:44 jre
        
        echo 'set PATH $PATH $HOME/STMicroelectronics/STM32Cube/STM32CubeProgrammer/bin' >> $FISH_CONFIG_PATH
        STM32_Programmer_CLI -stlink_upgrade
        ➜ STM32_Programmer_CLI -stlink_upgrade
          # or env PATH=(pwd)/jre/bin:$PATH ./STM32_Programmer_CLI -stlink_upgrade

          -------------------------------------------------------------------
                            STM32CubeProgrammer v2.17.0                  
          -------------------------------------------------------------------

        fish: Job 1, 'STM32_Programmer_CLI -stlink_up…' terminated by signal SIGSEGV (Address boundary error)

        STM32_Programmer (GUI) 로 실행하면, 정상적으로 장치 감지하고 펌웨어 업그레이드가 정상적으로 된 것을 보니 버그인 듯 보임. 자바 버전/실행 쉘도 변겨해봤으나 동일.
          >> Open in update mode - Change Type - STM32  Debug+VCP - Upgrade
        ## https://ubuntu.com/tutorials/install-jre
        sudo apt install default-jre
            lsusb | grep -i st
        sudo udevadm trigger


    --- CubeMX 초기화 코드 다운로드받기 필요.
    ---- Clock Configuration 보는 방법.
    Pinout & Configuration
      System Core
        RCC (Reset and Clock Control)
          RCC Moed and Configuration
            High Speed Enable (HSE)  // 외부 클럭의 동작을 받아서 입력하는 모드. 
              // ✔️ Cystal/Ceram.. 사용하기?
            Low Speed Enable (LSE)   // ..: 2^15 32768 Hz. (counter).
        GPIO
          GPIO Mode and Configuration
            Attributes
              Pin Name
              Signal on Pin
              GPIO output level
              GPIO mode
                Output Push Pull 🆚 Output Open Drain
              GPIO Pull-up/Pull-down
              
              Maximum output speed
              User label
        Nested Vectored Interrupt Controller (NVIC)
        Timers
          TIM3
            Clock Source: Internal Clock
              chnanel 1 ~ 4.. (PWM 할 때 사용)
            Counter Settings
              auto reload-preload 를 enable 해줘야 한다고 함?
            Timer 3의 NVIc settings 에서 타이머 인터럽트의 글로벌 인터럽트 허용해줘야 함.
            

    //
    HSI, LSI: High/Low Speed Internal RC
    F411 최대 100MHz 까지 최대 속도 가질 수 있다고 함.

    RCC - RCC Mode and Cnofiguration
    STM32 MX ~ 파이프라인 정리.. 사용방법 + 폴더 디렉터리 옮겼을 때 대처방법.
      Select Board 에서 
    https://wiki.st.com/stm32mcu/wiki/Microcontroller
    >> 🔰 https://wiki.st.com/stm32mcu/wiki/STM32StepByStep:Step2_Blink_LED#Create_New_Project_using_STM32CubeMX




/boot/cfg file.


https://kernel.org/
  mkdir ~/kernel
  
.. tag file 도 지워줘야 한다? 배포시에는.. linux/tag ... 어떻게 만들지?

  tar cvfj linux_6_6.y.ksh.tar.bz2
    -c, --create               create a new archive
    -x, --extract, --get       extract files from an archive

    -v, --verbose              verbosely list files processed

    -f, --file=ARCHIVE         use archive file or device ARCHIVE

    -j, --bzip2                filter the archive through bzip2
    -z, --gzip, --gunzip, --ungzip   filter the archive through gzip

    
🧮 라즈베리파이.. bat ~/pi_bsp/kernel/linux/arch/arm/configs/bcm2709_defconfig | wc -l
pi_bsp/kernel/linux
  cp .config arch/arm/configs/bcm2711_pjs_defconfig

❓ tar -zxvf는 압축 파일 안의 구조를 그대로 유지하며 해제합니다.
  만약 압축 파일 안에 단일 디렉토리가 포함되어 있다면, 디렉토리만 나오게 됩니다.
  압축 파일 안에 디렉토리 없이 파일만 있다면, 현재 작업 디렉토리에 모든 파일이 그대로 풀립니다.

  압축 파일이 작업 디렉토리를 오염시키는 것을 방지하려면, 해제 전에 별도의 디렉토리를 만들고 그 안에서 실행합니다.

  mkdir extracted
  tar -zxvf archive.tar.gz -C extracted
  mkdir extracted && tar -zxvf archive.tar.gz -C extracted

make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- clean
  이전 빌드 결과 파일(object files, temp files)만 삭제합니다.
make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- mrproper
  mrproper
    커널 빌드 환경에서 mrproper는 빌드 디렉토리를 정리하는 명령어입니다.
    make mrproper는 다음을 수행합니다: ; make clean이 삭제하는 파일에 더해, 환경 설정 파일과 모든 임시 파일도 삭제합니다.
      이전 빌드 아티팩트(중간 파일, 빌드 결과) 제거.
      .config 파일 제거 (커널 빌드 설정 초기화).
      빌드 환경을 완전히 클린 상태로 초기화.
  "mrproper"는 1990년대 유럽에서 방영된 광고의 캐릭터 **"Mr. Proper"**에서 유래했습니다.
  Mr. Proper는 미국에서는 "Mr. Clean"으로 알려진 청소용품 브랜드의 마스코트였습니다.
  Linux 커널 개발자들이 **"환경을 깨끗하게 정리한다"**는 의미로 이 이름을 사용한 것입니다.


nRF는 Nordic Semiconductor에서 개발한 무선 통신 칩 및 모듈의 시리즈 이름입니다. 주로 Bluetooth Low Energy (BLE), Thread, Zigbee, 그리고 2.4GHz RF와 같은 저전력 무선 통신 기술을 지원하는 칩셋을 의미합니다.

➡️ devicetree-specification-v0.4.pdf ; https://github.com/devicetree-org/devicetree-specification/releases/download/v0.4/devicetree-specification-v0.4.pdf
https://www.devicetree.org/
https://github.com/devicetree-org/devicetree-specification
https://en.wikipedia.org/wiki/Devicetree
  🪱 Devicetree Source file (.dts)

  💡 Personal computers with the x86 architecture generally do not use device trees
  , relying instead on various auto configuration protocols (e.g. ACPI) to discover hardware.
  Systems which use device trees usually pass a static device tree (perhaps stored in EEPROM, or stored in NAND device like eUFS) to the operating system, but can also generate a device tree in the early stages of booting. 
  🚣 On systems with a boot loader that does not support device trees, a static device tree may be installed along with the operating system; the Linux kernel supports this approach.

📝 README ; https://github.com/raspberrypi/linux/blob/rpi-6.6.y/arch/arm/boot/dts/overlays/README



<as
# one-time

#sudo mv /usr/arm-linux-gnueabihf/include/asm-generic/unistd.h /usr/arm-linux-gnueabihf/include/asm-generic/unistd_origin.h
  sudo cp ~/pi_bsp/kernel/linux/include/uapi/asm-generic/unistd.h /usr/arm-linux-gnueabihf/include/asm-generic/unistd.h

cp ~/pi_bsp/kernel/linux/include/uapi/asm-generic/unistd.h  /nfs/class/pi_kernel/unistd.h
ssh r-pi.local 'sudo cp /mnt/host/class/pi_kernel/unistd.h /usr/include/asm-generic/unistd.h'

# onetime
# sudo mv /usr/include/asm-generic/unistd.h /usr/include/asm-generic/unistd_origin.h




pi@pi19 /m/h/c/systemcall_test> gcc -E -v syscall_app.c -o /dev/null

    Using built-in specs.
    COLLECT_GCC=gcc
    Target: arm-linux-gnueabihf
    Configured with: ../src/configure -v --with-pkgversion='Raspbian 12.2.0-14+rpi1' --with-bugurl=file:///usr/share/doc/gcc-12/README.Bugs --enable-languages=c,ada,c++,go,d,fortran,objc,obj-c++,m2 --prefix=/usr --with-gcc-major-version-only --program-suffix=-12 --program-prefix=arm-linux-gnueabihf- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-libitm --disable-libquadmath --disable-libquadmath-support --enable-plugin --with-system-zlib --enable-libphobos-checking=release --with-target-system-zlib=auto --enable-objc-gc=auto --enable-multiarch --disable-sjlj-exceptions --with-arch=armv6+fp --with-float=hard --disable-werror --enable-checking=release --build=arm-linux-gnueabihf --host=arm-linux-gnueabihf --target=arm-linux-gnueabihf
    Thread model: posix
    Supported LTO compression algorithms: zlib zstd
    gcc version 12.2.0 (Raspbian 12.2.0-14+rpi1) 
    COLLECT_GCC_OPTIONS='-E' '-v' '-o' '/dev/null'  '-mfloat-abi=hard' '-mtls-dialect=gnu' '-marm' '-mlibarch=armv6+fp' '-march=armv6+fp'
    /usr/lib/gcc/arm-linux-gnueabihf/12/cc1 -E -quiet -v -imultilib . -imultiarch arm-linux-gnueabihf syscall_app.c -o /dev/null -mfloat-abi=hard -mtls-dialect=gnu -marm -mlibarch=armv6+fp -march=armv6+fp -dumpbase syscall_app.c -dumpbase-ext .c
    ignoring nonexistent directory "/usr/local/include/arm-linux-gnueabihf"
    ignoring nonexistent directory "/usr/lib/gcc/arm-linux-gnueabihf/12/include-fixed"
    ignoring nonexistent directory "/usr/lib/gcc/arm-linux-gnueabihf/12/../../../../arm-linux-gnueabihf/include"
    #include "..." search starts here:
    #include <...> search starts here:
    /usr/lib/gcc/arm-linux-gnueabihf/12/include
    /usr/local/include
    /usr/include/arm-linux-gnueabihf
    /usr/include
    End of search list.
    COMPILER_PATH=/usr/lib/gcc/arm-linux-gnueabihf/12/:/usr/lib/gcc/arm-linux-gnueabihf/12/:/usr/lib/gcc/arm-linux-gnueabihf/:/usr/lib/gcc/arm-linux-gnueabihf/12/:/usr/lib/gcc/arm-linux-gnueabihf/
    LIBRARY_PATH=/usr/lib/gcc/arm-linux-gnueabihf/12/:/usr/lib/gcc/arm-linux-gnueabihf/12/../../../arm-linux-gnueabihf/:/usr/lib/gcc/arm-linux-gnueabihf/12/../../../:/lib/arm-linux-gnueabihf/:/lib/:/usr/lib/arm-linux-gnueabihf/:/usr/lib/
    COLLECT_GCC_OPTIONS='-E' '-v' '-o' '/dev/null'  '-mfloat-abi=hard' '-mtls-dialect=gnu' '-marm' '-mlibarch=armv6+fp' '-march=armv6+fp'

pi@pi19 /m/h/c/systemcall_test> find /usr/include -name "unistd.h"
  /usr/include/arm-linux-gnueabihf/sys/unistd.h
  /usr/include/arm-linux-gnueabihf/asm/unistd.h
  /usr/include/arm-linux-gnueabihf/bits/unistd.h
  /usr/include/unistd.h
  /usr/include/linux/unistd.h
  /usr/include/aarch64-linux-gnu/asm/unistd.h
  /usr/include/asm-generic/unistd.h
  pi@pi19 /m/h/c/systemcall_test> 


cp ~/pi_bsp/kernel/linux/arch/arm/boot/zImage /nfs/class/pi_kernel/kernel7l.img
ssh r-pi.local '\
echo "Copy kernel7l.img"
sudo cp /mnt/host/class/pi_kernel/kernel7l.img /boot/firmware/

# ~
# echo "Copy unistd.h"
# sudo cp /mnt/host/class/pi_kernel/unistd.h /usr/arm-linux-gnueabihf/include/asm-generic/unistd.h

## Cross build
# sudo cp /mnt/host/class/systemcall_test/syscall_app

# echo hello


https://en.wikipedia.org/wiki/Unistd.h


➡️ /sys/kernel/debug/gpio
🪱 -j: jobs

커널 이미지 생성
  grep -c processor /proc/cpuinfo 
    >> 16
  sudo make-kpkg --J # --initrd --revision=1.0 kernel_image

Cross compile ; https://rannnneey.tistory.com/entry/Raspberry-Pi-Kernel-Build-Local-Cross-Complie


>>>>>>>>>>. 
https://stackoverflow.com/questions/16033748/how-to-find-out-which-linux-driver-is-hogging-my-gpio
  /sys/kernel/debug/gpio is part of the Legacy GPIO Interface and may not be present on newer kernels. A replacement is the gpioinfo tool of libgpio-tools; these tools use the newer character device interface for handling gpios.
    https://www.kernel.org/doc/html/v5.15/driver-api/gpio/legacy.html
    https://www.kernel.org/doc/html/v5.15/driver-api/gpio/legacy.html
    https://www.kernel.org/doc/html/v5.15/driver-api/gpio/driver.html

gpio_request 및 gpio_free:
  GPIO 핀 번호(6)를 지정하여 요청/해제합니다.
  최신 커널에서는 GPIO 핀 번호 기반 요청은 지원되지 않고, 대신 GPIO 컨트롤러와 라인을 식별해야 합니다.
gpio_set_value:
  Legacy 인터페이스에서 GPIO 핀 값을 설정합니다.
  최신 커널에서는 gpio_set_value 대신 gpiod_set_value 같은 Character Device 기반 인터페이스를 사용합니다.

⭕ https://github.com/Rust- for-Linux


❯ find /usr/src -name kobject.h
/usr/src/linux-headers-6.8.0-49/include/linux/kobject.h

# brew 로는안됨. libelf: macOS is required for this software.
brew install libelf 
  ELF(Executable and Linkable Format) 파일을 처리하기 위한 라이브러리 개발 패키지.
  커널 모듈 작업 및 빌드에 필요합니다.
sudo apt install libelf-dev
libncurses-dev
  터미널 UI를 작성할 때 사용되는 ncurses 라이브러리의 개발 패키지.
  make menuconfig를 실행하거나 터미널 기반의 메뉴를 제공할 때 필요합니다.


📰 아니..SSH Cmake intellisesne 안되는거같은데? 확장 자동 설치되도록 변경해야함.. ssh 로는 추천 설치가 안되는데?

https://marketplace.visualstudio.com/items?itemName=VisualStudioExptTeam.vscodeintellicode
=======
TODO tree
https://marketplace.visualstudio.com/items?itemName=Gruntfuggly.todo-tree
https://docs.kernel.org/devicetree/usage-model.html


Device Drvier GPIO Support 를 해제하면 물리 주소로 쓰게 됨.


👁️ 모자쓰고 수업듣자.. 위에 불빛이 너무 밝아서 눈 아프다.

프로세스: 실행 중인프로ㅡ램
  여러개의 프로세스가 똑같은 프로그램을 동시에 실행 가능.

? 프로세스 내에서는 비선점형이지만 운영체제 입장에서는 선점형일 수 있다?

ls /proc/ 
  >> sleep 상태에 있는 프로세스? 숫자들..


------------
ps auwx
  ... ctrl+z ctrl+z 누르면 백그라운드에서 대기상태로 ..
jobs 치면 멈춰있는 프로세스 작업 번호가 보인다.
fg %1 # foreground  -> 포어그라운드로 이동.
------------
fork()
  -1: 에러. 0: 자식 프로세스. 다른 값: 부모 프로세스.
vfork() 
  부모 프로세스의 text(코드)와 data segment 를 복사하지 않는다.
exec() // 프로세스 교체
nmap(); 파일으의 일부나 장치의 메모리를 프로세스 주소 곡안의 일부로 매핑하여 사용.
  video4liuux 가 예를 들어서 이를 사용한다.
MMU; 물리 주소와 논리 주소를 매핑하는 역할.
물리 주소 공간의 조각화
  페이지 프레임.; 고정된 길이의 메모리 4K? qhxhd.
Copy On Write (COW)
Interrupt 🆚
  top half
    하드웨어 레벨의 인터럽트 핸들러
    do_IRQ() 함수에서 처리
  Bottom half
커널 쓰레드
exit()
abort(), kill();
  다른 프로세스에 의해 강제적으로 종료
예외 처리는 코어 내부에서 발생하는 것. Exception.

리눅스 주소 types: Logical, Linear, Physical address
리눅스 타이머의 활용
  jiffies
  10ml 미만은 만들 수 없다고 한다. (tick; 스케줄러로 관리할 수 잇는 가장 작은 시간)

❓ 디바이스 트리 사용 권장 상황:
  하드웨어가 다양하거나 변경 가능성이 높음.
  유지보수와 확장성을 중시함.
디바이스 트리 없이 작업 가능:
  하드웨어 구성이 고정되어 있고, 단일 보드에서만 사용.
  빠른 테스트와 개발이 목표.
📰❓Copy on Write (COW)
  자식 프로세스를 생성할 때 모든 페이지 프레임을 복사하지 않고 부모 프로세스와 자식 프로세스 간에 페이지 프레임을 공유하고 있다가
  , 부모나 자식 프로세스가 공유된 페이지 프레임에 쓸(Write) 때 페이지 프레임을 복사(Copy)하여 새로운 페이지 프레임을 만드는 방식
System call 처리
  사용자영역
    1. 응용 프로그램 <-> 서브루티 ㄴ라이브러리
  --- SWI 명령 ---
  커널 영역
    2. 시스템 콜 처리
    3. 커널 서비스 루틴 -> (에러 처리, 시스템 서비스, 파일 시스템, 디바이스 드라이버, 입출력 서비스)
🪱 VFS 가상 파일시스템(VFS, Virtual File System)
  모든 파일시스템에 대한 공통(Common) 인터페이스 제공
  유닉스 파일시스템과 관련된 모든 시스템 콜을(System Call)을 처리하는 커널 소프트웨어 계층

  - 특수 파일 시스템
  /proc 파일시스템
    사용자가 커널의 데이터에 접근할 수 있는 인터페이스 제공
  /dev 파일시스템
    디바이스를 표준 파일시스템으로 관리할 수 있는 인터페이스 제공
===========
00000001
00000010
00000100
...
10000000
01000000
00100000
...
00000001
00000010
.. 반복 (1초에 한 줄씩 출력)
(1 & 0) | ( ... )  비트연산


int gpio_request(unsigned gpio, const char *label);

void gpio_free(unsigned gpio);

int gpio_direction_input(unsigned gpio);
int gpio_direction_output(unsigned gpio, int value);
void gpio_set_value(unsigned gpio, int value);
int gpio_get_value(unsigned gdpio);

int gpio_to_irq(unsignd gpio);;
void free_irq(unsigned int irq, void* dev_id);



>>>> Cutting root ??
  mv * ../. 
4 Source Directory Structure
4.1 Top-Level Core Components
4.1.10 oe-init-build-env

>>>>>>>
🚣 poky: source oe_init_build-env .. 해야한다고 함.
  bitbake core-image-minimal
  ~ 3시간--

df
  60GB 필요하다고 함...

layer 🆚 recipe

>> 집에서 접속해서
  NFS client
  ⚓🖇️  Ubuntu 🔪 Install and Configure Samba ; https://ubuntu.com/tutorials/install-and-configure-samba 📅 2024-10-30 10:33:59
  sudo apt update && sudo apt install -y samba
  whereis samba
  set SAMBA_SHARED_DIR /srv/samba
  sudo mkdir -p $SAMBA_SHARED_DIR
  sudo chown $USER:$USER $SAMBA_SHARED_DIR
  sudo chown 700 $SAMBA_SHARED_DIR

  mkdir -p SAMBA_SHARED_DIR
  set SAMBA_CONFIG_PATH /etc/samba/smb.conf
  ## TODO: 📰 add bookmark this path.


배포판..
  sudo apt install snapd
  sudo snap install helix --classic

  ..나중에 nix 로 전환..


sudo -E 환경 변수들을 그대로 루트 환경에 전달.
>> sudo -E (which hx) /etc/fstab 📅 2024-12-11 03:19:18

https://www.google.com/search?q=gpiod_get_index+failed&sca_esv=6970a245c30c4668&ei=EZVYZ5fSIt2O2roPjrCqkA8&oq=gpiod_get_index+fa&gs_lp=Egxnd3Mtd2l6LXNlcnAiEmdwaW9kX2dldF9pbmRleCBmYSoCCAAyBxAhGKABGAoyBxAhGKABGAoyBxAhGKABGAoyBxAhGKABGApIyS1Q8AdYwyFwA3gCkAEAmAGuAaABsgeqAQMwLja4AQPIAQD4AQGYAgqgAs8HwgIEEAAYR8ICBBAAGB7CAggQABgFGAoYHsICCBAAGBYYChgewgIIEAAYgAQYogTCAggQABiiBBiJBcICBRAhGJ8FmAMAiAYBkAYIkgcDNC42oAe3FQ&sclient=gws-wiz-serp
https://stackoverflow.com/questions/77526305/linux-gpio-driver-probe-fails
device tree 정의가 필요해보임.? 아닌가;


raspi-gpio funcs

가상핀번호.. 파일 위치 ㅓ딧지? 라즈베리파이 5부터는 가상핀번호 사용안하나 이제?


응용 프로그램: 트랩 SWI <-> 시스템 콜 인터페이스
리눅스 선점형 스케줄링
  time-slice: 각 프로세스가 실행되는 최소 시간 단위 (200 ms???)
  🪱 Context Switching:  ...
Process State
  Running, Waiting (프로세스가 이벤트를 기다리는상태), Stopped (프로세스가 signal 에 의해 정지 되어 있는상태)), Zombie ?
  
커널이란? 하드웨어와 다른 부분 사이의 중재자 역할
  마이크로 커널 🆚 모놀리틱 커널
VFS 핵심: 모든 파일 시스템을 표현할 수 있는 Common File 모델의 도입.
  Common File 모델의 객체 유형
    - superblock
      마운트 시킨 파일 시스템 정보를 저장
    - inode
      특정 파일에 대한 일반 정보를 저장 // 파일과 디렉터리를 구분하기 위한 유일한 것???
    - file
      열린 파일과 프로세스 사이의 상호 작용과 관련한 정보를 ㅓ짱
    - dentry
      디렉토리 항목과 대응하는 파일간 연결에 대한 정보 저장.
      
🪱 readelf -a /nfs/class/pi_kernel/syscall_app_led
  Executable and Linkable Format
  
  a.out, ELF 또는 Binary script.
프로그램 실행 함수
  execl()
  execlp()
  execle()
  execv()
  execvp()
  execve()
IPc (Inter-Process Communication)
  - Signal, Pipe, Socket, Message Queue, Semaphore, Shared Memory
Signal 종류... kill sigcation, signal, sigpending... 456개?

안드로이드 앱..

arch/arm/kernel
  ARM 프로세서 종속적인 커널 처리 루틴을 포함
  트랩(예외처리), 인터럽트 처리, 문맥교환, 장치구성 및 초기화 루틴 등
  리눅스 커널의 시작은 이 폴더의 entry-armv.S에 있는 코드에서부터
arch/arm/mm
  ARM 프로세서에 종속적인 메모리 관리 루틴을 포함
  예를 들어 ARM920T의 MMU를 관리하기 위한 소스는 proc-arm920t.S 파일에 구현
arch/arm/tools
  커널에서 사용되는 상수를 생성
arch/arm/mach-[SoC 또는 보드 이름]
  SoC 또는 개발 대상보드에 필요한 소스를 포함
  메모리 맵 설정, 인터럽트 제어기 관리 및 인터럽트 처리 루틴, USB 장치 드라이버, LED 제어, PCI 인터페이스 드라이버 등
arch/arm/boot
  리눅스 커널 이전의 부트 스트래핑 코드가 있는 폴더
  부트 코드를 별도로 사용하는 경우에는 사용되지 않을 수 있다. 
  커널 빌드가 완료되면 생성되는 커널 바이너리 이미지 파일(Image)이 저장되어 있다.
?? piggy, decompress?

%Vscode> Go to Symbol in Workspace
  lib/string.c

helix 에서도 strcpy 가능? tf strcpy?

init/main.c
  try_to_run_init_process("/sbin/init")
  ...

리눅스의 부팅과정.. 
  부트로더가 시스템 이상여부 태스트
  커널 로드  -> 커널을 램상으로 복사
  커널 압축 해제/ 재배치		
  장착된 하드웨어 검사, 장치 드라이버 설정
  파일 시스템 검사  -> 램디스크, jffs이미지에 포함
  파일 시스템 마운트
  /etc/inittab에서 init실행을 위한 설정 내용 확인	
  /sbin/init 실행(PID가 1이됨)
  /etc/rc.d/rc.sysinit실행(hostname,시스템 점검, 모듈 로딩)
  /etc/rc.d/rc실행 (runlevel에 따른 스크립트 실행)
  /etc/rc.d/rc.local(매번 실행할 내용 입력)
  /etc/rc.d/rc.serial (시리얼 포트 초기화)
  login

=========
❓ 
  long sys_mysyscall(long val)
  {
    int ret = 0;
    ret = gpioLedInit();
    if (ret < 0)
      return ret;
    gpioLedSet(val);
    gpioLedFree();
    return (long)ret;
  }
  대신 SYSCALL_DEFINE1

https://lwn.net/Articles/533632/
https://stackoverflow.com/questions/39103185/gpiod-vs-gpio-methods-in-the-linux-kernel
https://dev-growbook91.tistory.com/35
  Linux
    [Device Driver] GPIO without device tree 2편


https://www.kernel.org/doc/Documentation/gpio/gpio.txt
https://dev-growbook91.tistory.com/34
  - Descriptor-based interface
  - Integer-based interface
    - Using sysfs interface
    - gpio_* API


  Integer-based interface는 예전 방법이고 descriptor-based interface가 최근에 쓰는 방법이다.
  또, integer-based interface가 초심자에게는 더 쉽고 descriptor-based interface는 어렵다.
  그 이유는 descriptor-based에서는 device tree를 다루는 것이 필수이고,
  Integer-based에서는 필수가 아니기 때문이다.

  gpios = <&gpio5 9 GPIO_ACTIVE_HIGH>;
https://dev-growbook91.tistory.com/35


기본적으로 파일 시스템을 마운트해야한다. 
  bitbake core-image-minimal 가 최소한의 파일시스템을 만들어주는 명려엉.

✦ ❯ ll /sys/class/gpio
.-w------- root root 4.0 KB Wed Dec 11 04:37:06 2024 📄 export
lrwxrwxrwx root root   0 B  Tue Dec 10 19:03:13 2024 🗂 gpiochip512 ⇒ ../../devices/platform/INT34C6:00/gpio/gpiochip512
.-w------- root root 4.0 KB Wed Dec 11 13:05:39 2024 📄 unexport

Pad = Pin

A panel or strip of material designed to be sensitive to pressure or touch."

🆚 Pins, Pads, Bond Pads ; https://www.edaboard.com/threads/difference-between-pins-pads-bond-pads-in-layout.88787/
  🪱 Pads means means interface logic between chip and external environment,,it involves ESD ckt,
  Buffer circuits other protection ckts.
  🪱 Bond pads means the place in Pads which we can take wires from die to packaging..
  🪱 Pins menas lead material which are coming out of packages.
??? Dd required sync?
  https://askubuntu.com/questions/706670/why-is-the-sync-option-used-with-the-dd-command
  Dd will read in data one block at a time (the block size is specified by the user). Dd may possibly read in a shorter block than the user specified, either at the end of the file or due to properties of the source device; this is called a partial record. By default, dd will then write out a block that's the same size as the amount that it read.

  Dd will repeat this until the specified count is reached, or it sees eof on input, or error on input or output. When it finishes, dd reports the number of full and partial records it read and wrote.

  This behavior is fine for copying an ordinary file within a filesystem or over a TCP network connection, since that's considered a stream of bytes. But other filesystem objects, such as raw DVDs and magnetic tape, require write sizes that are within certain ranges and are a round multiple of some amount (such as 512 or 2048 bytes). For example, if you have a disk image that is 255 tracks of 63 512-byte sectors, and want to write to a tape that requires a block size of 1024 bytes, you'd need to do something like

  dd if=disk.img of=/dev/rmt0 bs=1k conv=sync
  to make sure that dd doesn't try to write out a 512-byte block at the end. The shorter block at the end will be padded with zeroes or blanks. Padding with zeroes is a safe, common choice. The option for dd to pad with blanks is useful in a different situation - converting a file that has variable-length lines to one with fixed-length lines.


🧮 cat /proc/filesystems





===========
📰 Rust package 상위로 빼기. rust_study
  algorithm_solution
    이런식으로.
  ! 개별 프로젝트에 필요하면 새로 만들자.

ln [원본 파일명] [대상파일명]
  ln -s $HOME/poky.sym $HOME/pi_bsp/kernel/rootfs/yocto/poky

/usr/sbin/의 **sbin**은 **"System Binary


BCM43455는 Broadcom의 무선 네트워크 칩셋으로, Wi-Fi(802.11ac) 및 Bluetooth(4.x/5.x)를 지원합니다.
  이 칩셋은 일부 라즈베리파이 모델에서 사용됩니다:
  라즈베리파이 3 모델 B+
  라즈베리파이 4 모델 B
  라즈베리파이 400


프로젝트 계정연동.. oauth? 
  https://until.blog/@mushroombud/%EA%B0%84%ED%8E%B8-%EB%A1%9C%EA%B7%B8%EC%9D%B8-oauth-2-0--3%EB%B6%84%EB%A7%8C%EC%97%90-%EC%A0%95%EB%B3%B5%ED%95%98%EA%B8%B0

즉, Synaptics가 특정 상황에서 소프트웨어를 사용하지 못하게 할 수 있는 "권리"를 보유하고 있으며, 이는 기업 및 개발자들에게 잠재적인 법적 문제를 초래할 수 있습니다.

mkdir -p ~/pi_bsp/drivers
cd ~/pi_bsp/drivers

mkdir -p ~/pi_bsp/drivers/tetrix
cd ~/pi_bsp/drivers/tetrix

cp /mnt/lect_nfs/drivers/* .
cp . /nfs/

cd tetrix

cp ledkey_dev.ko /nfs/class/

sudo 없이 insmod와 rmmod 명령을 실행하려면 사용자 권한을 조정해야 합니다. 이는 일반 사용자에게 커널 모듈을 로드하고 제거할 수 있는 권한을 부여하는 작업을 의미하며, 아래 방법으로 가능합니다.
방법 1: CAP_SYS_MODULE 설정
  Linux의 **파일 능력(Capabilities)**를 활용하면 특정 바이너리(insmod, rmmod)에 커널 모듈 로드 권한을 부여할 수 있습니다.

  insmod와 rmmod에 Capabilities 추가

  파일의 CAP_SYS_MODULE 권한을 부여합니다.
  bash
  코드 복사
  sudo setcap cap_sys_module+ep $(which insmod)
  sudo setcap cap_sys_module+ep $(which rmmod)
  확인

  getcap 명령으로 Capabilities가 적용되었는지 확인:
  bash
  코드 복사
  getcap $(which insmod)
  getcap $(which rmmod)
  테스트

  이제 sudo 없이 insmod와 rmmod를 실행할 수 있습니다:
  bash
  코드 복사
  insmod hello.ko
  rmmod hello
  sudo insmod <파일명>
  sudo mknod /dev/ledkey_dev c 230 0
  sudo chmod 777 /dev/ledkey_dev

sudo mkdnod /dev/ledkey_dev c 230 0
???
ls -l /dev/ledkey_dev
sudo chmod 777 /dev/ledkey_dev
ls -l /dev/ledkey_dev
./ledkey_app 0x55
  // 입출력 다중화 ?

dmesg 권한....
  cat /proc/sys/kernel/dmesg_restrict
journalctl -k | tail -n 5

>>>>>>>>> 🧮
  sudo insmod hello.ko
  lsmod | head -n 5
  sudo dmesg | tail

  sudo rmmod hello
  lsmod | head -n 5
  sudo dmesg | tail


lsmod 에 올라간다.
sudo rmmod p432_ledkey_dev
이제 실행하면 no such devices or address

  ================ Raspberry Pi  Qt 설치================
  pi@pi00:~ $  sudo apt install qtbase5-dev qtchooser qt5-qmake qtbase5-dev-tools
  pi@pi00:~ $  qmake --version
  >> QMake version 3.1
    Using Qt version 5.15.8 in /usr/lib/arm-linux-gnueabihf

  기존 예제  tetrix  복사 ( ubuntu에서 라즈베리파이 복사)
  mkdir -p /nfs/Qt /nfs/drivers
  cp -r /mnt/lect_nfs/drivers/* /nfs/drivers/
  rm /nfs/drivers/tetrix/tetrix.pro.user # 소스만 남기기.


  ;  /mnt/lect_nfs/drivers/

  ; tar xvf tetrix.tar

  /mnt/host/
  리즈베리파이에서 
  $ cd /mnt/ubuntu_nfs/Qt/tetrix
  pi@pi00:/mnt/ubuntu_nfs/Qt/tetrix $ qmake -project     : tetrix.pro 생성
  pi@pi00:/mnt/ubuntu_nfs/Qt/tetrix $ vi tetrix.pro          : 아래 모듈 추가 저장 
  ------------------
  5 QT += widgets
  ------------------

  pi@pi00:/mnt/ubuntu_nfs/Qt/tetrix $ qmake		:  Makefile 생성
  pi@pi00:/mnt/ubuntu_nfs/Qt/tetrix $ ma

  추가 패키지 설치
  $ apt-get update 
  $ sudo apt-get install qtbase5-dev qtdeclarative5-dev qt5-qmake \
    libqt5gui5 qtscript5-dev qtmultimedia5-dev libqt5multimedia5-plugins \
    qtquickcontrols2-5-dev libqt5network5 cmake build-essential

  $ sudo apt install libfontconfig1-dev libdbus-1-dev libfreetype6-dev \
    libicu-dev libinput-dev libxkbcommon-dev libsqlite3-dev libssl-dev \
    libpng-dev libjpeg-dev libglib2.0-dev libraspberrypi-dev

  $ sudo apt install libqt5charts5 libqt5charts5-dev 

super daemon
  ?? inetd.. 인터넷을 위한 supervisor 프로그램으로 외부로 부터의 요청을 기다린다.
  슈퍼데몬이 포트를 감시하다가, 어떤 포트로 서비스가 접근이 되면, 그 떄 프로세스를 메모리에 올려서 실행한다? ??


도커 개발환경 세팅
  📰 TODO >>>>>>>>>>>> https://pajamacoder.tistory.com/21
    가장 먼저 한일은 sudo 명령 없이 도커를 사용하기 위해 docker group에 user를 포함시키는 일이다. nvidia에서 제공하는 jetson nano os 를 설치 하고 나면 기본적으로 docker는 설치 되어있지만 user를 자동으로 docker그룹에 포함시지는 않는다.

    display message
    dmesg | tail | awk '$3 == "sd" {print}'
    sudo eject /dev/sd<x>


❓?? 파일의 주번호, 부번호가 뭐지?
yafs, .. 종류.. 파일시스템?

/sys : 가상 파일 시스템?
/tmp : 모든 사용자가 이 곳에 쓸 수 있는데 sticky bit (ll 시 나옴. t) 가 적용되어있어서 만든 사람만 지울 수 있음
/usr : user uresource directory.. ?
/var : log 데이터들, 등등 저장됨.. 근데 왜 이름이 var; variable

  로그 파일 (/var/log):
    시스템 및 애플리케이션의 로그 파일이 저장됩니다.
    예: syslog, auth.log, dmesg 등.
  스풀 데이터 (/var/spool):
    메일 큐, 프린터 큐 등 대기 중인 작업 데이터를 저장.
    예: cron 작업 스케줄 데이터.
  캐시 데이터 (/var/cache):
    애플리케이션이 재사용할 수 있는 임시 데이터.
    예: 패키지 매니저의 다운로드된 파일.
  잠금 파일 (/var/lock):
    특정 리소스를 사용 중임을 나타내는 파일.
  데이터베이스 파일 (/var/lib):
    애플리케이션 및 서비스의 상태 정보 또는 데이터베이스.
    예: dpkg 데이터베이스 (/var/lib/dpkg).
  임시 파일 (/var/tmp):
    재부팅 후에도 유지되는 임시 데이터.
  웹 서버 데이터 (/var/www):
    웹 서버가 제공하는 정적/동적 웹 콘텐츠.


sudo tar xvfp core-image-minimal-raspberrypi4.rootfs.tar.bz2 -C /media/wbfw109v2/rootfs

❓ Ubuntu: IO mapped IO vs Memory ampped IO
  Ubuntu
    cat /procs/ioports
  그래서 임베디드는 /procs/ioports 가 없다고 한다.
  대신 이거는 있다.
    cat /proc/meminfo # memory mapped io

cp Makefile /mnt/lect_nfs/drivers/ cp /mnt


modprobe는 기본적으로 /lib/modules/$(uname -r) 디렉토리 내에서 모듈을 검색합니다.

🚨 Module.symvers: symbolic versions
WARNING: Module.symvers is missing.
         Modules may not have dependencies or modversions.
         You may get many unresolved symbol errors.
         You can set KBUILD_MODPOST_WARN=1 to turn errors into warning
         if you want to proceed at your own risk.


===================== Required.
make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- modules_prepare
make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- modules -j8

Module.symvers
https://docs.kernel.org/kbuild/modules.html


⚓ Building External Modules ; https://docs.kernel.org/kbuild/modules.html
  # Module.symvers
    #️⃣ Symbols From the Kernel (vmlinux + modules) ; https://docs.kernel.org/kbuild/modules.html#symbols-from-the-kernel-vmlinux-modules
      During a kernel build, a file named Module.symvers will be generated. Module.symvers contains all exported symbols from the kernel and compiled modules. For each symbol, the corresponding CRC value is also stored.
# Kernel Build System
  ⚓ Kbuild ; https://docs.kernel.org/kbuild/kbuild.html
    # Environment variables
      #️⃣🪱 ARCH ; https://docs.kernel.org/kbuild/kbuild.html#arch
      CROSS_COMPILE
    https://docs.kernel.org/kbuild/kbuild.html#cross-compile

❓ Clang은 GCC와 달리 도구체인 프리픽스(CROSS_COMPILE)를 사용하지 않습니다.
Clang은 GCC와 다르게 프리픽스(CROSS_COMPILE)를 사용하지 않고, 단일 바이너리로 여러 타겟을 지원합니다.
❗ ARCH를 지정하지 않으면 Kbuild는 호스트 머신의 아키텍처(예: x86_64)를 기본값으로 사용.
CROSS_COMPILE을 생략해도 문제가 없는 이유는 Clang의 설계와 Kbuild의 동작 방식에 기인합니다. Clang은 GNU 도구체인(GCC)과 다르게 단일 바이너리로 여러 타겟 아키텍처를 지원하며, 이를 통해 CROSS_COMPILE 없이도 교차 컴파일이 가능합니다.

❓ ARCH를 제거하고 CLANG_FLAGS에 -march=armv8-a를 넣었음에도 오류가 발생하는 이유는, ARCH와 -march의 역할이 서로 다르기 때문입니다. ARCH는 Kbuild에서 타겟 아키텍처의 헤더 파일 및 빌드 설정을 제어하는 데 사용되고, -march는 단순히 컴파일러에게 생성할 코드의 CPU 아키텍처를 지정합니다.
❓ Makefile에서 탭(tab)은 명령문 앞에만 필수적입니다. 나머지 부분(변수 선언, 타겟 정의 등)에서는 스페이스(space)와 탭을 자유롭게 사용할 수 있습니다.


📰 툴 선택
  gparted
  meld 


pool timeout? 

입출력다중화.. poll timeout?
proc 파일 시스템?


❓ What is /lib/modules/(uname -r)/modules.dep
  리눅스 커널 모듈 간의 의존성 정보를 담고 있는 파일.



sudo mknod /dev/ledkey.ko -c 230 0
sudo insmod ledkey.ko
sudo rmmod ledkey.ko

커널 모듈
  menuconfig
    ✔️ Enable loadable module support

  
https://elixir.bootlin.com/linux/v6.12.4/source


inux 커널 모듈의 이름은 **모듈 파일의 이름(예: hello.ko)**에 의해 결정됩니다. 작성한 코드에서 모듈의 이름은 hello입니다. 이는 모듈 파일의 이름과 MODULE_LICENSE 등의 메타데이터를 통해 커널에 등록됩니다.


https://en.wikipedia.org/wiki/Device_file
Device number
  bat /proc/devices
  **주 번호(major number)**는 드라이버를 식별합니다.
  **부 번호(minor number)**는 동일한 드라이버를 사용하는 여러 디바이스를 구분합니다.

O_NONBLOCK, vs O_NDELAY



lseek()
  offset,
  whence: offset 을 해석하기 위한 조건을 지정
  SEEK_SET, SEEK_CUR, SEEK_END

🧮 file 🆚 modinfo
  ARM
🧮 top

❗ sudo cat /proc/kmsg
  vs journalctl -k
    <4>[...] Goobdye, world
  <4>: 는 커널 레벨

journalctl -k --since "now" -f
🧮 cat /proc/kallsyms | grep gpioLedInit
  gpioLedInit is init function name.
  symbol table..  다른 곳에서 이 드라이버를 호출할 수 있다.


sudo cat /proc/kmsg   🆚 journalctl -k --since "now" -f
journalctl -k --since "now" -f --output verbose
  >> 에서 커널 레벨을 볼 수 있다.
    _TRANSPORT=kernel
    PRIORITY=4

cd /lib/modules/(uname -r)/drivers/char

insmod 대신 depmod

# only for raspberry.
make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- bcm2711_defconfig

# Requires?
#   make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- modules
  외부 모듈만 빌드하려는 경우: make modules는 불필요합니다.
  커널 전체를 빌드하거나, 기본 제공 모듈을 포함한 전체 모듈이 필요하면 make modules를 실행해야 합니다.


❓ helix 단축키
  ok vi - / (replac) 는 어떤 키? 
    n: 다음 검색 결과로 이동
    N: 이전 검색 결과로 이동

  vi - ctrl+G (파일정보? 끝라인 보기)

  vi -cw, dw .. 는?


... Not insert ... 


ll dmesg
bat /var/log/dmesg
/tmp
fd -e c | wc -l

❓ C 언어 packed 키워드


Linux 커널에서 메모리 할당 시 사용되는 GFP (Get Free Pages) 플래그입니다
  GFP_KERNEL
    kmalloc() 함수에 사용하는 대표적인 인자값으로, 동적 멤리 할당이 항상ㅅ ㅓㅇ공하도록 요구.
    이 값으로 항상 kamlloc() 함수를 사용하며 커널이 관리한느 메모리가 충분하지 않을 경우에는 (남은 메모리가 min_free_pages) 보닺 ㅏㄱ을 경우)
    디바이스 드라이버를 호출한 프로세스가 수행을 멈추고, 동적 메모리를 할당할 수 있는 상태가 될 때까지 잠든다.
  GFP_ATOMIC

vmalloc(), vfree()


🧮 du df dh


🧮 cat /proc/devices
  번호 확인할떄에는 lsmod 보다는 이거 써야


#include <mach/irqs.h>
  >> #include errors

  /home/wbfw109v2/pi_bsp/kernel/linux/include/generated


  현재 irqs.h 파일이 여러 SoC(ARM System-on-Chip) 디렉토리에 존재하지만, IntelliSense는 어느 경로를 참조해야 할지 알 수 없기 때문에 include error가 발생합니다. 이는 **특정 플랫폼(SoC)**에 대한 빌드 환경이 제대로 설정되지 않아서 발생한 문제입니다.

  #include <mach/irqs.h>
  mach/irqs.h 파일은 플랫폼별 IRQ(Interrupt Request) 번호를 정의하는 헤더 파일입니다.
  현재 IntelliSense가 필요한 정확한 헤더 경로를 설정하지 못해서 발생한 문제입니다.


  ❯ fd irqs.h
  arch/arm/mach-davinci/irqs.h
  arch/arm/mach-dove/irqs.h
  arch/arm/mach-ep93xx/irqs.h
  arch/arm/mach-footbridge/include/mach/irqs.h
  arch/arm/mach-mv78xx0/irqs.h
  arch/arm/mach-omap1/irqs.h
  arch/arm/mach-orion5x/irqs.h
  arch/arm/mach-pxa/irqs.h
  arch/arm/mach-rpc/include/mach/irqs.h
  arch/arm/mach-s3c/irqs.h
  arch/arm/mach-sa1100/include/mach/irqs.h


  좋은 질문입니다! mach와 irqs가 무엇인지, 그리고 현재 라즈베리파이에서 커스텀 커널/드라이버 작업을 하면서 이것이 필요한지 정리해드릴게요.

  1. mach와 irqs의 의미
  (1) mach
  mach는 "machine"의 줄임말로, 특정 하드웨어 플랫폼 또는 SoC(System-on-Chip)와 관련된 헤더 파일들을 모아둔 디렉토리입니다.
  arch/arm/mach-* 디렉토리는 ARM 아키텍처에서 사용되는 특정 플랫폼의 하드웨어 설정 및 정의를 포함합니다.
  예: IRQ(Interrupt Request) 번호, 클럭 설정, 메모리 맵핑 등.
  mach/irqs.h 파일은 플랫폼별 IRQ(Interrupt Request) 번호를 정의하는 헤더 파일입니다.
  (2) irqs.h
  irqs.h는 IRQ 번호와 관련된 플랫폼별 정의가 포함된 파일입니다.
  IRQ는 하드웨어 디바이스가 CPU에 요청을 보내는 방식입니다.
  예를 들어, 타이머, GPIO, USB 컨트롤러 등이 CPU에 작업 요청을 보낼 때 IRQ를 사용합니다.
  irqs.h 파일은 특정 SoC에서 어떤 장치가 어떤 IRQ 번호를 사용하는지를 정의합니다.
  2. 라즈베리파이에서는 mach/irqs.h가 필요한가요?
  라즈베리파이의 경우, 커널 버전 4.x 이후로는 mach/ 디렉토리가 대부분 필요 없습니다. 라즈베리파이 같은 SoC는 일반적으로 Device Tree를 사용해 IRQ와 같은 하드웨어 설정을 정의합니다. 따라서, 최신 커널에서는 mach/irqs.h를 직접 참조할 필요가 거의 없습니다.

  라즈베리파이와 IRQ 설정 방식
  라즈베리파이는 arch/arm/mach-bcm2709(또는 mach-bcm2835)와 같은 SoC에 따라 IRQ를 설정합니다.
  그러나, 커널 버전 5.x 이상에서는 대부분의 IRQ 설정이 Device Tree 파일 (.dts)로 이동했습니다.
  예: arch/arm/boot/dts/bcm2835.dtsi 같은 파일에 정의됩니다.

  (1) Device Tree 사용
    라즈베리파이 커널은 mach/ 디렉토리 대신 Device Tree를 사용하여 하드웨어 정보를 관리합니다.
    IRQ나 메모리 맵 같은 설정은 arch/arm/boot/ds/ 디렉토리에 있습니다.

  rg "mach/irqs.h" /home/wbfw109v2/pi_bsp/kernel/linux/


chatgpt에게: 사진: 텍스트로 번역해줘.

접지: 전압차의 기준을 위한 것?
  전압은 상대값.
  전위는 절대값.


# Build kernel modules (.ko files) based on the configuration; generates Module.symvers
make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- modules


make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- bcm2711_defconfig
make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- zImage modules dtbs -j$(nproc)

스템 콜 변경 사항은 커널 내부 코드에 영향을 미치므로, 커널 전체를 빌드해야 합니다.
make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- zImage modules dtbs -j$(nproc)


mkdir -p /nfs/class/pi_kernel
sudo make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- INSTALL_MOD_PATH=/nfs/class/pi_kernel modules_install
# make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- headers_install

mkdir -p /nfs/class/pi_kernel/dts
mkdir -p /nfs/class/pi_kernel/dts/overlays
cp arch/arm/boot/zImage /nfs/class/pi_kernel/kernel7l.img
cp arch/arm/boot/dts/broadcom/*.dtb* /nfs/class/pi_kernel/dts/
cp arch/arm/boot/dts/overlays/*.dtb* /nfs/class/pi_kernel/dts/overlays/
cp arch/arm/boot/dts/overlays/README /nfs/class/pi_kernel/dts/overlays/
if test $status -eq 0
    echo "Copy from nfs ..."
    ssh r-pi.local '\
    sudo cp /mnt/host/class/pi_kernel/kernel7l.img /boot/firmware/
    sudo reboot
    '

    ssh r-pi.local 'sudo cp -r /mnt/host/class/pi_kernel/lib/modules/6.6.63-v7l+ /lib/modules/'
    # sudo cp /boot/firmware/kernel7l.img /boot/firmware/kernel7l_orgigin.img

    ssh r-pi.local 'sudo cp -r /mnt/host/class/pi_kernel/dts/* /boot/firmware/'
    ssh r-pi.local 'du -hd 1 /lib/modules/ | grep 6.6.63-v7l+'
end


-C $(KDIR): 커널 빌드 디렉토리로 이동.
M=$(PWD): 현재 디렉토리(모듈 소스 경로)를 커널 빌드 시스템에 전달.
modules: 커널 모듈 빌드 타겟을 실행.
$(CROSS): 크로스 컴파일 옵션(ARM 커널 빌드 시 필요).


라즈베리파이는 기본적으로 리눅스 커널을 중심으로 사용되지만, 리눅스 커널만 사용하는 것은 아닙니다. 용도와 목적에 따라 베어메탈 프레임워크, FreeRTOS, RISC OS 등 다른 커널이나 리눅스 대체 운영 체제를 선택할 수 있습니다.

https://github.com/u-boot/u-boot
https://github.com/coreos/grub

🧮 git clone --branch --single-branch https://github.com/example/repo.git


https://formulae.brew.sh/formula/arm-linux-gnueabihf-binutils
  https://www.gnu.org/software/binutils/binutils.html


brew install arm-none-eabi-gcc arm-none-eabi-gdb

ARM 리눅스용 개발이 필요하다면 **arm-linux-gnueabihf-gcc**를 설치하고, Bare-metal 임베디드 개발이 필요하다면 **arm-none-eabi-gcc**를 설치하면 됩니다.

🧮 git restore --source=origin/wbfw109v2 -- x3d_shallow_ntu60_xsub

fd -e c -X dirname | sort -u
직무지원동기, 기업지원동기

bazel vs gradle
  추천
    Gradle:
      안드로이드 앱 개발.
      JVM 기반 프로젝트(Java, Kotlin).
      유연성과 확장성이 중요한 경우.
    Bazel:
      대규모 모노리포(Monorepo) 관리.
      멀티 언어와 플랫폼(예: C++, Python, Go, Java)을 지원해야 하는 경우.


nm -D /usr/lib/x86_64-linux-gnu/libc.so.6 | grep usleep
  >> 00000000001296e0 T usleep@@GLIBC_2.2.5

  ❓ usleep() 함수의 실제 구현은 동적 라이브러리인 libc.so 파일에 컴파일된 바이너리 형태로 존재합니다. 즉, .c 파일이 아니라 기계어 코드로 변환된 상태이기 때문에 IntelliSense가 직접 .so 파일을 파싱해서 소스를 추적할 수는 없습니다.

⚓ IntelliSense for cross-compiling ; https://code.visualstudio.com/docs/cpp/configure-intellisense-crosscompilation


🧮 cat /proc/meminfo

☑️ Why does /proc/iomem only show zeros instead addresses in 64bit linux? ; https://stackoverflow.com/questions/50045996/why-does-proc-iomem-only-show-zeros-instead-addresses-in-64bit-linux
  sudo. Seems like a security feature.
  >> sudo cat /proc/ioports    vs     cat /proc/ioports


app: write  -> kernel: get_user, copy_from_user
app: read   -> kernel: put_user, copy_to_user


https://sourceware.org/glibc/manual/latest/html_mono/libc.html


C언어에서 스네이크 케이스를 사용하는 이유
  표준 C 라이브러리의 관행
    표준 C 라이브러리 함수들은 모두 스네이크 케이스를 사용합니다.

    예: fopen, fclose, memset, strncpy

misc 계열.
  ls -al /dev/ | grep " 10,"
  cat /proc/devices | grep 10
  cat /proc/misc
kdev_t, dev_t

sudo mknod /dev/minor_led c 230 0
sudo mknod /dev/minor_key c 230 1

객체의 직렬화는 객체의 내용을 바이트 단위로 변환하여 파일 또는 네트워크를 통해서 스트림(송수신)이 가능하도록 하는 것을 의미한다.


🧮 mktemp -d

ioctl.h
  특정 디바이스의 속성을 변경하는데 필요.
  



clang -- https://marketplace.visualstudio.com/items?itemName=cschlosser.doxdocgen
Doxygen Documentation Generator; 



❓ 이렇게 사용한다는데 리눅스에서.. 맞아?.. 이게 가능한가?
ret = ioctl(int, fd, int request, char * argp)

  int xxx_ictol(struct inode, struct file * flip, unsigned int cmd, unsigned long arg){
    return ret
  }

verify_area -> access_ok



ioctl(int fd, unsigned long request, ...)
xxx_ioctl(struct file *file, unsigned int cmd, unsigned long arg);

https://www.man7.org/linux/man-pages/man2/ioctl.2.html

https://www.kernel.org/doc/Documentation/ioctl/ioctl-number.txt
_IOWR

https://www.kernel.org/doc/html/latest/userspace-api/ioctl/ioctl-number.html
  _IO, _IOW, _IOR, or _IOWR


➡️ 📅 2024-12-18 10:27:10 📰 문서화 + 렌더링 문제..
compiledb는 전체 빌드 프로세스를 감싸도록 설계되었습니다. 단일 컴파일 명령어는 적합하지 않습니다. 만약 Makefile이나 다른 빌드 시스템을 사용 중이라면, 해당 빌드 명령어를 compiledb로 감싸야 합니다.
  not works for compiledb -- clang -c main.c
  bear -- clang -c main.c

이거 기본적으로 bear 나 compiledb 가 성공하지 못한 상태에서는, clangd 의 intellisense 가 작동을 아예 안해서, 초기 틀을 작성하는데 불편한거같아.
  어떤 부모 디렉터리 아래에 대해서는 기본적으로 참고할 위치같은거 설정할 수 있나?


❓ __attribute__((packed))는 C 언어에서 GCC 확장 문법으로, 구조체 내부에서 멤버들 간의 **패딩(padding)**을 제거하여 구조체 크기를 최소화하는 역할을 합니다.

dir:

  데이터 방향 (_IOC_NONE, _IOC_READ, _IOC_WRITE).
  _IOC_DIR(cmd)로 추출.

IOCTL 명령의 고유 타입 식별자 (IOCTLTEST_MAGIC).
_IOC_TYPE(cmd)로 추출.
nr:

명령 번호.
_IOC_NR(cmd)로 추출.
size:

데이터의 크기.
_IOC_SIZE(cmd)로 추출.

🧮 make -C
  -C DIRECTORY, --directory=DIRECTORY


🚨 In included file: 'gnu/stubs-32.h' file not foundclang(pp_file_not_found)
  stubs.h(7, 11): Error occurred here
  stdio.h
  /home/linuxbrew/.linuxbrew/Cellar/glibc/2.35_1/include/stdio.h
  provides printf


  ❌ brew install glibc --with-multilib
  sudo apt-get install libc6-dev-i386

  __x86_64__


#include <stdio.h> 이 한 줄에서 모두 발생..

Unknown argument: '-mno-fdpic'
  Unknown argument: '-fno-ipa-sra'
  Unknown argument: '-fno-allow-store-data-races'
  Unknown argument: '-fconserve-stack'
  In included file: 'gnu/stubs-32.h' file not found


https://stackoverflow.com/questions/68853169/homebrew-linking-fails-with-incompatible-i386-files-already-on-machine

  // 📝 "36" is unique identifier. from 🔗 #define IOCTLTEST_MAGIC '6' // 0x36
  // IOCTLTEST_KEYLEDINIT : 0x00003600
  printf("IOCTLTEST_KEYLEDINIT : %#010x\n", IOCTLTEST_KEYLEDINIT);

  // IOCTLTEST_READ : 0x80843603		// size is 132. 0x84	// ? why
  printf("IOCTLTEST_READ : %#010x\n", IOCTLTEST_READ);

Doxygen Documentation Generator

  ⚓ WSLG ; https://github.com/microsoft/wslg
    wsl --version 치면 나오는듯?
  



※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※
🌟 Software Development ; https://en.wikipedia.org/wiki/Software_development
  📝 &comment 📍: software design guideline
    Agile development with XP in DevOps using toolchain 🔗 "Agile software development methods", "DevOps"
    1. Concept creation, Requirements specification, Design: (DDD, OOAD)
    2. Code, Test: ATDD (specially BDD)      
    3. CI/CD

  # Core activities
    ⚓ software development process, Software Development Life Cycle (SDLC) ; https://en.wikipedia.org/wiki/Software_development_process
     & ⚓ Systems Development Life Cycle (SDLC), application development life-cycle ; https://en.wikipedia.org/wiki/Systems_development_life_cycle
    
    ⚓ debugging ; https://en.wikipedia.org/wiki/Debugging
      Debugging tactics can involve interactive debugging, control flow analysis, unit testing, integration testing
      , log file analysis, monitoring at the application or system level, memory dumps, and profiling.
    ⚓ Requirements analysis ; https://en.wikipedia.org/wiki/Requirements_analysis
    
    ⚓ Software Configuration Management (SCM), S/W CM ; << https://en.wikipedia.org/wiki/Software_configuration_management
    🔗 V&V 🔗 software testing
  # Paradigms and models
    ⚓ Systems engineering ; << https://en.wikipedia.org/wiki/Systems_engineering
      # Processes
        ⚓📎 Requirements engineering (RE) ; https://en.wikipedia.org/wiki/Requirements_engineering
        ⚓📎 Verification and validation (V&V) ; https://en.wikipedia.org/wiki/Verification_and_validation
          - Independent verification and validation (IV&V)
        ⚓ Project Management Body of Knowledge (PMBOK), 프로젝트 관리 지식 체계 ; << https://en.wikipedia.org/wiki/Project_Management_Body_of_Knowledge
      # Tools
        ⚓📎 Work breakdown structure (WBS), 업무 분업 구조 ; https://en.wikipedia.org/wiki/Work_breakdown_structure
        ⚓ Function modelling ; https://en.wikipedia.org/wiki/Function_model
    ⚓ Software engineering ; https://en.wikipedia.org/wiki/Software_engineering
      # Concepts
        ⚓ Software Archiecture ; https://en.wikipedia.org/wiki/Software_Architecture
          #️⃣ Software architecture topics ; https://en.wikipedia.org/wiki/Software_architecture#Software_architecture_topics
            ⚓ REST ; https://en.wikipedia.org/wiki/Representational_state_transfer
              #️⃣💡 Architectural constraints ; https://en.wikipedia.org/wiki/Representational_state_transfer#Architectural_constraints 
                (Client–server architecture, Statelessness, Cacheability, Layered system, Code on demand (optional), Uniform interface)
                ⚓ Hypermedia as the Engine of Application State (HATEOAS) ; https://en.wikipedia.org/wiki/HATEOAS
        ⚓ Software framework ; << https://en.wikipedia.org/wiki/Software_framework
        ⚓ Software quality ; https://en.wikipedia.org/wiki/Software_quality
          # Qualities
            # Internal
              ⚓ Software portability ; https://en.wikipedia.org/wiki/Software_portability
          ⚓🖇️💡 Functional requirement ; << https://en.wikipedia.org/wiki/Functional_requirement 📅 2023-01-02 11:14:06
            Behavioral requirements describe all the cases where the system uses the functional requirements, these are captured in 🚣 use cases.
            
            🚣 As defined in requirements engineering, functional requirements specify particular results of a system. This should be contrasted with non-functional requirements, which specify overall characteristics such as cost and reliability.
            🚣 Functional requirements drive the application architecture of a system, while non-functional requirements drive the technical architecture of a system.
            The hierarchy of functional requirements collection and change, broadly speaking, is: user/stakeholder request → analyze → use case → incorporate. Often, though ...

            #️⃣ Process ; https://en.wikipedia.org/wiki/Functional_requirement#Process
              🚣 A typical functional requirement will contain a unique name and number, a brief summary, and a rationale. 
              🚣 Many requirements may be uncovered during the use case development. When this happens, the requirements analyst may create a placeholder requirement with a name and summary, and research the details later, to be filled in when they are better known.
          ⚓📎 Non-Functional requirement (NFR), quality requirements ; << https://en.wikipedia.org/wiki/Non-functional_requirement
            📝 &comment ; terms: quality requirements 🔗https://en.wikipedia.org/wiki/Functional_requirement
            🚣 The plan for implementing functional requirements is detailed in the system design. The plan for implementing non-functional requirements is detailed in the system architecture, because they are usually architecturally significant requirements.

            #️⃣📎 1 Definition ; https://en.wikipedia.org/wiki/Non-functional_requirement#Definition
              Broadly, functional requirements define what a system is supposed to do and non-functional requirements define how a system is supposed to be. ... 🆚
              Qualities—that is non-functional requirements—can be divided into two main categories: ... 
            #️⃣📍 2 Examples ; https://en.wikipedia.org/wiki/Non-functional_requirement#Examples
          #️⃣🖇️ ility : Noun ; << https://en.wiktionary.org/wiki/ility#English 📅 2023-01-02 11:45:22


          ⚓ Techinical debt ; << https://en.wikipedia.org/wiki/Technical_debt
          ⚓📎 Software entropy ; << https://en.wikipedia.org/wiki/Software_entropy
          ⚓ Software rot ; << https://en.wikipedia.org/wiki/Software_rot
            (| bit rot | code rot | software erosion | software decay | software entropy)

    ⚓ Agile software development, agile ; https://en.wikipedia.org/wiki/Agile_software_development
      #️⃣ 6 💡 Agile software development methods ; https://en.wikipedia.org/wiki/Agile_software_development#Agile_software_development_methods
  # Methodologies and frameworks
    ⚓📎 DevOps ; https://en.wikipedia.org/wiki/DevOps
      #️⃣ 🖇️ 1 Definition ; https://en.wikipedia.org/wiki/DevOps#Definition
        ... cross-functional combination (and a portmanteau too) of the terms and concepts for "development" and "operations, ...
        ... "a set of practices intended to reduce the time between committing a change to a system and the change being placed into normal production, while ensuring high quality" ...
      #️⃣ 3 Relationship to other approaches ; https://en.wikipedia.org/wiki/DevOps#Relationship_to_other_approaches
      #️⃣ 3.1 Agile ; https://en.wikipedia.org/wiki/DevOps#Agile
      #️⃣ 3.2 ArchOps ; https://en.wikipedia.org/wiki/DevOps#ArchOps
      #️⃣📎 3.3 CI/CD ; https://en.wikipedia.org/wiki/DevOps#CI/CD
        Plus, improved collaboration and communication between and within teams helps achieve faster time to market, with reduced risks
       & ⚓🖇️💡 CI/CD ; https://en.wikipedia.org/wiki/CI/CD 📅 2022-12-31 11:50:52
        📝 &comment; #️⃣ roll out ; https://en.wiktionary.org/wiki/roll_out#English
        #️⃣ 1 Comparison ; https://en.wikipedia.org/wiki/CI/CD#Comparison
          ...
          ⚓📎 Continuous integration (CI) ; https://en.wikipedia.org/wiki/Continuous_integration
          ⚓📎 Continuous delivery (CD) ; https://en.wikipedia.org/wiki/Continuous_delivery
          ⚓📎 Continuous deployment (CD) ; https://en.wikipedia.org/wiki/Continuous_deployment
        #️⃣ 2 Motivation ; https://en.wikipedia.org/wiki/CI/CD#Motivation
      #️⃣⭕ 5. GitOps ; https://en.wikipedia.org/wiki/DevOps#GitOps
    ⚓⭕ DevOps toolchain ; https://en.wikipedia.org/wiki/DevOps_toolchain
      #️⃣ 1 Toolchains ; https://en.wikipedia.org/wiki/DevOps_toolchain#Toolchains
      #️⃣ 2 Stages of DevOps ; https://en.wikipedia.org/wiki/DevOps_toolchain#Stages_of_DevOps
        #️⃣📎 2.1 Plan ; https://en.wikipedia.org/wiki/DevOps_toolchain#Plan
          Plan is composed of two things: "define" and "plan. ...
        #️⃣ 2.2 Create ; https://en.wikipedia.org/wiki/DevOps_toolchain#Create
          Create is composed of the building, coding, and configuring of the software development process.
          The specific activities are:
            - Design of the software and configuration
            - Coding including code quality and performance
              code development and review, source code management tools, code merging.
            - Software build and build performance
              continuous integration tools, build status.
            - Release candidate
        #️⃣ 2.3 Verify ; https://en.wikipedia.org/wiki/DevOps_toolchain#Verify
          Verify is directly associated with ensuring the quality of the software release; activities designed to ensure code quality is maintained and the highest quality is deployed to production.
          The main activities in this are:
            - provide quick and timely feedback on business risks.
            - Testing: Acceptance testing, Regression testing, ...
            - Security and vulnerability analysis
            - Performance
            - Configuration testing
          Solutions for verify related activities generally fall under four main categories: Test automation, Static analysis, Test Lab, and Security.
        #️⃣ 2.4 Packaging ; https://en.wikipedia.org/wiki/DevOps_toolchain#Packaging
          Packaging refers to the activities involved once the release is ready for deployment, often also referred to as staging or Preproduction / "preprod".[8]
          This often includes tasks and activities such as:
            - artifact repository
            - Approval/preapprovals
            - Package configuration
            - Triggered releases
            - Release staging and holding
              application pre-deployment staging
        #️⃣ 2.5 Release ; https://en.wikipedia.org/wiki/DevOps_toolchain#Release
          Release related activities include schedule, orchestration, provisioning and deploying software into production and targeted environment.[9]
          The specific Release activities include:
            - Release coordination
              change management, release approvals, release automation.
            - Deploying and promoting applications
            - Fallbacks and recovery
            - Scheduled/timed releases
          Solutions that cover this aspect of the toolchain include application release automation, deployment automation and release management.
        #️⃣ 2.6 Configure ; https://en.wikipedia.org/wiki/DevOps_toolchain#Configure
          Configure activities fall under the operation side of DevOps. Once software is deployed, there may be additional IT infrastructure provisioning and configuration activities required.[8]
          Specific activities including:
            - Infrastructure management: storage, database and network provisioning and configuring
              infrastructure as code tools
            - Application provision and configuration.
          The main types of solutions that facilitate these activities are continuous configuration automation, configuration management, and infrastructure as code tools.
        #️⃣ 2.7 Monitor ; https://en.wikipedia.org/wiki/DevOps_toolchain#Monitor
          Monitoring is an important link in a DevOps toolchain. It allows IT organization to identify specific issues of specific releases and to understand the impact on end-users.[8]
          A summary of Monitor related activities are:
            - Performance of IT infrastructure
            - End-user response and experience
            - Production metrics and statistics
          Information from monitoring activities often impacts Plan activities required for changes and for new release cycles.
        #️⃣ 2.8 Version Control ; https://en.wikipedia.org/wiki/DevOps_toolchain#Version_Control
          Version Control is an important link in a DevOps toolchain and a component of software configuration management.
          Version Control is the management of changes to documents, computer programs, large web sites, and other collections of information.[8]
          A summary of Version Control related activities are:
            - Non-linear development
            - Distributed development
            - Compatibility with existent systems and protocols
            - Toolkit-based design
          Information from Version Control often supports Release activities required for changes and for new release cycles.
    ⚓ Rational Unified Process (RUP) ; https://en.wikipedia.org/wiki/Rational_Unified_Process

  # Practices
    ⚓ Domain-Driven Design (DDD) ; https://en.wikipedia.org/wiki/Domain-driven_design
      #️⃣ 1 Overview ; https://en.wikipedia.org/wiki/Domain-driven_design#Overview
        - ubiquitous language, common language
      ⚓ domain model ; << https://en.wikipedia.org/wiki/Domain_model
      ⚓ Domain-Specific Language, DSL ; << https://en.wikipedia.org/wiki/Domain-specific_language
      ⚓ Domain-Specific modeling, DSM ; << https://en.wikipedia.org/wiki/Domain-specific_modeling
      
      ⚓ general-purpose language ; << https://en.wikipedia.org/wiki/General-purpose_language
    ⚓ Object-Oriented Analysis and Design (OOAD) ; << https://en.wikipedia.org/wiki/Object-oriented_analysis_and_design

    ⚓⭕ Acceptance Test-Driven Development (ATDD) ; https://en.wikipedia.org/wiki/Acceptance_test-driven_development
      ⚓ Specification by example (SBE) ; << https://en.wikipedia.org/wiki/Specification_by_example
      ⚓ Test-Driven Development (TDD) ; << https://en.wikipedia.org/wiki/Test-driven_development
      ⚓📍 Behavior-Driven Development (BDD) ; << https://en.wikipedia.org/wiki/Behavior-driven_development
        BDD is considered an effective technical practice especially when the "problem space" of the business problem to solve is complex.
        #️⃣ 2 💡 History ; https://en.wikipedia.org/wiki/Behavior-driven_development#History
          The first story-based framework in RSpec was later replaced by Cucumber mainly developed by Aslak Hellesøy.
          Capybara, which is a part of the Cucumber testing framework is one such web-based test automation software.
        #️⃣ 2 Principles of BDD ; https://en.wikipedia.org/wiki/Behavior-driven_development#Principles_of_BDD
        #️⃣ 2.1 💡 Behavioral specifications ; https://en.wikipedia.org/wiki/Behavior-driven_development#Behavioral_specifications
          BDD does not have any formal requirements for exactly how these user stories must be written down, but it does insist that each team using BDD come up with a simple, standardized format for writing down the user stories which includes the elements listed above.[5][16] However, in 2007 Dan North suggested a template for a textual format which has found wide following in different BDD software tools.[16] A very brief example of this format might look like this:
          ...
    ⚓ Extreme programming practices (XP) ; https://en.wikipedia.org/wiki/Extreme_programming_practices
      #️⃣ 3 💡 Shared understanding ; https://en.wikipedia.org/wiki/Extreme_programming_practices#Shared_understanding
        #️⃣ 3.1 Coding standard ; https://en.wikipedia.org/wiki/Extreme_programming_practices#Coding_standard
        #️⃣ 3.2 Collective code ownership, CCO ; https://en.wikipedia.org/wiki/Extreme_programming_practices#Collective_code_ownership
        #️⃣ 3.3 Simple design ; https://en.wikipedia.org/wiki/Extreme_programming_practices#Simple_design
        #️⃣ 3.4 System metaphor ; https://en.wikipedia.org/wiki/Extreme_programming_practices#System_metaphor
      ⚓ Pair programming (PP) ; << https://en.wikipedia.org/wiki/Pair_programming


  
  # Tools
    ⚓ debugger, debugging tool ; https://en.wikipedia.org/wiki/Debugger
    ⚓ Debug Adapter Protocol, DAP << https://github.com/Microsoft/debug-adapter-protocol
     & https://microsoft.github.io/debug-adapter-protocol/

  ⚓ User story ; << https://en.wikipedia.org/wiki/User_story
  ⚓ Coding conventions << https://en.wikipedia.org/wiki/Coding_conventions
    - Coding standards
(Software Development basics)
  * code snippet; code snippet
      - 문법이 아닌 복잡한 알고리즘과 code snippet 은 여기에 기록한다. 문법은 개별 언어의 문단에 기록한다.
    + 각 process 를 pseudo-code 로 처리가 가능하도록 서술한다.
    + 복잡한 알고리즘인 경우 code snippet 이 있다면,
      - [집, 회사] 에서의 프로젝트의 개발, 테스트까지 모두 끝나먄 개인 라이브러리에 [기록, 변경] 한다.
      - 어떻게든 회사에서 사용한다면 버전별 차이가 생길 수밖에 없다. 최대한 통합하기 위해 utility 패키지에 추가 및 병합하도록 한다.
      - code snippet 이 존재하면 Time complexity 바로 다음줄에 reference 표시한다.
  - command; command of subject or command
  ⚓ Software benchmarks ; https://star-history.com/


  ❓ FAQ <<
    🆚 (comparsion); property    vs    method
      🔗 https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Property_Accessors#description

  ⚓ Expression language ; https://en.wikipedia.org/wiki/Expression_language
    - e.g. XPath

  ⚓ third-party source ; https://en.wikipedia.org/wiki/Third-party_source
  ⚓ third-party software component ; https://en.wikipedia.org/wiki/Third-party_software_component

  ⚓ artifact ; https://en.wikipedia.org/wiki/Artifact_(software_development)
  ⚓ concern ; https://en.wikipedia.org/wiki/Concern_(computer_science)
  ⚓ permalink, permanent link ; https://en.wikipedia.org/wiki/Permalink

  ⚓ Cohesion | 응집도 ; https://en.wikipedia.org/wiki/Cohesion_(computer_science)
  ⚓ coupling | 결합도 ; https://en.wikipedia.org/wiki/Coupling_(computer_programming)
  ⚓ Application service provider (ASP) ; https://en.wikipedia.org/wiki/Application_service_provider
  ⚓ Read-Eval-Print-Loop (REPL), interactive toplevel, language shell ; https://en.wikipedia.org/wiki/Read%E2%80%93eval%E2%80%93print_loop

  ⚓ Emoji ; https://en.wikipedia.org/wiki/Emoji
    https://unicode.org/emoji/charts/full-emoji-list.html
  ⚓ User Interface Design, user interface engineering, UID ; https://en.wikipedia.org/wiki/User_interface_design
  ⚓ User experience Design, UXD, UED, XD ; https://en.wikipedia.org/wiki/User_experience_design

  ⚓ Middleware ; https://en.wikipedia.org/wiki/Middleware
  ⚓ Pipeline, data pipeline ; https://en.wikipedia.org/wiki/Pipeline_(computing)

  ⚓ Killer feature ; https://en.wikipedia.org/wiki/Killer_feature

----------------------------------------------
⚓📎 input–process–output (IPO) model ; https://en.wikipedia.org/wiki/IPO_model
  #️⃣🖇️ fall-through : Noun ; << https://en.wiktionary.org/wiki/fall-through#English 📅 2023-01-02 11:39:02

  ⚓ Black box systems ; https://en.wikipedia.org/wiki/Black_box
================================================
⚓ software testing ; https://en.wikipedia.org/wiki/Software_testing
  # Contents
    #️⃣ 4 Testing levels ; https://en.wikipedia.org/wiki/Software_testing#Testing_levels
      #️⃣ 4.1 Unit testing ; https://en.wikipedia.org/wiki/Software_testing#Unit_testing
        & https://en.wikipedia.org/wiki/Unit_testing
        ⚓📎 Test Anything Protocol (TAP) ; https://en.wikipedia.org/wiki/Test_Anything_Protocol
        
      #️⃣ 4.2 Integration testing ; https://en.wikipedia.org/wiki/Software_testing#Integration_testing
        & https://en.wikipedia.org/wiki/Integration_testing

      #️⃣ 4.3 System testing ; https://en.wikipedia.org/wiki/Software_testing#System_testing
        & https://en.wikipedia.org/wiki/System_testing

      #️⃣ 4.4 Acceptance testing ; https://en.wikipedia.org/wiki/Software_testing#Acceptance_testing
        & https://en.wikipedia.org/wiki/Acceptance_testing
  ⚓ test harness, automated test framework ; << https://en.wikipedia.org/wiki/Test_harness
  ⚓ test automation ; << https://en.wikipedia.org/wiki/Test_automation
    📝 &comment
      ⚓ test hardness, automated test framework ; https://en.wikipedia.org/wiki/Test_harness
⚓ List of unit testing frameworks ; https://en.wikipedia.org/wiki/List_of_unit_testing_frameworks


================================================
⚓📎 Software distribution ; https://en.wikipedia.org/wiki/Software_distribution
  - distro, binary distribution
  In recent years, the term has come to refer to nearly any "finished" software

  ⚓ Software license ; https://en.wikipedia.org/wiki/Software_licence
    ⚓ GNU General Public License, GNU GPL, GPL ; https://en.wikipedia.org/wiki/GNU_General_Public_License
      📝 &comment; 
        https://namu.wiki/w/GNU%20%EC%9D%BC%EB%B0%98%20%EA%B3%B5%EC%A4%91%20%EC%82%AC%EC%9A%A9%20%ED%97%88%EA%B0%80%EC%84%9C
        "소스 코드" 가 포함되어있는 배포에 대한 권리인듯. 때문에 docs generator 을 사용하여 생산된 산출물은 포함되지 않는 것으로 보임.
    
    ⚓ Comparison of free and open-source software licences ; << https://en.wikipedia.org/wiki/Comparison_of_free_and_open-source_software_licences
  # Compensation models
    # Pay what you want
      ⚓ Donationware ; https://en.wikipedia.org/wiki/Donationware
      ⚓ Careware, charityware, helpware, goodware ; https://en.wikipedia.org/wiki/Careware
  # Delivery methods
    ⚓ On-premises software, on-prem ; https://en.wikipedia.org/wiki/On-premises_software
    ⚓ 🔗 Software as a service ; https://en.wikipedia.org/wiki/Software_as_a_service
----------------------------------------------
(Open source software)
  ⚓ Open-source software (OSS) ; https://en.wikipedia.org/wiki/Open-source_software
  ⚓ Free and open-source software (FOSS) ; https://en.wikipedia.org/wiki/Free_and_open-source_software
    # Challenges
      ⚓ Digital rights management (DRM) ; https://en.wikipedia.org/wiki/Digital_rights_management

  ⚓ Open-source-software movement ; https://en.wikipedia.org/wiki/Open-source-software_movement
    # Concepts and practices
      # Economy, production, and development
        # Economic principles
          ⚓ Open standard ; https://en.wikipedia.org/wiki/Open_standard

================================================
(software release)
  ⚓ Software release life cycle ; https://en.wikipedia.org/wiki/Software_release_life_cycle
    #️⃣ Stages of development ; https://en.wikipedia.org/wiki/Software_release_life_cycle#Stages_of_development
      #️⃣ 2.1 Pre-alpha ; https://en.wikipedia.org/wiki/Software_release_life_cycle#Pre-alpha
      #️⃣ 2.2 Alpha ; https://en.wikipedia.org/wiki/Software_release_life_cycle#Alpha
      #️⃣ 2.3 Beta ; https://en.wikipedia.org/wiki/Software_release_life_cycle#Beta
        #️⃣ 2.3.1 Perpetual beta ; https://en.wikipedia.org/wiki/Software_release_life_cycle#Perpetual_beta
        #️⃣ 2.3.2 Open and closed beta ; https://en.wikipedia.org/wiki/Software_release_life_cycle#Open_and_closed_beta
    #️⃣ Release candidate (RC) ; https://en.wikipedia.org/wiki/Software_release_life_cycle#Release_candidate
    #️⃣ Stable release ; https://en.wikipedia.org/wiki/Software_release_life_cycle#Stable_release
    #️⃣📍 Release ; https://en.wikipedia.org/wiki/Software_release_life_cycle#Release
      #️⃣ Release to manufacturing (RTM) ; https://en.wikipedia.org/wiki/Software_release_life_cycle#Release_to_manufacturing_(RTM)
      #️⃣ General availability (GA) ; https://en.wikipedia.org/wiki/Software_release_life_cycle#General_availability_(GA)
        ⚓ End of life announcement (EOLA) ; https://en.wikipedia.org/wiki/End_of_life_announcement
        ⚓ Last order date (LOD) ; https://en.wikipedia.org/wiki/Last_order_date
        ⚓ End-of-life product (EOL product) ; https://en.wikipedia.org/wiki/End-of-life_product
      #️⃣ Release to the Web (RTW) ; https://en.wikipedia.org/wiki/Software_release_life_cycle#Release_to_the_Web_(RTW)
    
  ⚓ Release management ; https://en.wikipedia.org/wiki/Release_management
    it includes testing and deploying software releases.

  ⚓ Application-Release automation (ARA) ; https://en.wikipedia.org/wiki/Application-release_automation

  ⚓ Deployment environment ; << https://en.wikipedia.org/wiki/Deployment_environment
    #️⃣ 2 Environments ; https://en.wikipedia.org/wiki/Deployment_environment#Environments
      #️⃣ 2.4 Production ; https://en.wikipedia.org/wiki/Deployment_environment#Production
        The production environment is also known as live, particularly for servers, as it is the environment that users directly interact with.
----------------------------------------------
⚓ Cucumber (software) ; https://en.wikipedia.org/wiki/Cucumber_(software)
  📝 &comment ; read https://cucumber.io/docs/gherkin/reference/ and use pytest-bdd if use python
  MIT License (MIT)
 & https://cucumber.io/
  #️⃣ 1 Gherkin language ; https://en.wikipedia.org/wiki/Cucumber_(software)#Gherkin_language
   & https://cucumber.io/docs/gherkin
    ⚓ 🖇️ Gherkin Reference ; https://cucumber.io/docs/gherkin/reference/ 📅 2022-12-04 17:07:53
      #️⃣ Keywords ; https://cucumber.io/docs/gherkin/reference/#keywords
        #️⃣ Feature ; https://cucumber.io/docs/gherkin/reference/#feature
          These description lines are ignored by Cucumber at runtime, but are available for reporting (they are included by reporting tools like the official HTML formatter).
          You can only have a single Feature in a .feature file.
        #️⃣ Rule (as of Gherkin 6) ; https://cucumber.io/docs/gherkin/reference/#rule
          The purpose of the Rule keyword is to represent one business rule that should be implemented. It provides additional information for a feature.
        #️⃣ Example (or Scenario) ; https://cucumber.io/docs/gherkin/reference/#example
          It consists of a list of steps.
        # Steps
          Each step starts with Given, When, Then, And, or But.
          #️⃣ Given ; https://cucumber.io/docs/gherkin/reference/#given
          #️⃣ When ; https://cucumber.io/docs/gherkin/reference/#when
            It’s strongly recommended you only have a single When step per Scenario. If you feel compelled to add more, it’s usually a sign that you should split the scenario up into multiple scenarios.
          #️⃣ Then ; https://cucumber.io/docs/gherkin/reference/#then
            An outcome should be on an observable output. That is, something that comes out of the system (report, user interface, message), and not a behaviour deeply buried inside the system (like a record in a database).
          #️⃣ And, But ; https://cucumber.io/docs/gherkin/reference/#and-but
          #️⃣ * ; https://cucumber.io/docs/gherkin/reference/#Asterisk
        #️⃣ Background ; https://cucumber.io/docs/gherkin/reference/#background
          A Background is placed before the first Scenario/Example, at the same level of indentation.
          Background is also supported at the Rule level, for example:
          For a less explicit alternative to Background, check out conditional hooks.
          # 💡 Tips for using Background
        #️⃣ Scenario Outline (or Scenario Template) ; https://cucumber.io/docs/gherkin/reference/#scenario-outline
        #️⃣ Examples (or Scenarios) ; https://cucumber.io/docs/gherkin/reference/#examples
      #️⃣ Step Arguments ; https://cucumber.io/docs/gherkin/reference/#step-arguments
        # Doc Strings
          Doc strings also support using three backticks as the delimiter:
          It’s possible to annotate the DocString with the type of content it contains.
          You specify the content type after the triple quote, as follows: """markdown ...
        # Doc Tables
          # Table Cell Escaping
          ⚓ ❎ Data Table API ; https://github.com/cucumber/cucumber-jvm/tree/main/datatable
      #️⃣ Spoken Language ; https://cucumber.io/docs/gherkin/reference/#spoken-languages
        The language you choose for Gherkin should be the same language your users and domain experts use when they talk about the domain. Translating between two languages should be avoided.
        A # language: header on the first line of a feature file tells Cucumber what spoken language to use - for example # language: fr for French. If you omit this header, Cucumber will default to English (en).
        Some Cucumber implementations also let you set the default language in the configuration, so you don’t need to place the # language header in every file.
    ⚓ Localisation ; https://cucumber.io/docs/gherkin/languages/





※※※※※※※※※※※※※※
(Software Principles, Softare Design Patterns)
  📝⭕ &comment
    Design look and feel
  ⚓ SOLID ; https://en.wikipedia.org/wiki/SOLID
    ⚓ Single-Responsibility Principle, SRP ; https://en.wikipedia.org/wiki/Single-responsibility_principle
    ⚓ Open-closed principle ; https://en.wikipedia.org/wiki/Open%E2%80%93closed_principle
    ⚓ Liskov substitution principle, Substitutability, LSP, (strong) behavioral subtyping ; https://en.wikipedia.org/wiki/Liskov_substitution_principle
    ⚓ Interface Segregation Principle, ISP ; https://en.wikipedia.org/wiki/Interface_segregation_principle
      - role interfaces
    ⚓ Dependency inversion principle ; https://en.wikipedia.org/wiki/Dependency_inversion_principle
      📝 &comment; refer to 🔗 Mixin, mix-in

  ⚓ Reinventing the wheel ; << https://en.wikipedia.org/wiki/Reinventing_the_wheel
  ⚓ Do not Repeat Yourself (DRY) ; https://en.wikipedia.org/wiki/Don%27t_repeat_yourself
    - WET; Write Everything Twice, Write Every Time, We Enjoy Typing, Waste Everyone's Time
    - AHA; Avoid Hasty Abstractions

  ⚓ single source of truth (SSOT), single point of truth (SPOT), 단일 진실 공급원 ; https://en.wikipedia.org/wiki/Single_source_of_truth

  ⚓ Separation of Concerns (SoC), 관심사 분리 ; https://en.wikipedia.org/wiki/Separation_of_concerns
    3 Examples
      3.1 Internet protocol stack
      3.2 HTML, CSS, JavaScript
      3.3 Subject-oriented programming
      3.4 Aspect-oriented programming
      3.5 Levels of analysis in artificial intelligence
      3.6 Normalized systems
      3.7 SoC via partial classes
        3.7.1 SoC via partial classes in Ruby


  ⚓ Solution architecture ; https://en.wikipedia.org/wiki/Solution_architecture

================================================
⚓ Programming Paradigms ; https://en.wikipedia.org/wiki/Programming_paradigm
  ⚓ declarative programming ; https://en.wikipedia.org/wiki/Declarative_programming
    ⚓ functional programming ; https://en.wikipedia.org/wiki/Functional_programming
      It is a declarative programming paradigm in which function definitions are trees of expressions that map values to other values, rather than a sequence of imperative statements which update the running state of the program.
    ⚓ Dataflow programming ; https://en.wikipedia.org/wiki/Dataflow_programming
    ⚓🚣 Logic programming ; https://en.wikipedia.org/wiki/Logic_programming
  ⚓ Imperative programming ; https://en.wikipedia.org/wiki/Imperative_programming
    ⚓ Object-oriented programming, OOP ; https://en.wikipedia.org/wiki/Object-oriented_programming
      ⚓ Multiple inheritance ; << https://en.wikipedia.org/wiki/Multiple_inheritance
        - Method Resolution Order (MRO)
      ⚓⭕ Mixin, mix-in ; https://en.wikipedia.org/wiki/Mixin
        Mixins are sometimes described as being "included" rather than "inherited".
        Mixins encourage code reuse and can be used to avoid the inheritance ambiguity that multiple inheritance can cause[5] (the "diamond problem"), or to work around lack of support for multiple inheritance in a language.
        A mixin can also be viewed as an interface with implemented methods.
        This pattern is an example of enforcing the dependency inversion principle.

  ⚓ Concurrent computing, 병행 컴퓨팅 << https://en.wikipedia.org/wiki/Concurrent_computing
    ⚓ Semaphore ; << https://en.wikipedia.org/wiki/Semaphore_(programming)
    ⚓ Critical section ; << https://en.wikipedia.org/wiki/Critical_section

    # Classic problems
      ⚓ Deadlock ; https://en.wikipedia.org/wiki/Deadlock
      ⚓ race condition | race hazard ; https://en.wikipedia.org/wiki/Race_condition
  ⚓ Parallel computing, 병렬 컴퓨팅 ; << https://en.wikipedia.org/wiki/Parallel_computing
    # General
      Distributed computing ; << https://en.wikipedia.org/wiki/Distributed_computing
    # Elements 
      ⚓📎 Thread ; https://en.wikipedia.org/wiki/Thread_(computing)
        #️⃣ Threads and data synchronization ; https://en.wikipedia.org/wiki/Thread_(computing)#Single-threaded_vs_multithreaded_programs
          ⚓ Thread safety ; << https://en.wikipedia.org/wiki/Thread_safety
      ⚓ Process ; https://en.wikipedia.org/wiki/Process_(computing)

        ⚓ Processor scheduling ; << https://en.wikipedia.org/wiki/Scheduling_(computing)
          ⚓📎 Process state ; << https://en.wikipedia.org/wiki/Process_state
            #️⃣ 1 Primary process states ; https://en.wikipedia.org/wiki/Process_state#Primary_process_states
              #️⃣ 1.1 Created, New ; https://en.wikipedia.org/wiki/Process_state#Created
              #️⃣ 1.2 Ready, waiting ; https://en.wikipedia.org/wiki/Process_state#Ready
              #️⃣📎 1.3 Running ; https://en.wikipedia.org/wiki/Process_state#Running
                The process's instructions are executed by one of the CPUs (or cores) of the system.
                There is at most one running process per CPU or core.
                A process can run in either of the two modes, namely kernel mode or user mod
               & ⚓ Run Queue ; https://en.wikipedia.org/wiki/Run_queue
                #️⃣ 1.3.1 Kernel mode ; https://en.wikipedia.org/wiki/Process_state#Kernel_mode
                #️⃣ 1.3.2 User mode ; https://en.wikipedia.org/wiki/Process_state#User_mode
              #️⃣ 1.4 Blocked ; https://en.wikipedia.org/wiki/Process_state#Blocked
              #️⃣ 1.5 Terminated ; https://en.wikipedia.org/wiki/Process_state#Terminated
          ⚓ Starvation ; https://en.wikipedia.org/wiki/Starvation_(computer_science)
        ⚓ Inter-process communication, interprocess communication (IPC) ; << https://en.wikipedia.org/wiki/Inter-process_communication
    # Coordination
      ⚓💡 Synchronization ; https://en.wikipedia.org/wiki/Synchronization_(computer_science)
        Process synchronization, Data synchronization
        #️⃣ Minimizing synchronization ; https://en.wikipedia.org/wiki/Synchronization_(computer_science)#Minimizing_synchronization
          #️⃣ Implementation of Synchronization ; https://en.wikipedia.org/wiki/Synchronization_(computer_science)#Implementation_of_Synchronization
            ⚓ Barriers ; https://en.wikipedia.org/wiki/Barrier_(computer_science)
    # Programming ; 🔗 Stream processing, 🔗 Dataflow programming
    # Hardware  
      ⚓ Flynn's taxonomy
        # Multiple data streams
          ⚓ Single instruction, multiple data (SIMD) ; https://en.wikipedia.org/wiki/Single_instruction,_multiple_data


    ⚓ Consistency Model ; << https://en.wikipedia.org/wiki/Consistency_model
      ⚓ Eventual consistency ; << https://en.wikipedia.org/wiki/Eventual_consistency
    ⚓ Load balancing (computing) ; << https://en.wikipedia.org/wiki/Load_balancing_(computing)
  
  ⚓ Metaprogramming ; https://en.wikipedia.org/wiki/Metaprogramming
  ⚓ Dynamic/Scripting programming language ; https://en.wikipedia.org/wiki/Dynamic_programming_language
  ⚓ Stream processing, event stream processing, data stream processing, distributed stream processing ; << https://en.wikipedia.org/wiki/Stream_processing

  ⚓ Comparison of multi-paradigm programming languages ; << https://en.wikipedia.org/wiki/Comparison_of_multi-paradigm_programming_languages  

※※※※※※※※※※※※※※
⚓ type system ; https://en.wikipedia.org/wiki/Type_system
  ⚓ covariance and contravariance, 공변성과 반공변성 ; << https://en.wikipedia.org/wiki/Covariance_and_contravariance_(computer_science)
    📝 &comment
      detail description: https://velog.io/@lsb156/covariance-contravariance
                                      Kotlin       Java
        covariance (upper bound)      Type<out T>  Type<? extends T>
        contravariance (lower bound)  Type<in T>   Type<? super T>

    - Variance

※※※※※※※※※※※※※※
(Evaluation strategy)
  ⚓ Evaluation strategy ; https://en.wikipedia.org/wiki/Evaluation_strategy
    # Contents
      #️⃣ Strict binding strategies ; https://en.wikipedia.org/wiki/Evaluation_strategy#Strict_binding_strategies
        #️⃣ 3.1 Call by value ; https://en.wikipedia.org/wiki/Evaluation_strategy#Call_by_value
          #️⃣ 3.1.1 Implicit limitations ; https://en.wikipedia.org/wiki/Evaluation_strategy#Implicit_limitations
        #️⃣ 3.2 Call by reference ; https://en.wikipedia.org/wiki/Evaluation_strategy#Call_by_reference
        #️⃣ 📎📍 3.3 Call by sharing ; https://en.wikipedia.org/wiki/Evaluation_strategy#Call_by_sharing
          e.g. python, java, javascript
        #️⃣ 3.4 Call by copy-restore ; https://en.wikipedia.org/wiki/Evaluation_strategy#Call_by_copy-restore
      #️⃣ Non-strict binding strategies ; https://en.wikipedia.org/wiki/Evaluation_strategy#Non-strict_binding_strategies
        #️⃣ 4.1 Call by name ; https://en.wikipedia.org/wiki/Evaluation_strategy#Call_by_name
        #️⃣ 4.2 Call by need ; https://en.wikipedia.org/wiki/Evaluation_strategy#Call_by_need
        #️⃣ 4.3 Call by macro expansion ; https://en.wikipedia.org/wiki/Evaluation_strategy#Call_by_macro_expansion
        #️⃣ 4.4 Call by future ; https://en.wikipedia.org/wiki/Evaluation_strategy#Call_by_future
        #️⃣ 4.5 Optimistic evaluation ; https://en.wikipedia.org/wiki/Evaluation_strategy#Optimistic_evaluation
    ⚓ Eager evaluation, strict evaluation ; https://en.wikipedia.org/wiki/Eager_evaluation
    ⚓📎⭕ Lazy evaluation ; https://en.wikipedia.org/wiki/Lazy_evaluation
  
  ⚓ Expression | 식, 式 ; https://en.wikipedia.org/wiki/Expression_(computer_science)
    📝💡 &comment; some Statement can be considered as also Expression in Python. e.g. function
      - a statement may have internal components but it not means the statement is also expression.
      🛍️ e.g. statement ∩ expression: function.
      🛍️ e.g. only statement: if-else, loops
  ⚓ Statement | 문, 文 ; https://en.wikipedia.org/wiki/Statement_(computer_science)
  ⚓ Name resolution (programming languages) ; https://en.wikipedia.org/wiki/Name_resolution_(programming_languages)
(Evaluation strategy basics)
  🆚 Property, Attribute
    Property
      (computing) An editable or read-only parameter associated with an application, component or class.
    Attribute
      (computing, object-oriented programming) An option or setting belonging to some object.

    references    
      https://stackoverflow.com/questions/258469/what-is-the-difference-between-attribute-and-property
      Properties are generally abstract, while attributes are generally concrete (think class/object).
      Humans have properties: hasHair and hairColor. "John" has attributes: hasHair="true" and hairColor="purple" (John is a Twisted Sister fan)

================================================
Natural language processing (NLP) ; https://en.wikipedia.org/wiki/Lexical_analysis
  ⚓ Text mining, text data mining (TDM) ; https://en.wikipedia.org/wiki/Text_mining
    - similar to text analytics
    ⚓ Text segmentation ; https://en.wikipedia.org/wiki/Text_segmentation
      ⚓ Lexical analysis, lexing, tokenization ; https://en.wikipedia.org/wiki/Lexical_analysis
# Automata theory: formal languages and formal grammars ; 
  ⚓ Automata theory ; https://en.wikipedia.org/wiki/Automata_theory
  ⚓ Formal language, 형식 언어, 形式言語 ; https://en.wikipedia.org/wiki/Formal_language
  ⚓ Formal grammar ; https://en.wikipedia.org/wiki/Formal_grammar




















📰🧮 원격에서 실시간 출력 보기 >> tasks. json 만들기? task explorer 로 task 분류?.. raspberry_pi?
  ssh r-pi.local '
  /mnt/host/drivers/kernel_timer_app 0xF0
  '
  ssh -t r-pi.local '/mnt/host/drivers/kernel_timer_app 0xF0'
  ❓ tty 가 뭐길래? 실시간 출력을 하게 하는데?
  ssh -t r-pi.local 'journalctl -k --since "now" -f'

  

❔ https://docs.kernel.org/kbuild/makefiles.html
  #️⃣ Loadable module goals - 🪱 obj-m ; https://docs.kernel.org/kbuild/makefiles.html#loadable-module-goals-obj-m
    $(obj-m) specifies object files which are built as loadable kernel modules.


📰 glibc - linux 에 정리.. 13.15.2 Open-time Flags

Doxygen + mkdoc ; https://marketplace.visualstudio.com/items?itemName=cschlosser.doxdocgen
  File description
    말 그대로 코드의 가장 윗 부분에서 볼 수 있는 기본 설명 입니다.
    그냥 파일 가장 윗 부분'즈음'에서 트리거링하면 됩니다.


https://zephyrproject.org/
  Zephyr RTOS

  ### 서빙로봇 프로젝트

    #### 프로젝트 개요
    - **목표:** 음식점에서 자율적으로 반찬을 제공하는 서빙로봇 개발
    - **대상 개발 수준:** 경력 1~2년차 수준 (주니어 개발자 미만)
    - **사용 RTOS:** Zephyr RTOS

    #### 기기 제원
    - **베이스 플랫폼:** 터틀봇 3

    #### 서빙로봇 주요 기능
    1. **반찬 담기 자동화**
      - 전기 압력 발판을 밟으면:
        - 통신 --> 천장이나 벽에 설치된 반찬재고통의 아래방향으로 뚜껑이 잠시 열림.
        - 반찬이 아래로 떨어짐.
      - 서빙로봇 작동:
        - 슬라이딩 방식 사물함 구조를 꺼내고 위에 위치한 반찬그릇에 반찬 담기.

    2. **자율주행 기능**
      - ROS 자율주행 모듈 사용 여부 확인 필요.
      - 사용자에게 접근하여 반찬 제공.

    #### 추가적으로 하고 싶은 기술 적용
    - **V2X:** 로봇과 외부 기기 간 통신 및 협업 가능성.
    - **CAN 통신:** 내부 모듈 간 신뢰성 높은 통신 구현.
    - **인포테인먼트:** 사용자와 상호작용할 수 있는 인터페이스 개발.
    - **Yocto:** 커스텀 리눅스 기반 시스템 생성 가능성 검토.
    - **Zephyr RTOS:** 실시간 시스템 관리 및 확장 가능성 활용.

    #### 사용처 분석
    1. **V2X**
      - 음식점 내 다른 자동화 기기와 협력 (예: 반찬재고통, 주방 시스템).
      - 로봇과 네트워크 연결을 통한 관리.

    2. **CAN 통신**
      - 로봇 내부의 다양한 센서 및 모터 간 통신 구현.
      - 신뢰성이 필요한 로봇 제어에 적합.

    3. **인포테인먼트**
      - 사용자 친화적 인터페이스 제공.
      - 반찬 선택 및 요청 기능 구현.

    4. **Yocto**
      - 로봇용 커스텀 임베디드 리눅스 개발.
      - 경량화된 시스템으로 최적의 성능 제공.

    5. **Zephyr RTOS**
      - 실시간 반응이 필요한 서빙로봇의 핵심 기능 관리.
      - 자율주행 및 반찬 담기 기능 통합.

  CAN 트랜시버란? ; Controller Area Network Transceiver (송수신기))
  CAN 트랜시버는 STM32에서 나오는 디지털 신호를 **CAN 네트워크에서 사용하는 물리적 신호(CAN_H, CAN_L)**로 변환하는 장치입니다.
  반대로, CAN 네트워크의 신호(CAN_H, CAN_L)를 STM32가 처리할 수 있는 디지털 신호로 변환하는 역할도 합니다.

  CAN_H (CAN High):
  CAN 네트워크에서 신호 전압의 높은 상태를 나타내는 라인.
  CAN_L (CAN Low):
  CAN 네트워크에서 신호 전압의 낮은 상태를 나타내는 라인.


  자동차 산업에서는 CAN 부트로더를 통해 차량 ECU 펌웨어를 업데이트하는 경우가 많습니다

  다중 태스크 처리:

    타이머는 단일 작업을 정해진 시간에 실행하는 데 적합합니다.
    하지만 여러 작업(예: 모터 제어, 센서 데이터 처리, 통신)을 동시에 실행해야 하는 경우, 타이머만으로 관리하기 어렵습니다.
    RTOS에서는 작업별로 우선순위를 설정하고, 효율적으로 스케줄링합니다.


    [Task 1: 센서 데이터 읽기] → 우선순위 높음 (1ms 간격 실행)
    [Task 2: 모터 제어] → 우선순위 중간 (10ms 간격 실행)
    [Task 3: 통신 데이터 송수신] → 우선순위 낮음 (100ms 간격 실행)

      작업	우선순위	주기
      장애물 감지 (센서 데이터 처리)      최고                        10ms마다 실행
      모터 제어                       높음                        50ms마다 실행
      경로 계획                       중간                        100ms마다 실행
      클라우드 통신                    낮음                        1초마다 실행


  ROS (Robot Operating System): 고레벨 로직
  경로 계산(Path Planning):
  ROS의 Navigation Stack을 이용해 자율주행에 필요한 경로를 계산.

  SLAM: 지도 작성 및 로봇 위치 추적.
  Global Planner: 최적 경로 계산.
  Local Planner: 장애물 회피와 로컬 경로 결정.
  주요 모듈:

  move_base: 경로 계획 및 제어를 담당.
  navigation2: ROS 2의 Navigation Stack.
  slam_toolbox: SLAM을 통한 지도 작성.
  운영 환경:
  ROS는 고수준의 작업에 특화되어 있으며, 대부분 리눅스 기반 컴퓨터나 SBC(Single Board Computer)에서 실행됩니다.

  예: TurtleBot3의 Raspberry Pi나 Jetson Nano.


  OpenCR (Open-Source Control Module for ROS)

  기기: 터틀봇 3:
    SBC (Single Board Computer)
      Raspberry pi
    주요 ROS 패키지:
      navigation2: ROS 2 기반 자율주행 라이브러리.
      slam_toolbox: SLAM(지도 작성 및 로봇 위치 추적)을 위한 도구.
      MoveIt: 경로 계획과 충돌 방지 지원.

    Zephyr RTOS
      BLE, Wi-Fi, CAN 기본 지원


  West build sytsem Zephyr


Glarity 확장에 설치하니까 유튜브 영상 최대 1분까지만 재생되는 문제.. 📅 2024-12-18 23:59:11
  다른거 찾기..

## STM32CubeProgrammer
  나의 보드: STM32 Neucloe F411RE 
  여기에서 펌웨어 업그레이드가 가능한데 타입이 only firmware vs firmware+ media있었나? 
    무슨 용도야? 왜 나누어진거지? RTOS 올릴 수 있는 보드들에 대해서만 그렇게 나오는걱나?


❓ Ubuntu Default file archiver in 2024 ...  📅 2024-12-20 04:25:45
  ⚓ File Roller ; https://en.wikipedia.org/wiki/File_Roller
  File Roller (formerly GNOME Archive Manager) is a file archiver for the GNOME desktop environment.
  윈도우에서 bandizip 정도 수준의 최고급 수준의 우분투에서 사용가능하 어플리케이션 있나..

  Peazip
  ❓ Ubuntu best media player 2024.. 📅 2024-12-20 04:25:40
  MPV Player
  brew install mpv
  Media player based on MPlayer and mplayer2
  🧪

  https://www.reddit.com/r/mpv/comments/m1sxjo/it_is_better_mpv_or_vlc_in_terms_of_video_quality/
    MPV can get better quality than VLC.
    MPV is more configurable.
    VLC is good for playback of any file, but the quality sucks compared to a proper set up mpv.
  

  Flutter는 내부적으로 Android 앱을 빌드할 때 Gradle을 사용합니다.
    cd android
    tree -L 1

  // drag and drop 으로 설치 가능.

  projectx name: Dummy_application
  🧮
    %VSCode> Flutter: Select Device
      ✔️ Start Medium Phone API 35
  > and drag and drop.
  


  HZ 는 커널이 스케줄링을 처리하기 위해 1초당 인터럽트 횟수를 정의하고 있다?
    hx ~/repos/kernels/raspberry_pi/.config
    CONFIG HZ
    rg -i Hz ~/repos/kernels/raspberry_pi/.config

  커널에서 mdelay: 스케줄링은 계속 한다. 1000단위가 넘어가면 오차가 생길 수 있어 더 높은 초를 세는 delay 를 쓴느게 좋다고 함.


  Downloading linux-x64-debug/linux-x64-flutter-gtk tools...
  Downloading linux-x64-profile/linux-x64-flutter-gtk tools...
  Downloading linux-x64-release/linux-x64-flutter-gtk tools...
  Launching lib/main.dart on Linux in debug mode...
  CMake Error at /home/wbfw109v2/st/stm32cubeclt/CMake/share/cmake-3.28/Modules/CMakeDetermineCXXCompiler.cmake:48 (message):
    Could not find compiler set in environment variable CXX:

    clang++.
  IRQ 인터럽트 발생
    -> 커널
      아키텍처별 IRQ 인식 처리 루틴
        do_IRQ(n)
          등로된 irq_desc (by request_irq) 에서 발생된irq 이넡럽트 서비스 함수 호출
    
    -> 디바이스 드라이버
      request_irq()

      irq reutnr int_handler
      free_irq

  📅 2024-12-05 15:58:50
    host) ssh-keygen -t rsa -b 2048
    ssh-copy-id pi@10.10.14.59
    ?? 여러개 있을때 뭐를 복사하나? 모두 복사하나?
    ssh r-pi.local 'sudo cp /mnt/host/class/u-boot.bin /boot/firmware/'


    라즈베리파이 안에 복사된 키들부터 삭제해야할거같은데 unknown host그런거도 포함해서

    ssh -v pi@10.10.14.59

    sudo nano /etc/nsswitch.conf
    hosts:          files mdns4_minimal [NOTFOUND=return] mymachines dns
      // 에 mdns 를 추가/삭제해봣지만 이와 별개로 접근이 잘 됨.. 라즈베리파이의 ~/.ssh
      ➡️
        ~/.ssh/authorized_keys와 SSH 키 인증 문제
          라즈베리파이에서 SSH 키 인증 방식이 활성화되어 있었다면, SSH 접속 시 클라이언트가 제공한 키가 서버의 ~/.ssh/authorized_keys에 없거나 잘못된 키로 인해 인증이 거부되었을 수 있습니다.
        삭제 후 우분투와 라즈베리파이 모두 재시작.
      # Resolving SSH "Connection Refused" Issue After Ubuntu Reformat

      ## Issue Summary
      - **Scenario**: After reformatting Ubuntu, SSH to a Raspberry Pi using `ssh pi@10.10.14.59` failed with `connection refused`.
      - **Root Cause**: 
        1. Old SSH key on Ubuntu was deleted during the reformat.
        2. Raspberry Pi's `~/.ssh/authorized_keys` still contained the old key.
        3. SSH key mismatch caused the connection to be refused.

      ## Steps to Resolve

      ### Temporary Fix
      1. **On Raspberry Pi**:
        - Deleted `~/.ssh/authorized_keys`.
        - Restarted the SSH server.
        ```bash
        sudo systemctl restart ssh
        ```
      2. **On Ubuntu**:
        - Reattempted SSH with password authentication.

      ### Permanent Fix: Restoring Key-Based Authentication
      1. **Generate a New SSH Key on Ubuntu**:
        ```bash
        ssh-keygen -t rsa -b 2048
        ```
        - Save key to default location (`~/.ssh/id_rsa`).

      2. **Copy the New Key to Raspberry Pi**:
        ```bash
        ssh-copy-id pi@10.10.14.59
        ```
        - This adds the new key to `~/.ssh/authorized_keys` on the Raspberry Pi.

      3. **Test SSH Connection**:
        ```bash
        ssh pi@10.10.14.59d
        ```

      ## Important Notes
      - **SSH Configuration on Raspberry Pi**:
        Ensure `/etc/ssh/sshd_config` has the following settings:
        ```plaintext
        PubkeyAuthentication yes
        PasswordAuthentication yes
        ```
        Restart SSH server if changes are made:
        ```bash
        sudo systemctl restart ssh
        ```

      - **Clear SSH Cache on Ubuntu (Optional)**:
        ```bash
        ssh-keygen -R 10.10.14.59
        ```

      ## Conclusion
      The issue arose due to a mismatch between the Raspberry Pi's `authorized_keys` and the missing key on the reformatted Ubuntu system. Regenerating and re-adding the SSH key resolved the problem permanently.


  mpv https://www.youtube.com/watch?v=BkJ--w2QuGk

  MPV 빌드 문제:
    Homebrew로 설치된 MPV가 Vulkan과 NVIDIA 설정을 완벽히 지원하지 않을 수 있습니다.

  Section "Device"
      Identifier "NVIDIA Card"
      Driver "nvidia"
      Option "DRI" "3"
  EndSection
    // 하고 재시작 필요?


  mpv --vo=x11 5640919-hd_1080_1920_30fps.mp4

  ❌ brew remove mkv
    It can not use NVIDIA Drviers even if it is already installed
      [vo/gpu/opengl] Suspected software renderer or indirect context.
      [vo/gpu/drm] VT_GETMODE failed: Inappropriate ioctl for device
      [vo/gpu/drm] Failed to set up VT switcher. Terminal switching will be unavailable.
      [vo/gpu/opengl] Suspected software renderer or indirect context.
      [vo/gpu] Failed to commit atomic request: Invalid argument

      [vo/gpu-next/opengl] Suspected software renderer or indirect context.
      [vo/gpu-next/drm] Can't handle VT release - signal already used
      [vo/gpu-next/drm] Failed to set up VT switcher. Terminal switching will be unavailable.
      [vo/gpu-next/opengl] Suspected software renderer or indirect context.
      [vo/gpu-next] Failed to commit atomic request: Invalid argument
      [vo/xv] Warning: this legacy VO has bad quality and performance, and will in particular result in blurry OSD and subtitles. You should fix your graphics drivers, or not force the xv VO.
    and it not create mpv app in Ubuntu desktop.
  sudo snap install mpv --edge --classic


  ⚓ mpv ; https://en.wikipedia.org/wiki/Mpv_(media_player)
    ⚓ Keyboard shortcut ; https://mpv.io/manual/master/
      # Keyboard Control
      # [ and ]
        Decrease/increase current playback speed by 10%.
      # l
        Set/clear A-B loop points. See ab-loop command for details.
  🚨 (issue); mpv browse_out/*.mp4
    [vaapi] libva: vaGetDriverNames() failed with unknown libva error
    ⚠️⭕ reqiuired.. 📅 2024-10-10 13:04:51
    # to use Hardware acceleration
      sudo apt install nvidia-cuda-toolkit
      mpv --hwdec=vdpau browse_out/*.mp4

      🆚 VDPAU, VA-API, NVDEC
        VDPAU (Video Decode and Presentation API for Unix):
          Developed by NVIDIA for video decoding on NVIDIA GPUs.
          Optimized for NVIDIA hardware.

        VA-API (Video Acceleration API):
          Developed by Intel, mainly for Intel integrated GPUs and some AMD GPUs.
          Limited compatibility with NVIDIA GPUs.

        NVDEC:
          NVIDIA-specific API for hardware decoding on modern NVIDIA GPUs.
          Operates through CUDA and works with NVIDIA's official drivers and SDK.

  🚨
    [vo/gpu/x11] XOpenIM() failed. Unicode input will not work.
    [vaapi] libva: vaGetDriverNames() failed with unknown libva error
    Using hardware decoding (vdpau-copy).

    VA-API(VAAPI: Video Acceleration API)가 GPU 하드웨어 디코딩에 적합한 드라이버를 찾지 못했음을 의미합니다.

  mpv --hwdec=vdpau 5640919-hd_1080_1920_30fps.mp4

  🧮 brew install ffmpeg
    Hardware acceleration methods:

    None;;


  📰 테스트 필요. 지금 snap 으로 설치햇는데.. brew 로 설치했을 때 하드웨어 목록 어떻게 뜬느지 dㅇㅇ.. 가속 못함. 
    sudo snap install ffmpeg --edge
    flatapk 에는 없다.. 
  FFmpeg의 NVDEC/NVENC은 CUDA 툴킷에 의존합니다. CUDA가 설치되지 않은 경우, 설치해야 합니다.
  sudo apt install nvidia-cuda-toolkit
  nvcc --version



  nmap -------------  
    copy_from_user, copy_to_user 대신..


  >>>>>>>>>>
  ❓ 출력에서 중요한 점은 ffmpeg -hwaccels 명령의 결과에 "Hardware acceleration methods:" 아래에 어떤 하드웨어 가속 옵션도 나열되지 않았다는 것입니다. 이는 현재 설치된 FFmpeg가 NVDEC/NVENC 또는 기타 하드웨어 가속 기능을 활성화하지 않고 빌드되었음을 의미합니다.


  ps aux 

  https://wiki.yowu.dev/ko/dev/Ubuntu/ffmpeg-compile-with-nvidia-accelerator
  ffmpeg -hwaccels
  ..brew 는 안됨.. from source build 는 라이브러리 없다는 오류..

  sudo snap install ffmpeg --edge

  Hardware acceleration methods:
  vdpau
  cuda
  vaapi
  drm
  opencl
  vulkan

  VA-API(Video Acceleration API)

  mpv --hwdec=help

  애플리케이션(예: MPV, FFmpeg, VLC 등):
    VA-API를 사용하여 하드웨어 가속 기능 요청(비디오 디코딩/인코딩)을 보냅니다.
  libva:
    애플리케이션의 요청을 적절한 GPU 드라이버로 전달합니다.
  GPU 드라이버:
    요청된 작업(비디오 디코딩/인코딩)을 GPU에서 처리합니다.
  GPU:
    하드웨어 가속 기능을 사용하여 작업을 처리한 후 결과를 애플리케이션에 반환합니다.


  brew install libva
    Hardware accelerated video processing library
  Warning: libva 2.22.0 is already installed and up-to-date.
  To reinstall 2.22.0, run:
    brew reinstall libva


  VA-API는 Intel 및 AMD GPU에서 잘 지원되지만, NVIDIA는 기본적으로 지원하지 않으며 간접적으로 VDPAU를 통해 사용할 수 있습니다.
  dpkg -l | grep libva
  ii  libva-drm2:amd64                              2.20.0-2build1                           amd64        Video Acceleration (VA) API for Linux -- DRM runtime
  ii  libva-drm2:i386                               2.20.0-2build1                           i386         Video Acceleration (VA) API for Linux -- DRM runtime
  ii  libva-wayland2:amd64                          2.20.0-2build1                           amd64        Video Acceleration (VA) API for Linux -- Wayland runtime
  ii  libva-x11-2:amd64                             2.20.0-2build1                           amd64        Video Acceleration (VA) API for Linux -- X11 runtime
  ii  libva-x11-2:i386                              2.20.0-2build1                           i386         Video Acceleration (VA) API for Linux -- X11 runtime
  ii  libva2:amd64                                  2.20.0-2build1                           amd64        Video Acceleration (VA) API for Linux -- runtime
  ii  libva2:i386                                   2.20.0-2build1                           i386         Video Acceleration (VA) API for Linux -- runtime

  ~/Downloads via C v13.3.0-gcc 
  ❯ vainfo
  Command 'vainfo' not found, but can be installed with:
  sudo apt install vainfo

  ~/Downloads via C v13.3.0-gcc 
  ❯ vainfo
  libva info: VA-API version 1.20.0
  libva error: vaGetDriverNames() failed with unknown libva error
  vaInitialize failed with error code -1 (unknown libva error),exit
  hwdec=auto vo=gpu gpu-api=opengl 

  https://github.com/elFarto/nvidia-vaapi-driver/issues/245

  🚨 Un ed error 📅 2024-12-19 17:59:02
    [vo/gpu/x11] XOpenIM() failed. Unicode input will not work.
    [vaapi] libva: vaGetDriverNames() failed with unknown libva error


  ➡️ sudo snap install vlc --edge
  https://snapcraft.io/ffmpeg
  Folders scanned by the Media Library
  $HOME/Vidoes
  $HOME/Music

  https://www.bandisoft.com/ark/

  ❗ Zstd
    https://flathub.org/apps/com.github.unrud.VideoDownloader
    고급 설정 가능, 다양한 사이트 지원	yt-dlp 기반 강력한 기능	단순한 인터페이스, 고급 설정 익숙함 필요


  # community build (Unverified)
  flatpak install -y flathub io.mpv.Mpv

    ## Run
    # %shell> flatpak run io.mpv.Mpv
    # or click the desktop icon

  GPU 및 하드웨어 가속 지원이 더 원활.
  권한 관리가 더 유연하며, 호환성 문제 발생 가능성이 낮음.


  flatpak install -y flathub io.mpv.Mpv

  Looking for matches…
  Required runtime for io.mpv.Mpv/x86_64/stable (runtime/org.freedesktop.Platform/x86_64/24.08) found in remote flathub

  io.mpv.Mpv permissions:
      ipc                     network       pulseaudio       wayland       x11       devices       file access [1]      dbus access [2]
      bus ownership [3]

      [1] /tmp, host:ro, xdg-pictures, xdg-run/pipewire-0:ro, xdg-videos, ~/.var/app/io.mpv.Mpv/config/mpv/scripts:create
      [2] org.gnome.SessionManager
      [3] org.mpris.MediaPlayer2.mpv.*


          ID                                        Branch           Op           Remote            Download
  1. [✓] org.freedesktop.Platform.Locale           24.08            i            flathub            18.6 kB / 379.7 MB
  2. [✓] org.freedesktop.Platform                  ㅊ24.08            i            flathub           132.1 MB / 261.4 MB
  3. [✓] io.mpv.Mpv                                stable           i            flathub            50.3 MB / 56.5 MB

  Installation complete.

  flatpak run io.mpv.Mpv

    
  📦 Lua ; Powerful, lightweight programming language
      https://repology.org/project/lua/versions
      https://formulae.brew.sh/formula/lua#default
  

  https://flathub.org/apps/org.wezfurlong.wezterm
  TODO: ➡️ default fish settings required.. in Ubuntu
  flatpak install flathub org.wezfurlong.wezterm
  flatpak run org.wezfurlong.wezterm

    Note that the directories 

    '/var/lib/flatpak/exports/share'
    '/home/wbfw109v2/.local/share/flatpak/exports/share'

    are not in the search path set by the XDG_DATA_DIRS environment variable, so
    applications installed by Flatpak may not appear on your desktop until the
    session is restarted.

    >> sudo reboot


    PostgreSQL:
      트랜잭션 처리 성능이 우수하며 대규모 데이터를 다룰 때 유리.
      읽기보다 쓰기가 많은 작업에 적합.
      동시성 제어를 위해 Multi-Version Concurrency Control(MVCC)을 효율적으로 사용.
    MariaDB:
      경량화된 아키텍처로, 읽기 작업이 많은 애플리케이션에 적합.
      단순한 쿼리나 OLAP(온라인 분석 처리) 작업에서 빠른 속도.
      플러그인 스토리지 엔진(MyRocks, Aria 등)을 통해 워크로드에 맞게 성능 조정 가능.


    6. 사용 사례
    PostgreSQL:
      데이터 분석 및 OLTP(온라인 트랜잭션 처리) 작업.
      복잡한 데이터 모델링이 필요한 환경.
      지리공간 데이터 작업(PostGIS 등).
    MariaDB:
      웹 애플리케이션 및 경량 서비스.
      읽기 작업이 많은 워크로드.
      기존 MySQL 애플리케이션과의 호환성이 필요한 경우.

  ⭕➡️ homebrew -> snap -> flatpak -> apt 으로 apt 탐색해보기. 📅 2024-12-20 04:26:11
    mpv
      // flatpak 으로 설치해서 실행하니까 오류가 없다.
      "Flatpak은 자체적으로 설계된 샌드박스를 사용하며, 기본적으로 필요한 권한을 자동으로 설정합니다."  이거 때문인가? 동일한 샌드박스지만 차이가.
    이유: ... 이거 작성하기.. !!!!
      homebrew.
        최신 패키지 직접 빌드. 가장 다양한 패키지들 존재. 자동 업데이트. 그리고 시스템 패키지가 아닌 사용자 패키지이므로 관리가 편함. 유연하고.
        --> gui 앱이 필요한 경우, --cask 옵션이 필요한데 이것은 linux 가 아니라 macOS 와만 호환됨. 그럴 경우 다음 패키지 관리자를 생각해보도록.
          그리고 이렇게 바이너리로 설치하면 ffmpeg 같은 경우는 하드웨어 가속이 안되서 설치만 되고 gpu 가속은 사용 불가능하다. snap 이나 flatpak 사용해서 설치해야 함.
        🛍️ e.g. <대부분의 패키지들>
      snap --classic with edge channel
        --classic                            Put snap in classic mode and disable security confinement

        gui 앱 설치용. 최신 버전의 패키지를 설치가능하며 쉽게 업데이트할 수 있으며 --classic 옵션으로 샌드박스 환경이 아니도록 하여 일반 패키지처럼 설치 가능하다. 공식 패키지이므로 인증을 받음. 생각보다 다양한 GUI 앱이 존재한다.
        이렇게 설치하면 하드웨어 가속도 된다. (Ffmpeg)
        --> 단 --classic 을 지원하지 않으면 sandbox 환경으로 모두 권한을 직접 설정해야 하므로 (snap connections 였나 옵션?) 매우 불편하며 사용하기 어렵다. 
      flatpak
        gui 앱 설치 용. snap과 비슷하지만, 앱의 기본 권한이 설정되어있어 사용하기 훨씬 편하다. 또한 sudo 가 필요없도록 --user 로 설치 가능한 brew 와 비슷한 정도의 큰 장점이 있다.
        deb 로 직접 받아야 하거나 ppa 저장소 설정을 하거나, source /etc/os-release 이후 apt 으로 keyring (gpg) 설정 등 이후 수동으로 설치해야 하는 번거로운 작업이 있는 경우, unverified 앱이라도 여기서 설치하는 것이 좋다. (어차피 ppa 도 unverified. 커뮤니티 기반임 (맞나? 검토 부탁))
        🛍️ e.g. XnView MP, DigiKam, mpv, okular (?okular, DigiKam 모두 kde 에서 만든거라.. 우분투와 테마 별개로 통합되는지 확인해봐야함..)
        verified ; https://flathub.org/apps/org.kde.digikam
        ❓ verified ; Okular ;  https://flathub.org/apps/org.kde.okular
        flatpak install -y --user flathub orgkde.okular

        ⚙️ settings
          Settings - Color Scheme
            - ✔️ Breeze Dark
        ?선택가능한 테마 늘리는 방법..
          긴 한데 우분투에 통합되는 지봐야함.
        ❓ verified ; digiKam ;  https://flathub.org/apps/org.kde.digikam
          flatpak install -y --user flathub org.kde.digikam
          ❌

          flatpak info --show-permissions org.kde.digikam

          긴 한데 우분투에 통합되는 지봐야함.
        //
        XnView MP
          https://www.xnview.com/en/xnviewmp/#downloads
          flatpak install -y --user flathub com.xnview.XnViewMP
        mpv
          flatpak install -y --user flathub io.mpv.Mpv
          https://fruit.je/apt
        --> 단 공식 인증된 앱이 많이 않으므로 (커뮤니티 기반) 이러한 경우 + apt 으로 설치로 쉽게 할 수 있는 경우 apt 을 사용하는 것이 나을 수 있다.
      apt
        그 외.
        microsoft-edge

    # https://helpcenter.onlyoffice.com/installation/desktop-install-ubuntu.aspx


TODO📰 우분투 사진 뷰어 찾기
  우분투 데스크탑 유저들은 압축 gui 프로그램은 peazip, 동영상 플레이어는 mpv 를, 사진 편집은 GIMP 를 많이 사용한다고 들었어. 
  그러면 사진 뷰어는 보통 뭐를 써? 윈도우에서 꿀뷰 (반디뷰) 같이 고성능, 편리성, 사용성이 좋은 우분투의 프로그램 뭐 있나? 여러 개 제시해줘


  https://www.reddit.com/r/linux/comments/1bmcaz8/best_image_browser_for_lots_of_images/
    XnView MP or Digikam
  digiKam is a free and open-source image organizer and tag editor written in C++ using the KDE Frameworks.


  ➡️ https://flathub.org/apps/org.kde.digikam
    snap 은 --classic 옵션이 없다.
    flatpak install -y --user flathub org.kde.digikam
    flatpak run org.kde.digikam

  ➡️ 윈도우에서는 scoop install extras/digikam 이거로 설치해보자... 
    scoop install extras/digikam
    digikam
    # 으로 실행해서 추가 설치를 마쳐야 한다.

    C:Users\wbfw1
    Configure where you keep your images
      /home/wbfw109v2/Pictures

    Configure where you will store databases
      Database Configuration
        ✔️ Type: MySQL Server of SQLLite, Mysql Internal, MySQL Server
          ✔️ Host Name: 192.168.0.4 (WSL fixed address)
            127.0.0.1 으로 해야 한다. ubuntu snap 에서는.
              아니면 check connection 시 발생
              Database connection test was not successful. 
              Error was: Can't connect to local MySQL server through socket '/var/run/mysqld/mysqld.sock' (2) QMYSQL: Unable to connect


          ✔️ User: wbfw109_dev (public account for development)
          ✔️ Password: ;;
          ✔️ Host Ports: 3306
          - click ✔️ Check Connection
        Database Name, Thumbs DB Folder, Face Db Name, Similarity Db Name
          - click ✔️ Default Settings
    Configure Raw File Handling
      [ - ✔️ Open directly, with adjustments made automatically
        - Use the Raw import tool to adjust corrections manually
      ]

    ⚖️ Configure Metadata Storage to Files
      [ - Do nothing
        - ✔️ Add information to files]
      // If you want to toggle this for performance improvement, 
          ettings > Configure digiKam으로 이동.
          Metadata 탭 선택.
          2. 주요 설정 옵션
          Write Metadata to Files (파일에 메타데이터 저장):

          이 옵션을 활성화하면, 수정된 메타데이터가 파일에 기록됩니다.
          비활성화하면 메타데이터는 DigiKam 데이터베이스에만 저장됩니다.
          Synchronize Metadata:

          Database → File: 데이터베이스에 저장된 정보를 파일에 동기화.
          File → Database: 파일에 저장된 정보를 데이터베이스에 동기화.
    Configure Preview Behavior
      [ - ✔️ Load reduced version of image
        - Load image]
    Configure Open File Behavior
      [ - ✔️ Open a preview
        - Open in the editor ]
    Enabled Contextual Tooltips
      [ - Do not show tooltips
        - ✔️ Use Tooltips]
    💡 When scanning has completed, at next start-up, digiKam will only check your collection to identify new albums - which is much faster.
      You can force digiKam to scan for new items manually using the Tools->Maintenance->Scan for new items menu entry.

    ✔️ [Requirements] tab..: Database Server Instructions
      CREATE USER 'wbfw109v2_dev'@'%' IDENTIFIED BY 'wbfw109v2_dev';
      GRANT ALL ON *.* TO 'wbfw109v2_dev'@'%' IDENTIFIED BY 'wbfw109_dev';
      CREATE DATABASE `digikam`;
      GRANT ALL PRIVILEGES ON `digikam`.* TO 'wbfw109v2_dev'@'%';
      FLUSH PRIVILEGES;

      
    https://docs.digikam.org/en/index.html
    PS C:\Users\wbfw1> Test-NetConnection -ComputerName 192.168.0.4 -Port 3306

      ComputerName     : 192.168.0.4
      RemoteAddress    : 192.168.0.4
      RemotePort       : 3306
      InterfaceAlias   : vEthernet (wsl2-external)
      SourceAddress    : 192.168.0.2
      TcpTestSucceeded : True

    ✔️ Complete...?

    Configure - digiKam
      -- Collections SEttings

      Set root albums locations
        C:\Users\wbfw1\Pictures 생성하기.
    ✔️ Complete...?

    and Open program..
      Download Required Files - digiKam

      For the face management, the red-eye removal tool, and the classification of images according to aesthetics or the automatic assignment of tags to images, digiKam requires some large binary files. You can choose which feature you want to use.

      Some of these files were not found. Click "Download" to begin downloading the files you need. You can close this dialog, you will be asked again the next time you start digiKam. Without these files the selected features will not work.

      The files will be downloaded to "C:\Users\wbfw1\AppData\Local\digiKam\facesengine".

      After the successful download you have to restart digiKam.

      The download requires 14 files with a size of 891.4 MiB.

      [ ] Use Face Management feature
      [ ] Use Aesthetic Detection feature
      [ ] Use Auto Tags Assignment feature

    네트워크 장치는 속도가 느려질 수 있기에 비추천:한다는듯 함.
    
    Settings - Themes
      - ✔️ DarkRoom

    📰 XnView MP, in ubuntu ; https://flathub.org/apps/com.xnview.XnViewMP

    ➡️ 그러니까 이미지 관리 프로그램 DigiKam 과, 이미지 뷰어 XnView MP 같이 쓰는게 나은듯. (윈도우의 경우는 DigiKam + HoneyView)
terminal 📅 2024-12-20 01:34:49
  ❓ 실제 우분투 노트북에서 테스트해가며 정리하기

  Kitty 터미널에서 고품질 이미지 표시의 비결
    픽셀 그래픽 지원:

    Kitty는 **터미널 그래픽 프로토콜(KITTY GRAPHICS PROTOCOL)**을 지원합니다.
    이는 터미널에서 픽셀 단위의 고품질 이미지를 직접 표시할 수 있도록 설계된 프로토콜입니다.
    단순히 ANSI 코드나 ASCII 문자를 사용하지 않고, 터미널 화면에 이미지를 "픽셀" 단위로 렌더링합니다.
    성능 최적화:

    Kitty는 GPU 가속을 활용하여 고속으로 이미지를 처리하고 표시할 수 있습니다.
    이를 통해 터미널에서 이미지를 부드럽고 빠르게 출력할 수 있습니다.
    터미널 크기와 독립:

    터미널 창 크기와 상관없이 이미지를 고품질로 표시할 수 있도록 리샘플링 기술을 사용합니다.
  ➡️ Windows wezterm
    https://github.com/wez/wezterm
    https://wezfurlong.org/wezterm/install/windows.html#for-scoop-users
      scoop install extras/wezterm

      Linking ~\scoop\apps\wezterm\current => ~\scoop\apps\wezterm\20240203-110809-5046fc22
      Creating shim for 'wezterm'.
      Creating shim for 'wezterm-gui'.
      Making C:\Users\wbfw1\scoop\shims\wezterm-gui.exe a GUI binary.
      Creating shortcut for Wezterm (wezterm-gui.exe)

    WezTerm은 독립 실행형 터미널 에뮬레이터로, VSCode의 내장 터미널에서 실행되지 않음.
      VSCode는 쉘 프로그램 경로(예: cmd.exe, powershell.exe, bash, zsh)를 지정하도록 설계되어 있으며, 터미널 에뮬레이터 경로를 지원하지 않음.
      WezTerm은 VSCode의 통합 터미널 대신 사용하는 대체 GUI 터미널로 설계되었음.
      https://github.com/wez/wezterm/issues/4541


      notepad $env:USERPROFILE\.wezterm.lua
        # 기본 쉘 설정
        return {
          default_prog = { "pwsh.exe" },
        }

  ➡️ Linux wezterm
    //
    flatpak remote-add --user --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo


    https://wezfurlong.org/wezterm/install/linux.html#installing-on-linux-via-flathub
    
    ## flatpak install -y flathub org.wezfurlong.wezterm
    # >> error: Failed to install org.freedesktop.Platform: Flatpak system operation Deploy not allowed for user
    flatpak install -y --user flathub org.wezfurlong.wezterm
    function wezterm
        flatpak run org.wezfurlong.wezterm start --cwd (pwd)
    end

    https://wezfurlong.org/wezterm/config/lua/config/default_cwd.html
      wezterm start --cwd /some/path


  ❓ Lua
    https://en.wikipedia.org/wiki/Lua_(programming_language)
    https://lua.org/
    https://lua.org/docs.html
    https://lua.org/manual/
      https://lua.org/manual/5.4/
    Lua가 적합한 경우:
      복잡한 로직이 필요한 경우:
        데이터 구조(배열, 딕셔너리), 조건 처리, 반복문 등에서 더 강력한 기능 제공.
      터미널 외 확장성:
       GUI 애플리케이션, 네트워크 작업, 프로그램 확장 등 Fish가 다룰 수 없는 작업.
      호환성:
        플랫폼 독립적으로 사용할 스크립트가 필요하거나 다른 프로그램과 통합해야 할 경우.

  VSCode의 내장 터미널은 기본적으로 xterm.js 기반으로 동작하며, Kitty의 그래픽 프로토콜은 지원하지 않습니다. 따라서, 다음 사항을 확인해야 합니다:
    GPU 가속, 그래픽 출력을 지원하는 터미널 비교
      GPU 가속
      그래픽 출력	Kitty Graphics Protocol 지원
      내장 SSH 클라이언트 지원

    also the fact that wezterm is written in rust whereas kitty is written in python/c. 
    🆚 Kitty vs WezTerm 
      https://www.reddit.com/r/neovim/comments/18h0vfw/wezterm_or_kitty/

      ➡️ WezTerm
Android Emulator 📅 2024-12-19 09:32:19
  https://marketplace.visualstudio.com/items?itemName=Dart-Code.flutter
    depends on https://marketplace.visualstudio.com/items?itemName=Dart-Code.dart-code

      
  안드로이드 에뮬레이터.. 
    flutter 는 지원한다는데..
      https://parkjh7764.tistory.com/171

    https://marketplace.visualstudio.com/items?itemName=Dart-Code.flutter
      Install Flutter SDK
      ...Initializing the Flutter SDK. This may take a few minutes. 
        Missing "unzip" tool. Unable to extract Dart SDK.
        Consider running "sudo apt-get install unzip".
        exit code 1
        >> brew install unzip not works.
        https://repology.org/project/unzip/versions
      https://formulae.brew.sh/formula/unzip#default

  The VS Code IDE extensions for Dart and Flutter uses Google Analytics to report usage and diagnostic data along with package dependencies, and crash reporting to send basic crash reports. This data is used to help improve the Dart platform, Flutter framework, and related tools. Telemetry is not sent on the very first run. To disable reporting of telemetry, run this terminal command: dart --disable-analytics If you opt out of telemetry, an opt-out event will be sent, and then no further information will be sent. This data is collected in accordance with the Google Privacy Policy (https://policies.google.com/privacy).
  ❗ snap Flutter includes Dart sdk
    %VSCode> Dart: Collect Diagnostic Information


  https://parkjh7764.tistory.com/171
  [✗] 
    체크표시는 정상 설치가 된 부분이고 느낌표(!)는 추가적인 조치가 필요한 항목이다.


    [!] Flutter (Channel stable, 3.24.5, on Ubuntu 24.04.1 LTS 5.15.167.4-microsoft-standard-WSL2, locale C.UTF-8)
      • Flutter version 3.24.5 on channel stable at /home/wbfw109/sdk/flutter
      ! The flutter binary is not on your path. Consider adding /home/wbfw109/sdk/flutter/bin to your path.
      ! The dart binary is not on your path. Consider adding /home/wbfw109/sdk/flutter/bin to your path.
      • Upstream repository https://github.com/flutter/flutter.git
      • Framework revision dec2ee5c1f (4 weeks ago), 2024-11-13 11:13:06 -0800
      • Engine revision a18df97ca5
      • Dart version 3.5.4
      • DevTools version 2.37.3
      • If those were intentional, you can disregard the above warnings; however it is recommended to use "git" directly to perform update checks and upgrades.

  [✗] Android toolchain - develop for Android devices
      ✗ Unable to locate Android SDK.
        Install Android Studio from: https://developer.android.com/studio/index.html
        On first launch it wil l assist you in installing the Android SDK components.
        (or visit https://flutter.dev/to/linux-android-setup for detailed instructions).
        If the Android SDK has been installed to a custom location, please use
        `flutter config --android-sdk` to update to that location.


  [✗] Chrome - develop for the web (Cannot find Chrome executable at google-chrome)
      ! Cannot find Chrome. Try setting CHROME_EXECUTABLE to a Chrome executable.

  [✗] Linux toolchain - develop for Linux desktop
      ✗ clang++ is required for Linux development.
        It is likely available from your distribution (e.g.: apt install clang), or can be downloaded from https://releases.llvm.org/
      ✗ CMake is required for Linux development.
        It is likely available from your distribution (e.g.: apt install cmake), or can be downloaded from https://cmake.org/download/
      ✗ ninja is required for Linux development.
        It is likely available from your distribution (e.g.: apt install ninja-build), or can be downloaded from https://github.com/ninja-build/ninja/releases
      ✗ pkg-config is required for Linux development.
        It is likely available from your distribution (e.g.: apt install pkg-config), or can be downloaded from https://www.freedesktop.org/wiki/Software/pkg-config/

  [!] Android Studio (not installed)
      • Android Studio not found; download from https://developer.android.com/studio/index.html
        (or visit https://flutter.dev/to/linux-android-setup for detailed instructions).

  [✓] Connected device (1 available)
      • Linux (desktop) • linux • linux-x64 • Ubuntu 24.04.1 LTS 5.15.167.4-microsoft-standard-WSL2

  [✓] Network resources
      • All expected network resources are available.

  flutter doctor --android-licenses
  
  brew install --cask flutter

  echo "▶️  Installing tools for integrating and using Android emulator with VS Code..."
  # If I use Flutter in VS Code, it is easier to simulate compared to other Android emulator tools.  
    🛍️ e.g. Install a .apk by drag and drop

  Flutter ; # https://www.youtube.com/watch?v=mtqTnGAAHw0
    https://github.com/flutter/flutter/releases
    https://snapcraft.io/flutter
  
  ### To install Flutter, you first need to install Android Studio because it is a prerequisite for Flutter installation.
    https://docs.flutter.dev/get-started/install/linux/android
  Android Studio ; 📅 2024-12-09 18:59:29
  : '
    # Android Studio is required even if you not use the IDE because Android Studio inclueds android sdk
      ?? 맞는지 확인 부탁.
        https://developer.android.com/studio?hl=en

    snap info android-studio
      channels:
        latest/stable:    2024.1.1.11-Koala   2024-07-14 (161) 1GB classic
        latest/candidate: 2024.2.1.12-Ladybug 2024-12-03 (177) 1GB classic
        latest/beta:      ↑                                        
        latest/edge:      2024.2.1.12-Ladybug 2024-12-04 (178) 1GB classic
  '
  
  🧮 sudo snap install android-studio --classic --channel=latest/edge
  # 😠 manually run Android Studio desktop file and install interactively.

  ### Flutter
  ❗ Flutter in snap includes Dart
      snap's dart is preceded than homebrew path by path /$HOME/snap/flutter/common/flutter/bin/cache/dart-sdk/bin/
        echo $PATH
        which dart
          $HOME/snap/flutter/common/flutter/bin/cache/dart-sdk/bin//dart
      Dart ; https://dart.dev/
        https://en.wikipedia.org/wiki/Dart_(programming_language)
        https://dart.dev/get-dart#install-using-the-apt-get-package-manager
      dart-sdk in homebrew
        https://repology.org/project/dart-sdk/versions
        https://formulae.brew.sh/formula/dart-sdk#default

  🧮 sudo snap install flutter --classic
    By default this will install the commands:
      flutter
      flutter.dart
      flutter.openurl

  ---------------------------------------

  ➡️ How to make vscode run in Wayland mode ; https://linuxconfig.org/how-to-enable-disable-wayland-on-ubuntu-22-04-desktop
    2️⃣ https://www.reddit.com/r/Ubuntu/comments/1fg00x7/best_way_to_run_android_apps_on_ubuntu_2204/
      I have been using Wayland + Waydroid with 22.04 for 6 months, no problem.
      ❔ Does Waydroid require Wayland? OO..
    3️⃣ Waydroid ; https://docs.waydro.id/usage/install-on-desktops#ubuntu-debian-and-derivatives
      https://waydro.id/
      https://github.com/waydroid/
      https://docs.waydro.id/


  flutter run
  ❓ 
    android-studio -> Unverified
      https://flathub.org/apps/com.google.AndroidStudio  
    mpv -> unverified
      https://flathub.org/apps/io.mpv.Mpv

      비디오 스트리밍: mpv av://v4l2:/dev/video0
        av://v4l2:: Video4Linux2 (V4L2) 장치 스트리밍을 위한 프로토콜.
        /dev/video0: 기본 카메라 장치 경로. (다른 카메라가 연결되어 있다면 /dev/video1, /dev/video2와 같은 경로로 바뀔 수 있습니다.)

        av: Audio-Visual
          av://는 FFmpeg에서 오디오와 비디오 데이터를 다루기 위한 일반적인 스키마(prefix)로 사용됩니다.
    Flutter .. does not have app in flatpack

sudo add-apt-repository ppa:rncbc/qt6.8-static-noble
sudo apt update


qt-unified-linux-x64-[Qt Online Installer version]-online.run --root /home/<username>/installation_dir --accept-licenses --default-answer --confirm-command install qt.qt6.680.gcc_64


'
➡️ https://doc.qt.io/qt-6/get-and-install-qt-cli.html
  ⚓ Installing Without User Interaction ; https://doc.qt.io/qt-6/get-and-install-qt-cli.html#installing-without-user-interaction

READ THIS: https://docs.brew.sh/Troubleshooting

https://download.qt.io/official_releases/online_installers/

TODO: Qt
  brew 로 설치한 opencv 부터 가속 테스트.
 

  유지보수 및 업데이트
    설치 후 패키지 업데이트를 원하면 아래 명령을 사용합니다:
      ~/Qt/  \
        --accept-licenses \
        --default-answer \
        --confirm-command \
        install qt6.8.0-full-dev

        
---------------------------------
  지금 설치가 어려운게.. opencv 
    crontab
    cron은 그리스어 "χρόνος (chronos)"에서 유래된 것으로, **시간(time)**을 의미합니다.
    리눅스/유닉스에서 cron은 시간 기반 작업 스케줄러 데몬으로, 사용자가 설정한 작업을 지정된 시간에 자동으로 실행하는 역할을 합니다.

    tab은 **table(표, 목록)**을 의미하며, crontab은 작업 스케줄을 저장하는 "표" 역할을 합니다.
    사용자는 작업의 실행 시간과 명령어를 테이블 형식으로 정리하여 crontab 파일에 저장합니다.


  .. https://docs.opencv.org/4.x/d7/d9f/tutorial_linux_install.html#tutorial_linux_install_detailed_basic_download

  gpu 가속을 사용하기 위해서 직접 빌드해서 사용해야 하는것은 자동업데이트를 사람들은 어떻게 받도록 해놓지 실제로? 실무자들 말이야. 2024년 추세.
    ==> Caveats
    You can add Homebrew's Qt to QtCreator's "Qt Versions" in:
      Preferences > Qt Versions > Link with Qt...
    pressing "Choose..." and selecting as the Qt installation path:
      /home/linuxbrew/.linuxbrew

    ## if in ssh, set first for test
    # set QT_OPENGL desktop
    qmake -query

    ## 📰 TODO in grpahic interface
    # qtdiag
    # glxinfo | grep "OpenGL"


---------------------------------
TODO: OpenCV
  official guide ;
  https://docs.opencv.org/4.10.0/d7/d9f/tutorial_linux_install.html
  https://velog.io/@letnilab/Ubuntu%EC%97%90%EC%84%9C-OpenCV-%EC%84%A4%EC%B9%98%ED%95%98%EB%8A%94-%EB%B0%A9%EB%B2%95

  Enviornmetn set 
    export CMAKE_PREFIX_PATH=$HOME/.local:$CMAKE_PREFIX_PATH
    export PKG_CONFIG_PATH=$HOME/.local/lib/pkgconfig:$PKG_CONFIG_PATH
    export LD_LIBRARY_PATH=$HOME/.local/lib:$LD_LIBRARY_PATH
    export PATH=$HOME/.local/bin:$PATH
  vs CMake Preset or CmakeLists.txt 에 경로 추가.
TODO: OpenCV - Python opencv integrate...
  Poetry로 패키지를 관리하고 있다면, OpenCV Python 바인딩을 Poetry 환경에 통합하려면 다음과 같은 방법을 사용해야 합니다. 기본적으로, OpenCV Python 바인딩은 Poetry에서 관리할 수 있도록 설치해야 하므로 pip install만으로는 관리가 되지 않습니다.
  1.1. Poetry 환경 활성화
  2.1. OpenCV Python 바인딩을 로컬 패키지로 추가
      OpenCV 바인딩을 로컬 디렉터리로 복사: OpenCV Python 바인딩 디렉터리를 프로젝트 내에 복사합니다:
  2.2. Poetry에 로컬 패키지 추가: pyproject.toml 파일에 OpenCV 바인딩을 로컬 패키지로 추가합니다:
  2.3. Poetry 설치 실행: Poetry가 로컬 패키지를 설치하도록 명령:

  homebrew 로 설치한 파이썬에는?...
    🧮 python3 -m site

    버전 변경시마다 할 것: 
    1. 새 Python 실행 파일을 CMake에 지정
      cmake -D PYTHON_EXECUTABLE=/home/linuxbrew/.linuxbrew/bin/python3 \
      -D PYTHON3_PACKAGES_PATH=/home/linuxbrew/.linuxbrew/lib/python3.13/site-packages \
    2. Python 바인딩만 다시 설치
      make python3
      make install
...


🪱 Squish는 GUI(그래픽 사용자 인터페이스) 테스트 자동화 프레임워크로, 애플리케이션의 사용자 인터페이스를 자동으로 테스트하기 위한 도구입니다. 다음은 Squish의 주요 특징과 기능입니다:
  네, Qt를 LGPL 라이선스로 사용한다면 상업용으로도 무료로 사용할 수 있습니다,
    단, 반드시 동적 링크(dynamic linking) 방식으로 Qt 라이브러리를 사용해야 합니다.
  동적 링크 환경 구축:
    애플리케이션 배포 시 Qt 동적 라이브러리(.dll/.so) 파일을 반드시 포함해야 합니다.
    배포된 라이브러리가 교체 가능하도록 해야 합니다.
  정적 링크 금지:
    Qt를 정적으로 링크(static linking)하면 LGPL 조건을 위반하게 됩니다. 정적 링크가 필요하다면 상업용 라이선스를 구매해야 합니다.
  라이브러리 수정 여부:
    Qt 라이브러리를 수정한 경우에는 반드시 해당 수정된 코드를 공개해야 합니다.
  기술 지원 미제공:
    LGPL 버전의 Qt를 사용할 경우, Qt 회사의 기술 지원을 받을 수 없습니다. 문제 발생 시 스스로 해결해야 합니다.


버전관리전략.. 이란게 따로 없나.. 그냥 로컬에서는 최신버전, 낮은버전을 할 때에는 도커로 devcontainer 만드는게 나은거같음.


/home/wbfw109/.wezterm.lua


 내 요구 조건에 맞춰서 기존 fish script 를 변경해줘.
요구 조건
  - CMake 시 내가 보여준 다양한 CMake 중에서 GPU 가속, 기타 옵션 등을 주석으로 분류하면서 CMake 하기.
  예시:
    cmake    
      # gpu aceeartion option (가능한 모든 gpu 가속 옵션들 사용하기?? )
      # qt, ...
      # ,...

      # python ... with gpu acceleration
      PYTHON_EXECUTABLE \ 
      # .. 
      DOPENCV_EXTRA_MODULES_PATH=$OPENCV_CONTRIB_DIR/modules \
      -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR \
      $OPENCV_DIR
  - CMake 시 병렬 빌드 추가. 

기존 fish script:

-------------------------------------------
#!/usr/bin/env fish
## ⭕ Install OpenCV 4.10 with CUDA 12.6 and CUDNN 8.9 in Ubuntu 24.04 ; https://gist.github.com/raulqf/f42c718a658cddc16f9df07ecc627be7
## from https://docs.opencv.org/4.10.0/d7/d9f/tutorial_linux_install.html
## 📍 GPUs supported ; https://en.wikipedia.org/wiki/CUDA#GPUs_supported
  %shell> nvidia-smi -q | grep "Product Name"
  - GeForce GTX 1080 Ti : 6.1
  - RTX 4070 Super : 8.9


#!/usr/bin/env fish

# Variables
set repos_dir "$HOME/repos"
set OPENCV_ZIP "$repos_dir/opencv.zip"
set OPENCV_CONTRIB_ZIP "$repos_dir/opencv_contrib.zip"
set OPENCV_DIR "$repos_dir/opencv-4.x"
set OPENCV_CONTRIB_DIR "$repos_dir/opencv_contrib-4.x"
set BUILD_DIR "$repos_dir/build"
set INSTALL_DIR "$HOME/.local"  # User-specific installation directory

# Create repos directory if not exists
if not test -d $repos_dir
    mkdir -p $repos_dir
    echo "Created directory: $repos_dir"
end

# Download OpenCV and opencv_contrib sources
if not test -f $OPENCV_ZIP
    echo "Downloading OpenCV..."
    wget -O $OPENCV_ZIP https://github.com/opencv/opencv/archive/4.x.zip
else
    echo "OpenCV source already downloaded at $OPENCV_ZIP"
end

if not test -f $OPENCV_CONTRIB_ZIP
    echo "Downloading OpenCV contrib modules..."
    wget -O $OPENCV_CONTRIB_ZIP https://github.com/opencv/opencv_contrib/archive/4.x.zip
else
    echo "OpenCV contrib source already downloaded at $OPENCV_CONTRIB_ZIP"
end

# Unzip OpenCV and opencv_contrib sources
if not test -d $OPENCV_DIR
    echo "Extracting OpenCV..."
    unzip $OPENCV_ZIP -d $repos_dir
else
    echo "OpenCV source already extracted at $OPENCV_DIR"
end

if not test -d $OPENCV_CONTRIB_DIR
    echo "Extracting OpenCV contrib modules..."
    unzip $OPENCV_CONTRIB_ZIP -d $repos_dir
else
    echo "OpenCV contrib source already extracted at $OPENCV_CONTRIB_DIR"
end

# Create build directory
mkdir -p $BUILD_DIR

# Configure with CMake (including contrib modules)
cd $BUILD_DIR
cmake \
    # General Build Options
    -DCMAKE_BUILD_TYPE=RELEASE \
    -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR \
    -DOPENCV_EXTRA_MODULES_PATH=$OPENCV_CONTRIB_DIR/modules \
    -DOPENCV_ENABLE_NONFREE=ON \
    -DINSTALL_PYTHON_EXAMPLES=OFF \
    -DINSTALL_C_EXAMPLES=OFF \
    -DBUILD_EXAMPLES=OFF \
    -DBUILD_TESTS=OFF \
    -DOPENCV_GENERATE_PKGCONFIG=ON \
    \
    # GPU Acceleration Options
    -DWITH_CUDA=ON \
    -DWITH_CUDNN=ON \
    -DOPENCV_DNN_CUDA=ON \
    -DWITH_CUBLAS=ON \
    -DCUDA_FAST_MATH=1 \
    -DENABLE_FAST_MATH=1 \
    -DCUDA_ARCH_BIN=8.9 \
    \
    # Python Binding Options
    -DPYTHON_EXECUTABLE=(which python3) \
    -DPYTHON3_PACKAGES_PATH=(python3 -c "import sysconfig; print(sysconfig.get_path('purelib'))") \
    \
    # Multimedia Options
    -DWITH_FFMPEG=ON \
    -DWITH_GSTREAMER=ON \
    -DWITH_V4L=ON \
    -DWITH_LIBV4L=ON \
    \
    # GUI and Visualization Options
    -DWITH_QT=ON \
    -DWITH_OPENGL=ON \
    -DWITH_VTK=OFF \
    \
    # Optimization and Parallelism Options
    -DWITH_OPENMP=ON \
    -DWITH_TBB=ON \
    -DBUILD_TBB=ON \
    -DENABLE_NEON=ON \
    \
    # Other Options
    -DOPENCV_FORCE_LIBATOMIC_COMPILER_CHECK=1 \
    -DWITH_PROTOBUF=OFF \
    -DBUILD_opencv_cudacodec=OFF \
    $OPENCV_DIR

# Build OpenCV
cmake --build . -- -j$(nproc)

# Install OpenCV
sudo cmake --install .

# Define and add settings for OpenCV
set FISH_CONFIG "$HOME/.config/fish/config.fish"
set unique_comment "## [OpenCV] add OpenCV environment variables"
if not grep -Fxq "$unique_comment" "$FISH_CONFIG"
    echo "
    $unique_comment
    set -gx LD_LIBRARY_PATH $INSTALL_DIR/lib:\$LD_LIBRARY_PATH
    set -gx PKG_CONFIG_PATH $INSTALL_DIR/lib/pkgconfig:\$PKG_CONFIG_PATH
    set -gx PATH $INSTALL_DIR/bin:\$PATH
    " | tee -a $FISH_CONFIG >/dev/null
    echo -e "
" >>"$FISH_CONFIG"
end

if not grep -Fxq "$unique_comment" "$FISH_CONFIG"
    echo "
    $unique_comment
    # PKG_CONFIG_PATH: Add user-specific pkgconfig directory for OpenCV
    set -gx PKG_CONFIG_PATH \$PKG_CONFIG_PATH:$INSTALL_DIR/lib/pkgconfig
    
    # LDFLAGS: Add linker flags for OpenCV
    set -gx LDFLAGS \$LDFLAGS -L$INSTALL_DIR/lib
    
    # CPPFLAGS: Add include path for OpenCV headers
    set -gx CPPFLAGS \$CPPFLAGS -I$INSTALL_DIR/include
    
    # PATH: Add OpenCV executables to PATH
    set -gx PATH \$PATH:$INSTALL_DIR/bin
    " | tee -a $FISH_CONFIG >/dev/null
    echo -e "\n" >>"$FISH_CONFIG"
end




# Confirmation
echo "OpenCV (with contrib modules) installed in $INSTALL_DIR and environment variables updated."
echo "Restart your terminal or run 'source ~/.config/fish/config.fish' to apply changes."

# -DWITH_QT=ON
#   Purpose: Enables the use of the Qt framework for graphical user interface (GUI) support in OpenCV.
#   Dependencies
#     Qt must be installed before building OpenCV. If Qt is not installed when this option is enabled, CMake will fail to configure or build.
# -DWITH_OPENGL=ON
#   Enables OpenGL support in OpenCV.
#   Dependencies
#     Requires OpenGL libraries (e.g., libGL and libGLU) to be available on your system.
#     If OpenGL libraries are missing, CMake will fail to configure this option.

: ' ❔ about VTK
  VTK stands for Visualization Toolkit, a library for 3D computer graphics, image processing, and visualization.
  In the context of OpenCV, enabling VTK allows for 3D visualization of data
  , such as point clouds or 3D meshes, through the opencv_viz module.

  When is VTK necessary?
    - VTK is required if you need OpenCV to perform 3D data visualization or rendering tasks
      , such as debugging SLAM algorithms or visualizing 3D point clouds.
    - It is commonly used in robotics, SLAM, and scientific data visualization.

  When can VTK be disabled (-DWITH_VTK=OFF)?
  - If your project only involves 2D image processing or video analysis, VTK is not needed.
  - Disabling VTK reduces the build size and complexity of OpenCV
    , which is especially useful for embedded or resource-constrained environments.

  For TurtleBot3:
  - In most cases, TurtleBot3 does not require VTK, as its primary tasks involve 2D mapping and navigation with LIDAR and cameras.
    Disabling VTK can make the build process faster and reduce the overall library size.
  - If you are extending TurtleBot3 to handle 3D sensor data (e.g., point clouds or 3D SLAM)
    , VTK may be necessary for debugging or visualization purposes.
'



pkg-config는 소프트웨어가 의존하는 라이브러리의 경로와 빌드 옵션을 관리하기 위한 도구입니다. 특정 라이브러리를 사용하기 위해 필요한 **컴파일 옵션(CPPFLAGS)**과 **링크 옵션(LDFLAGS)**을 제공하며, 이를 통해 개발자는 간단하게 빌드 설정을 관리할 수 있습니다.
  pkg-config의 역할
  헤더 파일 경로 설정 (-I 옵션): CPPFLAGS로 전달.
  라이브러리 파일 경로 설정 (-L 및 -l 옵션): LDFLAGS로 전달.
  소스 코드가 라이브러리와 의존성을 올바르게 해결할 수 있도록 도움.

CMakeLists.txt 구성
  # Set the minimum required version of CMake
  cmake_minimum_required(VERSION 3.10)

  # Set the project name and specify C++ standard
  project(MyOpenCVProject LANGUAGES CXX)
  set(CMAKE_CXX_STANDARD 17)
  set(CMAKE_CXX_STANDARD_REQUIRED ON)

  # Find the PkgConfig module, which is required to use pkg-config functionality
  # PkgConfig allows us to retrieve build information from .pc files of installed libraries
  find_package(PkgConfig REQUIRED)

  # Use pkg-config to find the OpenCV package
  # This command reads the opencv.pc file, typically located in /usr/lib/pkgconfig or /usr/local/lib/pkgconfig.
  # The package name here is "opencv".
  pkg_check_modules(OpenCV REQUIRED opencv)

  # What happens here:
  # - pkg_check_modules automatically reads the opencv.pc file and extracts the following information:
  # 
  # 1. OpenCV_INCLUDE_DIRS:
  #    - This variable contains the include directories needed for compiling.
  #    - Derived from the "Cflags" field in the opencv.pc file.
  #    - Example value: "/usr/local/include/opencv4"
  #
  # 2. OpenCV_LIBRARY_DIRS:
  #    - This variable contains the library directories needed for linking.
  #    - Derived from the "Libs" field in the opencv.pc file.
  #    - Example value: "/usr/local/lib"
  #
  # 3. OpenCV_LIBRARIES:
  #    - This variable contains the actual libraries to link against.
  #    - Derived from the "Libs" field in the opencv.pc file.
  #    - Example value: "-lopencv_core -lopencv_imgproc"
  #
  # 4. OpenCV_CFLAGS_OTHER:
  #    - This variable contains additional compiler flags needed for the package.
  #    - Derived from extra fields in the opencv.pc file (if present).
  #    - Example value: "-DDEFINE_MACROS"
  #
  # 5. OpenCV_VERSION:
  #    - This variable contains the version of the OpenCV package.
  #    - Derived from the "Version" field in the opencv.pc file.
  #    - Example value: "4.10.0"

  # Include the directories where OpenCV headers are located
  # ${OpenCV_INCLUDE_DIRS} was set by pkg_check_modules based on the Cflags field in opencv.pc
  include_directories(${OpenCV_INCLUDE_DIRS})

  # Link the directories where OpenCV libraries are located
  # ${OpenCV_LIBRARY_DIRS} was set by pkg_check_modules based on the Libs field in opencv.pc
  link_directories(${OpenCV_LIBRARY_DIRS})

  # Add any additional compiler flags
  # ${OpenCV_CFLAGS_OTHER} was set by pkg_check_modules and includes flags like macros or other custom options
  add_definitions(${OpenCV_CFLAGS_OTHER})

  # Add an executable target for the project
  # Here, "main.cpp" is the source file for the executable
  add_executable(my_program main.cpp)

  # Link the OpenCV libraries with the target executable
  # ${OpenCV_LIBRARIES} was set by pkg_check_modules and includes libraries like opencv_core and opencv_imgproc
  target_link_libraries(my_program ${OpenCV_LIBRARIES})

  # Notes:
  # - The pkg-config system allows us to manage dependencies more dynamically.
  # - If OpenCV is installed in a non-standard location, ensure that PKG_CONFIG_PATH is set correctly.
  #   Example: export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH

pkg-config를 사용하지 않으면 헤더 파일과 라이브러리 경로를 수동으로 지정해야 합니다.

🖼️ high-Level Diagram
  [vcpkg/Conan]
      ↓ Provides
  [Library Paths, Build Flags]
      ↓ Integrated via
  [CMakeLists.txt]
      ↓ Defines
  [Build Rules for Your Project]
      ↓ Outputs
  [Executable or Library]

  Use Conan if:
    Cross-Platform Development:
      You are targeting multiple operating systems (Linux, macOS, Windows).
    Complex Dependency Management:
      Your project has many dependencies or requires specific build configurations.
    Customizable Builds:
      You need to tweak build flags, enable/disable optional features, or manage transitive dependencies.
  Use vcpkg if:
    Windows-Focused Development:
      You primarily develop on Windows or use Visual Studio alongside VSCode.
    Simplicity:
      You want minimal setup and prefer prebuilt binaries for most libraries.
    CMake-Centric Workflows:
      Your project relies heavily on CMake and doesn't need fine-grained build customizations.

SLAM(Simultaneous Localization and Mapping)

Yes, installing software under $HOME/.local is a common convention in Unix-like systems
, particularly for user-specific installations.
  This directory layout is widely used because it avoids requiring root privileges and keeps user-installed files separate from system-wide installations under /usr or /usr/local
    >> 단 자동으로 pathd에 추가되지는 않는다.


!!!
HTML push message
https://gist.github.com/makerj/8845c4898ee706aa3e12eb4ca9c25510

📅 path.. 바꾸기.. 2024-12-22 01:35:58 
  fish_add_path --universal --prepend $HOME/.local/bin                // init_in_fish 에 추가.
  fish_add_path --universal --prepend /home/linuxbrew/.linuxbrew/opt/rustup/bin    // 기존 rustup 코드 바꾸기.


  set -gx PKG_CONFIG_PATH $PKG_CONFIG_PATH:$HOME/.local/lib/pkgconfig
  # Linker flags for libraries in ~/.local/lib
  set -gx LDFLAGS $LDFLAGS -L$HOME/.local/lib

  # Compiler flags for headers in ~/.local/include
  set -gx CPPFLAGS $CPPFLAGS -I$HOME/.local/include


~/.local/
├── bin/                  # OpenCV binaries (e.g., opencv_version)
├── lib/
│   ├── libopencv_core.so # Core OpenCV libraries
│   ├── pkgconfig/        # *.pc files for pkg-config
├── include/
│   └── opencv4/          # Header files (e.g., opencv2/)
└── share/
    └── opencv4/          # Data files like cascades or examples




deciding_between_home_repos_and_home_local_share 📅 2024-12-22 02:10:00
  # Deciding Between `$HOME/repos/` and `$HOME/.local/share/`

  Both directories serve different purposes, and the choice depends on how you want to manage your installation files.

  ## 1. `$HOME/repos/`

  - **Purpose**: A workspace for source code repositories or projects you’re working on.

  - **Advantages**:
    - Keeps source files organized in one location, especially if you regularly clone repositories.
    - You can easily recompile or update projects later by keeping the source in one place.
    - Intuitive for development workflows.

  - **Disadvantages**:
    - Mixing source files with installed binaries can get messy.
    - If you’re not planning to keep the source after installation, it takes up unnecessary space.

  ## 2. `$HOME/.local/share/`

  - **Purpose**: Storing user-specific application data.
    - According to the [XDG Base Directory Specification](https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html), `$HOME/.local/share/` is meant for **persistent application data** (not binaries or libraries).

  - **Advantages**:
    - Aligns with Linux conventions for storing application-specific files.
    - Keeps the installation files alongside the actual application data (if OpenCV needs runtime resources like cascades or XML files).

  - **Disadvantages**:
    - Not ideal for managing source code repositories. The purpose of this directory is not for source code management.

  ## Suggested Approach

  ### Keep the Source in `$HOME/repos/` and Install in `$HOME/.local`

  - Use `$HOME/repos/` for cloning and working on source files.
  - Use `$HOME/.local/` for the final installation of binaries, libraries, and headers.

  ### Why?

  1. **Source and Installation Separation**:
    - `$HOME/repos/` can hold the source, while `$HOME/.local/` holds the installed files. This separation avoids clutter and confusion.
    - Example:
      - `$HOME/repos/opencv-4.x/` → Source directory.
      - `$HOME/.local/bin/` → Binaries (e.g., `opencv_version`).
      - `$HOME/.local/lib/` → Libraries (e.g., `libopencv_core.so`).
      - `$HOME/.local/include/` → Headers (e.g., `opencv2/`).

  2. **XDG Compatibility**:
    - Binaries (`bin`), libraries (`lib`), and headers (`include`) naturally fit into `$HOME/.local/`.
    - OpenCV runtime resources (e.g., cascades) can be stored in `$HOME/.local/share/opencv4/`.

  3. **Future Updates**:
    - If you need to rebuild OpenCV, having the source in `$HOME/repos/` makes it easy to pull updates and recompile.

  ## Updated Workflow for OpenCV Installation

  1. **Source Location**: Use `$HOME/repos/` for the source.
  2. **Installation Root**: Use `$HOME/.local/` for installation.


--- TODO:
  QT 설치 후 opencv 빌드. (opencv ..링크에 있던 병렬처리를 위한 라이브러리도 우선 설치해야 함.)
    brew, snap, flatpak으로 설치 가능한 라이브러리
    # For building software packages
    # Basic developer tools and libraries
    brew install cmake
    # If you prefer apt, use:
    # sudo apt install cmake

    # For managing compiler and linker flags
    # Package Configuration tool
    brew install pkg-config
    # If you prefer apt, use:
    # sudo apt install pkg-config

    # For decompressing files
    # File extraction utility
    brew install unzip
    # If you prefer apt, use:
    # sudo apt install unzip

    # For low-level multimedia processing
    # Yasm Assembler
    brew install yasm
    # If you prefer apt, use:
    # sudo apt install yasm

    # For version control
    # Git version control system
    brew install git
    # If you prefer apt, use:
    # sudo apt install git

    # For image format handling
    # JPEG image library
    brew install libjpeg
    # If you prefer apt, use:
    # sudo apt install libjpeg-dev

    # For image format handling
    # PNG image library
    brew install libpng
    # If you prefer apt, use:
    # sudo apt install libpng-dev

    # For image format handling
    # TIFF image library
    brew install libtiff
    # If you prefer apt, use:
    # sudo apt install libtiff-dev

    # For video capture libraries
    # DC1394 camera library
    brew install libdc1394
    # If you prefer apt, use:
    # sudo apt install libdc1394-25 libdc1394-dev

    # For Fortran-based numerical computing
    # GNU Fortran Compiler
    brew install gcc
    # If you prefer apt, use:
    # sudo apt install gfortran

    # For protocol buffer handling
    # Protobuf Compiler
    brew install protobuf
    # If you prefer apt, use:
    # sudo apt install libprotobuf-dev protobuf-compiler

    # For mathematical computations
    # Eigen C++ template library
    brew install eigen
    # If you prefer apt, use:
    # sudo apt install libeigen3-dev

    # For hierarchical data storage
    # HDF5 data model library
    brew install hdf5
    # If you prefer apt, use:
    # sudo apt install libhdf5-dev

    # For documentation generation
    # Doxygen documentation generator
    brew install doxygen
    # If you prefer apt, use:
    # sudo apt install doxygen

    ---

    # Video Streaming and Encoding Support
    # GStreamer development library
    brew install gst-plugins-base
    # If you prefer apt, use:
    # sudo apt install libgstreamer1.0-dev

    # GStreamer plugins base development library
    brew install gst-plugins-base
    # If you prefer apt, use:
    # sudo apt install libgstreamer-plugins-base1.0-dev

    # Video codec for MPEG-4 Part 2
    brew install xvid
    # If you prefer apt, use:
    # sudo apt install libxvidcore-dev

    # Video codec for H.264/MPEG-4 AVC
    brew install x264
    # If you prefer apt, use:
    # sudo apt install libx264-dev

    # Audio codec for MP3
    brew install lame
    # If you prefer apt, use:
    # sudo apt install libmp3lame-dev

    # Audio codec for Opus
    # sudo apt install libopus-dev
    # (No equivalent brew package available)

    # Audio codec for Vorbis
    brew install libvorbis
    # If you prefer apt, use:
    # sudo apt install libvorbis-dev

    # Graphical User Interface Library
    # GTK+ 3 development library
    brew install gtk+3
    # If you prefer apt, use:
    # sudo apt install libgtk-3-dev

    # Multithreading Support
    # Threading Building Blocks library
    brew install tbb
    # If you prefer apt, use:
    # sudo apt install libtbb-dev

    # Linear Algebra Optimization
    # Basic Linear Algebra Subprograms library
    brew install openblas
    # If you prefer apt, use:
    # sudo apt install libatlas-base-dev

    # Logging Library
    # Google glog development library
    # sudo apt install libgoogle-glog-dev
    # (No equivalent brew package available)

    # Digital Camera Access Library
    brew install libgphoto2
    # If you prefer apt, use:
    # sudo apt install libgphoto2-dev


  >> 현재 팀프로젝트 자료 조사.
    rtos 사용하려면.. 필요한 것들..
    📰📰 프로젝트 월요일까지 구성도.. 만들어야 함..
  📰📰 화요일까지 이력서 작성하고 가고싶은 회사 정리해오기.
    12월 23일까지 1차는 내기.
    12월 24일까지 2차 내기.
  📰📰 사진촬영하기?


  이전 팀프로젝트 문서 정리
  clang 문서 렌더링 문제 해결.
  
  RTOS 사용하기 위한 물품 자료 조사 .. 구매.. 오늘까지임.


OpenCR은 하드웨어입니다:
  TurtleBot3에서 사용되는 전자 제어 모듈.
  모터, 센서, 배터리 등 하드웨어를 ROS와 연결.



  ❕ TurtleBot3에서 **RTOS(FreeRTOS)**는 OpenCR 보드에 설치되어 실행됩니다. 라즈베리파이에는 RTOS가 설치되지 않고, 대신 **ROS(또는 ROS 2)**가 실행됩니다. 둘의 역할과 위치를 명확히 구분하면 이해하기 쉽습니다.


Raspberry Pi Kernel and Standard Compliance

The Raspberry Pi Linux kernel does not fully comply with standard C due to its reliance on GCC extensions. As a result, the `-pedantic` option in Clang should not be used when building kernel modules. Below are the key reasons:

  ARM GCC Compiler and Extensions
  ARM GCC, based on GCC, incorporates several extensions that deviate from standard C:
  
    - __attribute__
      GCC extension for specifying attributes of functions or variables.
      Example:
        void foo() __attribute__((noreturn));
    
    - Inline Assembly
      Inline assembly is not part of standard C.
      Example:
        asm("mov r0, r1");
    
    - typeof Keyword
      A GCC extension for automatically deducing the type of a variable.
      Example:
        typeof(x) y = x + 1;

  Why Clang's `-pedantic` is Unsuitable for Kernel Development
    - The Raspberry Pi Linux kernel heavily relies on GCC extensions for optimization and functionality.
    - Using `-pedantic` would trigger numerous warnings for valid kernel code, making it impractical for kernel development.
    - The kernel is specifically designed to use GNU C (GCC extensions), not strictly ISO C standards.

  Recommended Compiler Options
    - Use `-Wall` for essential warnings in kernel module development.
    - Avoid `-pedantic` when working on kernel modules or interacting with the kernel source tree.
    - Optionally, enable `-Wextra` for additional warnings, but suppress specific warnings from kernel headers if necessary.

Conclusion:
The reliance on GCC extensions in the Raspberry Pi kernel makes it non-compliant with strict C standards. Consequently, the `-pedantic` option in Clang is unsuitable and should be avoided d







Suppressing Kernel Warnings with `-Wno-unused-parameter` and `-Wno-sign-compare`

In kernel development, two common types of warnings can be effectively suppressed using the options `-Wno-unused-parameter` and `-Wno-sign-compare`. These warnings are frequent in kernel code due to its design and practices, and suppressing them improves the development experience without losing critical feedback.

  -Wno-unused-parameter
    - What it suppresses:
      Suppresses warnings about function parameters that are declared but not used in the function body.
    - Example:
      void foo(int unused_param) {
          // `unused_param` is not used in the function body
      }
      Without this flag, the warning would be:
      warning: unused parameter 'unused_param' [-Wunused-parameter]
    - Why it is unnecessary in the kernel:
      Kernel code often declares unused parameters to maintain ABI compatibility or for specific design reasons, making this warning irrelevant.

  -Wno-sign-compare
    - What it suppresses:
      Suppresses warnings about comparisons between signed and unsigned integer types.
    - Example:
      int signed_value = -1;
      unsigned int unsigned_value = 10;
      if (signed_value < unsigned_value) {}
      Without this flag, the warning would be:
      warning: comparison of integers of different signs: 'int' and 'unsigned int' [-Wsign-compare]
    - Why it is unnecessary in the kernel:
      Kernel code frequently compares signed and unsigned values intentionally, and these comparisons are generally well-understood and safe in this context.

Conclusion:
By adding `-Wno-unused-parameter` and `-Wno-sign-compare` to the build flags, kernel developers can suppress the most frequent irrelevant warnings while retaining other useful feedback. These flags align with common kernel practices and improve the clarity of the development process.



file ledKey.ko
>> ledKey.ko: ELF 32-bit LSB relocatable, ARM, EABI5 version 1 (SYSV), BuildID[sha1]=b0aeb9cae46ac4e1b30137877dc8d9da88eb7446, not stripped
readelf -s ledKey.ko
llvm-strip --strip-debug ledKey.ko

readelf -s
 
 Binutils for Ubuntu) 2.42


 

: '
📦 binutils
    https://repology.org/project/binutils/versions
    https://formulae.brew.sh/formula/binutils#default

    Code formatter for JavaScript, CSS, JSON, GraphQL, Markdown, YAML
'
brew install binutils

 which ld
/usr/bin/ld

wbfw109v2 in 🌐 iot04-device in raspberry_pi/drivers/p106_led on  main [!] via C v13.3.0-gcc 
❯ ld --version

GNU ld (GNU Binutils for Ubuntu) 2.42


Installed binaries
  - addr2line
  - ar
  - as
  - c++filt
  - coffdump
  - dlltool
  - dllwrap
  - dwp
  - elfedit
  - gold
  - gp-archive
  - gp-collect-app
  - gp-display-html
  - gp-display-src
  - gp-display-text
  - gprof
  - gprofng
  - ld
  - ld.bfd
  - ld.gold
  - nm
  - objcopy
  - objdump
  - ranlib
  - readelf
  - size
  - srconv
  - strings
  - strip
  - sysdump
  - windmc
  - windres
  

/usr/bin/ld ⇒ x86_64-linux-gnu-ld ⇒ /usr/bin/x86_64-linux-gnu-ld ⇒ x86_64-linux-gnu-ld.bfd


🧮
  # %shell> brew list binutils
  fish_remove_path
  fish_add_path --universal --prepend /home/linuxbrew/.linuxbrew/opt/binutils/bin
❓ misc deivce 로 만들면 편한점?
 collect2: error: ld returned 1 exit status
  make[2]: *** [scripts/Makefile.host:114: scripts/asn1_compiler] Error 1
  /home/linuxbrew/.linuxbrew/opt/binutils/bin/ld: /usr/libexec/gcc/x86_64-linux-gnu/13/liblto_plugin.so: error loading plugin: /home/linuxbrew/.linuxbrew/opt/glibc/lib/libc.so.6: version `GLIBC_2.38' not found (required by /usr/libexec/gcc/x86_64-linux-gnu/13/liblto_plugin.so)
  collect2: error: ld returned 1 exit status
  make[2]: *** [scripts/Makefile.host:114: scripts/recordmcount] Error 1
  make[1]: *** [/home/wbfw109v2/repos/kernels/raspberry_pi/Makefile:1185: scripts] Error 2
  make: *** [Makefile:234: __sub-make] Error 2
>>>>>>>.. 제거 string match -v /home/linuxbrew/.linuxbrew/opt/binutils/bin $fish_user_paths
set -U fish_user_paths (string match -v /home/linuxbrew/.linuxbrew/opt/binutils/bin $fish_user_paths)



LD는 링커를 의미하며, "Linker Driver" 또는 간단히 **"Linker"**의 약자입니다

ARMv8-A

10.3 Variables Used by Implicit Rules

CC ; https://www.gnu.org/software/make/manual/make.html#index-CC
  Program for compiling C programs; default ‘cc’.
CXX
  Program for compiling C++ programs; default ‘g++’.



1.
CC ; https://www.gnu.org/software/make/manual/make.html#index-CC
  Program for compiling C programs; default ‘cc’.
  cc ⇒ /usr/bin/cc ⇒ /etc/alternatives/cc ⇒ /usr/bin/gcc
CXX
  Program for compiling C++ programs; default ‘g++’.

라는데 cc 가 뭐야?

2. 
LDFLAGS
  -  Extra flags to give to compilers when they are supposed to invoke the linker, ‘ld’, such as -L. Libraries (-lfoo) should be added to the LDLIBS variable instead.
LD 가 뭐지? make 공식문서를 봐도 안나오는데. 
  LDFLAGS, LDLIBS 는 있는데 LD 는 없어.

  ARCH, CROSS_COMPILE 도 마찬가지야 변수이름이 make 에 공식문서에 없는데.. kbuild ?거길 찾아봐야 하나



*.ko
  Kernel module file (Kernel Object). This is the compiled result of the kernel module, ready to be loaded into the kernel.

*.mod.*
  Metadata files related to kernel modules. These files contain information about the kernel module.

.*.cmd
  Internal build command cache files. These are generated to track whether a source file needs to be rebuilt.

*.o
  Object files. These are the compiled output of individual source files (.c).

modules.order
  A file that lists the build order of all modules. It helps the kernel build system manage dependencies.

Module.symvers
  Symbol versioning file. This contains symbol information to resolve dependencies between kernel modules.

.tmp_versions
  Temporary version directory. This holds temporary versioning information for kernel modules during the build process.

$(MODULE_NAME).mod
  Build information file for the kernel module. It includes additional metadata for the module.

$(APP_NAME) or $(APP_NAME).out
  The compiled application binary. This is the output of the application build process.



🪱 dev (countable and uncountable, plural devs)
  Clipping of developer. 
  Clipping of development.
    game dev
  (computing, UNIX) Clipping of device.




# Generating `compile_commands.json` for Kernel Module Builds

## Overview
Generating an accurate `compile_commands.json` file for kernel module development can be challenging due to the complexity of Makefile environments and the tools available. This document explains the differences between tools like `compiledb`, `bear`, and the `-MJ` option in Clang, focusing on why `compiledb` works best for complex builds like Linux kernel modules.

---

## Tools for `compile_commands.json` Generation

### 1. `compiledb`
- **How it works**:
  - `compiledb` wraps the `make` command and captures all executed build commands across multiple levels of Makefile recursion.
  - It records all environment variables, include paths, and flags used during the build process.
  
- **Advantages**:
  - Handles complex builds with recursive Makefile calls.
  - Fully captures dynamic build environments, including variables like `ARCH` and `CROSS_COMPILE`.
  - Produces a complete and accurate `compile_commands.json`.

- **Best Use Case**:
  - Recommended for kernel module builds and other projects with recursive Makefile structures.

---

### 2. `bear`
- **How it works**:
  - `bear` intercepts system calls (`execve`) during the build process to record compile commands.
  - Tracks all compiler invocations to generate a `compile_commands.json` file.

- **Limitations**:
  - Struggles with recursive Makefile calls and dynamic environment variables.
  - May miss critical details like dynamically defined include paths (e.g., kernel headers).
  - Generates incomplete `compile_commands.json` for complex Makefile projects like kernel modules.

- **Best Use Case**:
  - Suitable for simpler projects with flat Makefile structures.

---

### 3. Clang's `-MJ` Option
- **How it works**:
  - Clang’s `-MJ` option writes a single JSON file for each compile command it processes.
  - The generated file describes the build settings for one compilation unit.

- **Limitations**:
  - Only captures information for individual source files.
  - Does not aggregate JSON files into a unified `compile_commands.json` file.
  - Requires manual post-processing to combine JSON fragments.
  - Fails to capture dynamic environment variables and kernel-specific include paths.

- **Best Use Case**:
  - Rarely recommended for kernel module builds due to its lack of full environment support.

---

## Why `compiledb` Works Best for Kernel Module Builds

1. **Recursive Makefile Support**:
   - Kernel module builds often involve recursive calls using `make -C`, which `compiledb` handles effectively.

2. **Environment Variable Capture**:
   - Dynamic variables like `ARCH` and `CROSS_COMPILE` are critical for kernel builds. `compiledb` captures these seamlessly.

3. **Full Command History**:
   - Tracks all compiler invocations, including those for dependencies and submodules.

4. **Ease of Use**:
   - One command generates a complete `compile_commands.json`:
     ```bash
     compiledb make
     ```

---

## Common Issues with Other Methods

### `bear`
- Fails to capture dynamically defined include paths (e.g., `/usr/include/linux`).
- Struggles with multi-level Makefile recursion.

### `-MJ`
- Produces fragmented JSON files.
- Requires manual aggregation into a single `compile_commands.json`.
- Does not capture global build environment settings.

---

## Recommendations

### For Kernel Module Developers
1. **Use `compiledb make`**:
   - Reliable and complete solution for generating `compile_commands.json`.
   - Handles kernel-specific build environments effectively.

2. **Avoid `bear` and `-MJ` for Complex Builds**:
   - While suitable for simpler projects, they lack the depth needed for kernel module development.

3. **Consider CMake for New Projects**:
   - CMake provides built-in support for generating `compile_commands.json` without additional tools:
     ```bash
     cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON .
     ```

---

## Conclusion

- `compiledb` is the most robust tool for generating `compile_commands.json` in complex environments like Linux kernel module builds.
- While `bear` and `-MJ` have their uses, they often fail to handle the recursive Makefiles and dynamic variables required for kernel development.


 
mini-kernel-boot-logo 📅 2024-12-12 21:08:29
  // netpbm
  pnmquant -fs 224 puppies_840x480.ppm > logo_kcci_224.ppm
  pnmnoraw logo_kcci_224.ppm > logo_custom_clut224.ppm



지금 내가 했던 라즈베리파이의 부트로고 변경하기 위한 절차의 히스토리를 기록하고 있는데, 내가 다음 과정이 기억이 안나서 그러는데 도와줄 수 있어?

TODO:
  //// ?? 확실하지 않음... zImage 만 빌드하는거 맞나? dts, modules 는 빌드 안해도 되나? 이거 할떄에는?
    # one time.. 맞나?
    make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- bcm2711_defconfig
    make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- bcm2711_defconfig
    make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- bcm2711_defconfig

    # 위치가 여기 맞나? 
    make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- menuconfig
      Device drivers
        Grpahics support
          Bootup logo  (last element)
          // <Help>
          // Defined at drviers/video/logo/Kconfig:19
      // select one
    cat .config | grep CONFIG_LOGO_CUSTOM_CLUT224

    #!/usr/bin/env fish
    make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- zImage -j$(nproc)
    cp arch/arm/boot/zImage /nfs/class/pi_kernel/kernel7l.img


    cp arch/arm/boot/zImage  ....nfs pi kernel / zImage_logo >>
      라즈베리 파이에서 kernel7l.img 로 오버라이트까지
    ssh r-pi.local '
      cp /mnt/host/class/pi_kernel/kernel7l.img ????
      .. 근데 그위치가 어디지?
  '


지금까지 내역:
## 🎱 Mini-Project - Customize Boot Logo for Raspberry Pi B4

📅 Written at 2024-12-13 11:38:28

- [🎱 Mini-Project - Customize Boot Logo for Raspberry Pi B4](#-mini-project---customize-boot-logo-for-raspberry-pi-b4)
  - [✔️ Basic Setup](#️-basic-setup)
    - [in ChatGPT, Say "Create puppies pictures" to "Dall-E" and Save picture for boot logo.](#in-chatgpt-say-create-puppies-pictures-to-dall-e-and-save-picture-for-boot-logo)
  - [✔️ Configuration: include/linux/linux_logo.h](#️-configuration-includelinuxlinux_logoh)
  - [✔️ Configuration: drivers/video/logo/logo.c](#️-configuration-driversvideologologoc)
  - [✔️ Configuration: drivers/video/logo/Kconfig](#️-configuration-driversvideologokconfig)
  - [✔️ Configuration: drivers/video/logo/Makefile](#️-configuration-driversvideologomakefile)

### ✔️ Basic Setup

📁 Default Workspace: raspberry-pi/ from `git clone https://github.com/raspberrypi/linux raspberry-pi`

```bash
#!/usr/bin/env fish
mkdir -p $HOME/repos/kernels/
cd $HOME/repos/kernels/

git clone https://github.com/raspberrypi/linux raspberry-pi

# Create and switch to a new branch that tracks the remote branch origin
git switch --create my-raspberry --track origin/rpi-6.6.y
```

#### in ChatGPT, Say "Create puppies pictures" to "Dall-E" and Save picture for boot logo.

- Save file name as **puppies_840x480** (resolution: **800x480**, **.ppm** extension) in **GIMP**

```bash
#!/usr/bin/env fish

# 🪱 clut: Color Look-Up Table
# Reduce the color palette of the image to 224 colors and save it as "puppies_logo_clut224.ppm"
gm convert -colors 224 puppies_840x480.ppm puppies_logo_clut224.ppm

# Convert the color-reduced image to ASCII PPM format and save it as "puppies_logo_clut224_ascii.ppm"
gm convert -compress none puppies_logo_clut224.ppm puppies_logo_clut224_ascii.ppm

# Move the ASCII PPM file to the Linux kernel's logo directory for custom logo integration
mv puppies_logo_clut224_ascii.ppm drivers/video/logo/logo_custom_clut224.ppm
```

### ✔️ Configuration: include/linux/linux_logo.h

- Add lines

  ```c
  extern const struct linux_logo logo_spe_clut224;
  ```

  after

  ```c
  //// ⚙️
  extern const struct linux_logo logo_kcci_clut224;
  ```

### ✔️ Configuration: drivers/video/logo/logo.c

- Add lines

  ```c
  //// ⚙️
  #ifdef CONFIG_LOGO_CUSTOM_CLUT224
      logo = &logo_custom_clut224;
  #endif
  ```

  after

  ```c
  #ifdef CONFIG_LOGO_SUPERH_CLUT224
      /* SuperH Linux logo */
      logo = &logo_superh_clut224;
  #endif
  ```

### ✔️ Configuration: drivers/video/logo/Kconfig

- Add lines

  ```ini
  # ⚙️
  config LOGO_CUSTOM_CLUT224
    bool "kcci 224--color Linux logo"
    depends on LOGO
    default y
  ```

  before

  ```ini
  endif # LOGO
  ```

### ✔️ Configuration: drivers/video/logo/Makefile

- Add lines

  ```Makefile
  # ⚙️
  obj-$(CONFIG_LOGO_CUSTOM_CLUT224)	    += logo_custom_clut224.o
  ```

  after

  ```Makefile
  obj-$(CONFIG_LOGO_SUPERH_CLUT224)	+= logo_superh_clut224.o
  ```

pc 의 병렬포트

glbic .. 그거 flag.. 해석.. 공식문서..
  perror()
  mknode()
  read, write, lseek
  ioctl()
  register_chrdev()
  unregister_chrdev
  주번호, 부번호.
  kmalloc(), kfree
  mutext
  pool
    하나의 프로세스가 여러 디바이스를 다룰 떄 각 디바이스의 블록킹 다중화 문제를 해결하기 위함.

TODO: boot-logo 해보기.

O'Relly 

🧮 echo $fish_user_paths | tr ':' '\n'


Keyboard shortcuts.. Sleection exapnd
  The shrink/expand selection commands should be what you are looking for. The command names are editor.action.smartSelect.grow (default keybinding shift+alt+right) and editor.action.smartSelect.shrink (default keybinding shift+alt+left).


Homebrew의 공식 문서에 따르면, Homebrew는 기본적으로 호스트 시스템에서 제공하는 라이브러리를 사용하지 않으며
, 필요한 경우 자체적으로 최신 버전의 glibc와 gcc를 설치합니다. 그러나 arm-linux-gnueabihf와 같은 특정 크로스 컴파일러는 Homebrew의 기본 저장소에 포함되어 있지 않을 수 있습니다.


https://docs.brew.sh/C++-Standard-Libraries


  included file: no member named 'abs' in namespace 'std'; did you mean 'std::chrono::abs'

 
drivers/char/kcci_ledkey/Kconfig
  menu "kcci gpio test device driver"
    depends on ARM
    config KCCI_LEDKEY
    tristate "kcci ledkey device driver"
    help
    sample driver for ledkey device
  endmenu

drivers/char/Kconfig
  source "drivers/char/kcci_ledkey/Kconfig"

# make modules 할 때 컴파일 대상이 되는 것?
drivers/char/Makefile
  obj-$(CONFIG_KCCI_LEDKEY) += kcci_ledkey/

  # $(CONFIG_KCCI_LEDKEY) 값이 y 일 때 컴파일해라!


check by menuconfig

  Device Drivers - Character devices
      - ✔️ <*> kcci gpio test device driver
bat .config | rg CONFIG_KCCI_LEDKEY

Tip
  "<>" tristate: ✔️ "M", "*", ""
  "[]" bool type


make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- zImage -j(nproc)

cp arch/arm/boot/zImage /nfs/drivers/
ssh r-pi.local "sudo cp /mnt/host/drivers/zImage /boot/firmware/kernel7l.img"
ssh r-pi.local "sudo reboot"

# check modified date for boot image
ssh r-pi.local "
uname -a
dmesg | grep ledkey_init
cat /proc/devices | grep "230 ledkey"
"

sudo mknod /dev/ledkey_dev c 230 0
sudo chmod 666 /dev/ledkey_dev

./ledkey_pool_app 0x55


//
check by menuconfig
  Device Drivers - Character devices
      - ✔️ <M> kcci gpio test device driver
bat .config | rg CONFIG_KCCI_LEDKEY

make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- zImage -j(nproc)
cp arch/arm/boot/zImage /nfs/drivers/
ssh r-pi.local "sudo cp /mnt/host/drivers/zImage /boot/firmware/kernel7l.img"
ssh r-pi.local "sudo reboot"


# check modified date for boot image
ssh r-pi.local "
uname -a
dmesg | grep ledkey_init
cat /proc/devices | grep '230 ledkey'
"

//


make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- modules -j(nproc)
# check ledkey_dev.ko file exists.
ll /home/wbfw109v2/repos/kernels/raspberry_pi/drivers/char/kcci_ledkey | rg ledkey_dev.ko

cp drivers/char/ledkey_dev.ko /nfs/drivers
ssh r-pi.local "
sudo mkdir -p /lib/modules/(uname -r)/kernel/drivers/kcci_ledkey
sudo cp /mnt/host/drivers/ledkey_dev.ko /lib/modules/(uname -r)/kernel/drivers/kcci_ledkey/

# one-time
## sudo cp /lib/modules/(uname -r)/modules.dep /lib/modules/(uname -r)/modules.dep_backup

sudo depmod -a
cat /lib/modules/(uname -r)/modules.dep | tail -n 2
diff /lib/modules/(uname -r)/modules.dep /lib/modules/(uname -r)/modules.dep_backup
#   >> kernel/drivers/kcci_ledkey/ledkey_dev.ko:

# 💡 
## insmod 는 full path 지정 필요. modprobe 는 모듈이름만 쓰면 되고 어떤 경로에서 사용하든 /lib/modules/(uname -r)/ 에서 자동으로 탐색한다.
sudo modprobe ledkey_dev
dmesg | tail -n 2
cat /proc/devices | grep ledkey

sudo rmmod ledkey_dev
dmesg | tail -n 2
cat /proc/devices | grep ledkey

sudo mknod /dev/ledkey_dev c 230 0
sudo chmod 666 /dev/ledkey_dev

/mnt/host/drivers/ledkey_pool_app 0x55
"

# backup .config
cp .config arch/arm/configs/bcm2711_kcci_defconfig

## 배포하기전에!!
make clean
make mrproper

## 배포
tar cvfj linux_6.6.tar.bz2 디렉토리_또는_파일
tar --exclude='.git' -cvfj ../linux_6.6.tar.bz2 ../raspberry-pi

## 배포받은 설정 불러오기.
cp arch/arm/configs/bcm2711_kcci_defconfig .config

## 이거 왜 안되지? make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- bcm2711_kcci_defconfig


############

❓ 와 PDF 에 영상을 넣을 수 있엇나보네? Okular 로 재생됨
  ppt sources
    https://www.ultralytics.com/ko/brand


⚓ Kconfig Language ; https://docs.kernel.org/kbuild/kconfig-language.html
  #️⃣ Menu attributes ; https://docs.kernel.org/kbuild/kconfig-language.html#menu-attributes
    - type definition: “bool”/”tristate”/”string”/”hex”/”int”

https://github.com/ROBOTIS-GIT/OpenCR
  ROBOTIS e-Manual for OpenCR ; https://emanual.robotis.com/docs/en/parts/controller/opencr10/
  ROBOTIS e-Manual for TurtleBot3 ; https://emanual.robotis.com/docs/en/platform/turtlebot3/overview/


https://github.com/ROBOTIS-GIT/OpenCR/issues/55
https://github.com/ROBOTIS-GIT/OpenCR/blob/master/arduino/opencr_arduino/opencr/libraries/OpenCR/examples/10.%20Etc/FreeRTOS/thread_led/thread_led.ino
https://github.com/ROBOTIS-GIT/OpenCR/blob/master/arduino/opencr_arduino/opencr/libraries/RTOS/src/FreeRTOS.h
FreeRTOS는 OpenCR의 Arduino 라이브러리 내에서 지원되며, 멀티태스킹이 필요한 경우 활용됩니다.



/home/linuxbrew/.linuxbrew/opt/binutils/bin/ld : /usr/libexec/gcc/x86_64-linux-gnu/13/liblto_plugin.so: error loading plugin: /home/linuxbrew/.linuxbrew/opt/glibc/lib/libc.so.6: version `GLIBC_2.38' not found (required by /usr/libexec/gcc/x86_64-linux-gnu/13/liblto_plugin.so)

How to update Ubuntu minor version
  🛍️ e.g. 24.04 -> 24.10
  sudo apt update
  sudo apt upgrade -y
  sudo apt dist-upgrade -y
    upgrade 명령보다 더 강력한 업그레이드를 수행하며, 필요한 경우 패키지를 제거하거나 새 패키지를 설치합니다.
    **배포판 업그레이드(distro upgrade)**에 사용되기도 하지만, 실제로는 시스템 패키지의 의존성 문제를 해결하며 업그레이드하는 강력한 명령입니다.

    sudo nano /etc/update-manager/release-upgrades
      Prompt=lts
      to
      Prompt=normal

flatpak  Flatseal

우분투 업그레이드 후, sudo apt install dolphin 은. 배경 흿낵에 글자도 흰색으로 나와서 안보여지게 되버린다.
  --> 시스템 테마를 검정색으로 하면 발생하는듯. 글자만 흰색으로 되고 배경은 변하지 않아서.
  sudo apt install gnome-tweaks
  gnome-tweaks
  여기서 Appearance - Styles
    - Icons
      ✔️ HighContrast
    - Legacy Applicaton
      ✔️ HighContrast
  로 바꾸니까 시스템 테마에 영향을 받지 않게 되어 white 배경에서 변하지가 않게 되는 문제가 있긴하지만.. 일단 보이게 됫으니 임시 해결..  📅 2024-12-23 21:20:31

flatpak 으로 설치한 dolphin 은 테마 변경이 불가능한 문제.
  /mnt/lect_nfs 도 접근이 안된다.
  https://unix.stackexchange.com/questions/457673/dark-theme-in-dolphin-file-manager

Nemo
  https://en.wikipedia.org/wiki/Nemo_(file_manager)
    - 멀티탭 지원
    - Tree 뷰 기본 지원
    - 단축키 커스터마이징
    - 풍부한 확장 기능
    - GTK 기반으로 시스템 테마와 통합 가능
sudo apt install nemo
  # https://forums.linuxmint.com/viewtopic.php?t=264754
    Re: Changing shortcuts in Nemo file manager
    Post by Cosmo. » Tue Feb 27, 2018 6:01 am

    Keyboard shortcuts in Nemo are hard coded. So, not possible.
    ㅇㅇ.. 된다고 하는사랃모 있는데 해보니까 안된다. Ubuntu. 📅 2024-12-23 20:23:42


  
Qt project
  Qt creator - 
    example: Anoalog Clock
    example: tetrix
    copy widgets/widgets/tetrix to $HOME/qt_examples ???
    ❓ QMainWindows vs QWidgets vs QDialog


    Qt 6 이상에서는 CMake for Qt 6.5 and Later를 사용하는 것이 권장됩니다.

ui->setUi(this);
QObject::connect(ui->pushButton,SIGNAL(clicked()), ui->label, SLOT(clear()));
⭕ Qt 5.0 이후로는 SIGNAL/SLOT 매크로 대신 함수 포인터 방식이 권장됩니다. 이 방식은 컴파일 타임에 오류를 감지할 수 있어 더 안전합니다.
    // QObject::connect(ui->pushButton, SIGNAL(clicked()), ui->label, SLOT(clear()));
    connect(ui->pushButton, &QPushButton::clicked, this, &MainWindow::myTestSlot);
    
    // ⚙️ Lambda-based signal-slot connection in Modern C++"
    // QObject::connect(ui->pushButton, SIGNAL(clicked()), ui->label, SLOT(clear()));
    connect(ui->pushButton, &QPushButton::clicked, this, [this]() {
        // in Modern c++
        qDebug() << "Button clicked!";
        ui->label->setText("Button was clicked!");
    });
New Project
  Location
  Build System
    * Define Build System
    * Buil System :) 
      ✔️ CMake for Qt 6.5 and Later
      of 
        - CMake
        - qmake
          - Qt 이외의 라이브러리와의 통합이 어려움.
          - 최신 프로젝트 관리 및 빌드 시스템(CMake 등)에 비해 유연성이 부족.
        - Qbs (Qt Build Suite)
          Qt 자체에서도 더 이상 권장되지 않음(2020년부터 Qbs 지원 종료).


  
vscode extension: error lens??

🛤️ ~/.local/share/applications/
  Qt-MaintenanceTool.desktop

in Qt-MaintenanceTool
  Qt Design Studio - 4.6.2 (latest stable version) (default when select ...)
  Qt
      - Qt 6.8.1 (latest stable version)
          - ✔️ Desktop (default when select ...)
          - ✔️ Android (default when select ...)
          - ✔️ Additional Libraries
              - ✔️ Qt Charts (default when select ...)
              - ✔️ Qt Language Server
              - ✔️ Qt Multimedia (default when select ...)
              - ✔️ Qt Quick 3D (default when select ...)
              - ✔️ Qt Quick Timeline (default when select ...)
              - ✔️ Qt Shader Tools (default when select ...)

  📰 Qt Creator 15.0.0. (default when select ...)
  # https://makersweb.net/qt/26632
  %VSCODe> Qt: Register Qt Installation
    $HOME/Qt (default installed location)
      Select Qt installation root
    >>> "qt-core.qtInstallationRoot": "/home/wbfw109v2/Qt"
🪱 월패드


➡️ >CMake: Edit User-Local CMake Kits
  // add
  {
    "name": "GCC ARM Toolchain",
    "compilers": {
      "C": "/usr/bin/arm-linux-gnueabihf-gcc",
      "CXX": "/usr/bin/arm-linux-gnueabihf-g++"
    },
    "isTrusted": true
  },
키트는 사용자 로컬 키트 파일에 저장되어 있으며, CMake: Edit User-Local CMake Kits 명령으로 열 수 있다.
이제 Visual Studio Code편집기에서 Qt 에 대한 IntelliSense 기능이 활성화되고 CMake: Build 및 CMake: Run without Debugging명령으로 프로젝트를 빌드하고 실행할 수 있다.


  // "clangd.enable": false,
  // "C_Cpp.intelliSenseEngine": "default",
  // "C_Cpp.inlayHints.parameterNames.enabled": true, // not works if "C_Cpp.intelliSenseEngine": "disabled",
  를 .settings.json 에 줫다가 다시 주석으로 설정하고 reload window 하니까 clang 에 대해서 intellisense 잘 작동한다.


qt project 에.. 
  QT += widgets 
    추가?

qmake 하면 Makefile 만들어진다. 여기서 make 하면 컴파일함.

# https://doc.qt.io/qt-6.2/qtwidgets-widgets-tetrix-example.html

📍 >CMake: Build  
  해야지 Intellisense 가 작동한다 !!!
❓ >CMake: Select a Kit


Compiling and Running Qt Project
Now we can compile a Qt application and get a binary that is suitable to deploy on Raspberry Pi. There are two methods to achieve this: with Terminal or with Qt Creator. For both methods, we will use the analogclock example project.

With Terminal
$ cd ~/qt5/qtbase/examples/gui/analogclock/
$ ls ## make sure there is a CMakeLists.txt file
$ ~/qt-raspi/bin/qt-cmake CMakeLists.txt

### CMake is configuring here. After it is done without any error, we can proceed to build and install it

$ cmake --build . --parallel 4
$ cmake --install .
We now have the binary of our application ready to be run on the Raspberry Pi. We can then send the binary to our Raspberry Pi using either scp or rsync and run the application (either through SSH or directly on the Raspberry Pi with keyboard and mouse connected).

$ scp -r gui_analogclock <pi_username>@<pi_ip_address>:/home/pi
$ ssh <pi_username>@<pi_ip_address>
$ cd ~ ## or cd to the directory where you send the binary
$ ./gui_analogclock





크로스 컴파일에서 Baremetal이나 커널 모듈이 아닌 일반적인 사용자 애플리케이션을 개발할 때, sysroot는 매우 유용하지만 반드시 필요한 것은 아닙니다. 이를 결정하는 몇 가지 요인과 대안을 설명하겠습니다.

  1. 왜 sysroot가 필요한가?
  크로스 컴파일러는 타겟 환경의 헤더와 라이브러리를 요구합니다.

  타겟 시스템에서 사용하는 표준 라이브러리(예: libc), Qt 또는 기타 종속성을 사용하려면 헤더 파일과 라이브러리가 필요합니다.
  타겟의 파일 시스템 구조와 일치하는 환경이 필요하며, 이를 위해 sysroot를 사용합니다.
  sysroot의 역할

  컴파일러가 타겟 환경의 경로(/usr/include, /lib)를 가상으로 인식할 수 있게 합니다.
  타겟 환경의 ABI(Application Binary Interface)와 일치하도록 설정합니다.
  2. sysroot 없이 가능한 경우
  다음과 같은 조건이 충족되면 sysroot 없이도 크로스 컴파일이 가능합니다.

  (1) 정적 컴파일 (Static Linking):
  필요한 모든 라이브러리를 정적으로 링크하면 sysroot 없이도 실행 파일을 생성할 수 있습니다.
  그러나 정적 링크는 실행 파일 크기를 증가시키고, 일부 라이브러리(예: Qt)는 정적 컴파일을 지원하지 않거나 복잡할 수 있습니다.
  (2) 모든 종속성을 로컬에서 제공:
  필요한 헤더와 라이브러리를 로컬에 복사하거나 별도로 다운로드하여 컴파일러에 경로를 명시적으로 제공.
  예: -I 및 -L 플래그를 사용하여 경로 지정.
  bash
  코드 복사
  aarch64-linux-gnu-g++ -I/path/to/includes -L/path/to/libs -o app main.cpp -l<libname>
  (3) 단순한 프로그램:
  타겟 시스템에 의존적인 라이브러리가 없는 간단한 C/C++ 프로그램이라면 sysroot 없이도 크로스 컴파일이 가능합니다.
  예: "Hello, World!" 수준의 프로그램은 표준 라이브러리의 기본 경로만 알면 됩니다.
  3. sysroot가 필요한 경우
  다음 조건에서는 sysroot가 필요합니다.

  (1) 동적 링크 (Dynamic Linking):
  타겟 시스템에서 동적으로 링크되는 라이브러리를 사용하는 경우, 해당 라이브러리의 정확한 헤더와 ABI 정보를 참조해야 합니다.
  특히, Qt 같은 대규모 프레임워크는 sysroot 없이 설정하기 어려울 수 있습니다.
  (2) 타겟 시스템에 종속적인 라이브러리 사용:
  타겟 환경의 고유 라이브러리(예: OpenGL ES, ALSA)나 커스텀 라이브러리를 사용하는 경우 sysroot가 필요합니다.
  (3) 복잡한 빌드 시스템 (예: CMake):
  CMake는 종속성을 확인하고 경로를 설정하는 데 sysroot를 활용합니다.
  Qt 크로스 컴파일과 같은 상황에서 CMAKE_SYSROOT가 권장됩니다.

https://github.com/raspberrypi/tools

git clone https://github.com/raspberrypi/tools.git
https://github.com/abhiTronix/raspberry-pi-cross-compilers

#📍 Meta-Object System ; https://en.wikipedia.org/wiki/Meta-object_System
  Qt의 Meta-Object System은 C++의 기능을 확장하여 런타임 동작, 객체 간의 신호/슬롯 통신, 동적 속성(dynamic property) 등을 지원하는 핵심 구성 요소입니다. 이는 표준 C++의 정적 성격을 보완하여 Qt 애플리케이션을 보다 유연하고 직관적으로 개발할 수 있게 합니다.
  Qt의 Meta-Object System은 자바의 annotation 기반 프로세스와 매우 유사합니다. 둘 다 컴파일 타임에 코드 정보를 추가로 처리하여 런타임 동작을 가능하게 만드는 메커니즘입니다.

https://github.com/raspberrypi/tools



우분투 비밀번호..? 쉽게 입력할 수 있으면서 어렵게?.. 리듬게임 키..


------ init_in_fish
  dolphin 설치 후 dolphin 앱을 직접  실행하기 전까지
   ~/.config/dolphinrc 파일이 없다. cat 해도 안나옴.

snap run --shell ffmpeg -c "locale"



🚨 https://askubuntu.com/questions/1301908/locale-gen-generates-not-selected-locales
sudo apt purge language-pack-en language-pack-en-base language-pack-gnome-en language-pack-gnome-en-base

https://velog.io/@librorum/bash-warning-setlocale-LCALL-cannot-change-locale-koKR.UTF-8
  /bin/bash: warning: setlocale: LC_ALL: cannot change locale (en_US.UTF-8)
  bash: warning: setlocale: LC_ALL: cannot change locale (en_US.UTF-8)


https://github.com/engatec/vdl  

flatpak run com.github.unrud.VideoDownloader



우분투 카메라 비활성화 
  sudo modprobe -r uvcvideo
  echo "blacklist uvcvideo" | sudo tee -a /etc/modprobe.d/blacklist.conf
  sudo update-initramfs -u

  sudo modprobe uvcvideo



음.. 이러면 내가 처음에 제시한거랑 차이가 없는데..
awk 가 무조건 파일처음부터 끝까지 읽는다는 점 때문에 개선하기 위해 나온 뭔가 다른 명령어 있나?

⚓ Lua ; https://marketplace.visualstudio.com/items?itemName=sumneko.lua
  ==> Caveats
  You may also want luarocks:
    brew install luarocks

https://formulae.brew.sh/formula/lua

flatpak list --user --app



 영상/오디오의 다운로드형식과 품질을 지정해서 다운로드 할 수 있는것만 알려줘.
flatpak run org.nickvision.tubeconverter


  https://flatpak.org/setup/Ubuntu
  ## Install Flatpak
    https://flathub.org/apps/io.github.peazip.PeaZip
    flatpak install -y flathub io.github.peazip.PeaZip
    ## Run
    # %shell> flatpak run io.github.peazip.PeaZip
    # or click the desktop icon


flatpak install -y --user flathub org.gtk.flatpak install -y --user flathub org.gtk.Gtk3theme.Adwaita-dark
.
flatpak override --env=GTK_THEME=Adwaita-dark org.kde.okular


flatpak install -y --user flathub org.kde.Platform
  https://docs.flatpak.org/en/latest/available-runtimes.html
flatpak override --user --env=QT_QPA_PLATFORMTHEME=gnome org.kde.okular

flatpak override --user --filesystem=$HOME/.themes:ro org.kde.okular
flatpak override --user --env=QT_STYLE_OVERRIDE=Adwaita-dark org.kde.okular

flatpak override --user --env=QT_STYLE_OVERRIDE=Adwaita-dark org.kde.okular
flatpak override --user --reset org.kde.okular

flatpak search gtk.Gtk3theme

📅
set latest_version (flatpak remote-info flathub org.kde.Platform 2>&1 | awk -F": " '/x86_64/ {print $3}' | sed 's/, /\n/g' | awk -F'/' '{print $NF}' | sort -V | tail -1)
flatpak install -y --user flathub org.kde.Platform//$latest_version
flatpak remove --user flathub org.kde.Platform//$latest_version


flatpak install -y --user flathub org.kde.okular

XMP
  View - Theme - ✔️ Black

https://flathub.org/apps/io.mpv.Mpv
flatpak install -y --user flathub io.mpv.Mpv

https://flathub.org/apps/org.kde.dolphin
flatpak install -y --user flathub org.kde.dolphin
  nfs 같은거 안나와서 sudo apt 으로 설치해야 함.


Database connection test was not successful. Error was: Driver not loaded Driver not loaded
  >>> flaktapk 으로 설치한 것만 그렇다.
# https://launchpad.net/~savoury1/+archive/ubuntu/digikam
  sudo add-apt-repository -y ppa:savoury1/digikam
  sudo apt-get update -y
  sudo apt-get remove -y digikam

  >> 버전 낮음.ㅣ


Digikam ; 8.5.0

flatpak install flathub org.kde.PlatformExtras


https://docs.flatpak.org/en/latest/portals.html#portal-support-in-qt-and-kde
  theme

flatpak override --user --filesystem=host org.kde.digikam


8.5.0
https://www.digikam.org/download/binary/#Linux
https://packages.ubuntu.com/search?keywords=digikam&searchon=names&suite=all&section=all

sudo apt 으로 설치하자. 어쩔수 없음.

Time & language - Language & region
 - Related settings - ✔️ Administrative language settings
  - Administrative - Language for non-Unicode programs - ✔️ Change system locale
    - ✔️ Current system locales: Korean [Korea]
    - ✔️ Beta: Use Unicode UTF-8 for worldwide language support
    
https://flathub.org/apps/org.wezfurlong.wezterm


Qt:.. display protocol 이 없으면 애초에 cmake configure 자체가 안됨. 오류. (SSH 로 테스트해봄))
📰
  flatpak digikim 우분투 24.10 에서 mariadb 연결 해보기.
  Qt cmake 크로스컴파일
    되면 conan 으로 감싸기.
  flatpak wezterm 설치 후 gif 재생해보기.
flatpak install -y --user flathub org.kde.digikam
flatpak run --user org.kde.digikam


10.10.14.20/특강
smb://10.10.14.20/

// 자기소개서 경력 등록하기!!



📰 Dolphin.. smb 서버는 보이는데 접속이 안됨.. 노틸러스와 다르게.. 


smbclient //10.10.14.20/특강\ 강사님용 -N

47.0 버전 기준: Other Locations ..
smb://10.10.14.20/특강\ 강사님용


sudo apt install
  Database connection test was not successful. 
  Error was: Can't connect to local MySQL server through socket '/var/run/mysqld/mysqld.sock' (2) QMYSQL: Unable to connect




flatpak override --user --filesystem=host --socket=all --device=all \
--env=QTWEBENGINE_DISABLE_SANDBOX=1 org.kde.digikam

sudo snap install digikam --channel=latest/edge --devmode
snap list digikam

nap list digikam
  Name     Version  Rev  Tracking     Publisher  Notes
  digikam  8.5.0    95   latest/edge  kde✓       devmode


https://snapcraft.io/okular
sudo snap install okular --channel=latest/edge --devmode

snap run --shell okular
To run a command as administrator (user "root"), use "sudo <command>".
See "man sudo_root" for details.

wbfw109v2@wbfw109v2-home2:/home/wbfw109v2/repo/synergy-hub$ ls /snap/okular/current/usr/share/themes
ls: cannot access '/snap/okular/current/usr/share/themes': No such file or directory
wbfw109v2@wbfw109v2-home2:/home/wbfw109v2/repo/synergy-hub$ ls /snap/kf6-core24/current/usr/share/themes
ls /snap/kf6-core24/current/usr/share/icons
Default  Emacs
Adwaita        KDE_Classic   Oxygen_White   breeze-dark     ubuntu-mono-dark
Breeze_Light   LoginIcons    Oxygen_Yellow  breeze_cursors  ubuntu-mono-light
Humanity       Oxygen_Black  Oxygen_Zion    hicolor
Humanity-Dark  Oxygen_Blue   breeze         oxygen

https://snapcraft.io/dolphin

sudo snap install dolphin --channel=latest/candidate --devmode


3. 왜 GTK를 잘 사용하지 않는다는 느낌을 받을까?
  GNOME의 단순화 경향
    GNOME은 최근 몇 년간 UI/UX를 단순화하면서 사용자의 커스터마이징 옵션을 제한했습니다.
    이로 인해 일부 사용자가 KDE Plasma로 이동하는 추세가 있습니다
6. GNOME에서 KDE로 바꿀 때의 장점
커스터마이징: KDE Plasma는 GNOME보다 훨씬 더 세부적으로 데스크톱을 커스터마이징할 수 있습니다.
성능: KDE Plasma는 현대적인 하드웨어에서 가볍고 빠른 성능을 제공합니다.
애플리케이션 통합: Dolphin, Konsole, Okular 등 KDE 애플리케이션과의 높은 통합성.


 gnome, KDE Plasma: 데스크텁 환경
  kubuntu 도  배포 주기가 우분투랑 같나? 데스크탑 환경만 다른거잔아



Kubuntu 가 뭔데? KDE Plasma 를 사용하나?
https://www.reddit.com/r/linux4noobs/comments/1aj288h/ubuntu_vs_kubuntu/

https://www.reddit.com/r/linux4noobs/comments/1ezkyu7/ubuntu_vs_kubuntu/
Kubuntu is better as it comes with KDE Plasma, the best desktop environment for Linux!

Kubuntu 24.04 ... 6.8 대가 미리 설치되어있따.?

단일 타겟 기반으로 가장 빠르고 호환성도 좋은 도구는 Rufus입니다.

scoop install extras/rufus



Calamares Installer는 Linux 배포판에서 사용되는 범용 Linux 설치 프로그램입니다.
  모듈 기반 설계
  ...

Overview 단축키: Meta+W
KRunner 단축키: Alt+Space

Krita (default installed in kUubuntu)🆚 Clip Studio Paint


Display Configuration - Color & Themes - Global Theme
  - Get New
    - ⚓ Sweet KDE ; https://store.kde.org/p/1294729
      - ✔️ Install
      - ✔️ Use

  - Night Light 
    ✔️ ...

git이 이미 설치되어있다. 그리고 

code temp/log.txt
cannot fstatat canonical snap directory: Permission denied
  누구와 비교해서 당신을 뽑아야 하는문제를 물으면, 물론 누구도 적합하지만 저도 그런 분야에서 장점을 갖고잇다고 말한다.


❗ IBus should be called from the desktop session in Wayland. For KDE, you can launch 'systemsettings5' utility and go to "Input Devices" -> "Virtual Keyboard" section and select "IBus Wayland" icon and click "Apply" button to configure IBus in Wayland. For other desktop sessions, you can copy the 'Exec=' line in org.freedesktop.IBus.Panel.Wayland.Gtk3.desktop file to a configuration file of the session. Please refer each document about the "Wayland input method" configuration. Before you configure the "Wayland input method", you should make sure that QT_IM_MODULE and GTK_IM_MODULE environment variables are unset in the desktop session. 



    1. sudo apt install fcitx5-hangul
    2. killall fcitx5 && fcitx5 >/dev/null 2>&1 & disown
      fcitx5를 백그라운드에서 실행했을 때, 출력이 터미널에 남아 있어 Enter를 눌러야만 프롬프트로 돌아가는 상황을 말씀하시는 것 같습니다. 이 경우, </dev/null과 >/dev/null 2>&1가 모두 중요한 역할을 할 수 있습니다.
      1. 왜 Enter를 눌러야 프롬프트로 돌아오는가?
        fcitx5를 &로 백그라운드 실행했을 때, 터미널은 입력(stdin) 또는 출력(stdout/stderr) 상태와 연결된 상태로 유지됩니다.
        다음과 같은 경우 프롬프트로 자동으로 돌아가지 않고 대기 상태에 빠질 수 있습니다:

          프로세스가 **출력(stdout/stderr)**을 남기는 경우.
          프로세스가 **입력(stdin)**을 요구하지 않더라도, 연결이 끊어지지 않은 경우.
        2. 역할 정리: </dev/null와 >/dev/null 2>&1
        </dev/null의 역할: 입력(stdin)을 끊음
        </dev/null은 프로세스의 표준 입력(stdin)을 **/dev/null**로 연결하여, 입력 대기를 방지합니다.
        프로세스가 입력을 요구하지 않더라도, 쉘 세션과 연결된 상태를 끊기 위해 유용합니다.
        >/dev/null 2>&1의 역할: 출력(stdout/stderr)을 억제
        >/dev/null: 표준 출력(stdout)을 /dev/null로 리디렉션하여 터미널에 표시되지 않도록 합니다.
        2>&1: 표준 에러(stderr)를 표준 출력(stdout)으로 리디렉션하여, 모든 출력이 /dev/null로 보내지도록 합니다.
        둘 다 필요한 이유
        입력(stdin)과 출력(stdout/stderr)이 모두 처리되지 않으면, 터미널이 대기 상태에 빠질 수 있습니다.
        fcitx5의 경우, 출력과 입력 모두 터미널 연결을 끊어야 프롬프트로 자동 복귀합니다.

      disown - remove a process from the list of jobs

      disown [PID ...]

      DESCRIPTION
      disown removes the specified job from the list of jobs. The job itself continues to exist, but fish does not keep track of it any longer.
https://fcitx-im.org/wiki/Using_Fcitx_5_on_Wayland#KDE_Plasma
  
Fcitx: Flexible Context-aware Input Tool with eXtension support
  - 📰 sudo apt install fcitx5 fcitx5-hangul >> https://github.com/Riey/kime?tab=readme-ov-file 으로 바꾸기? wayland 로 변경..
    https://osg.kr/archives/405
    기존에 fcitx4와 fcitx4-hangul이 설치되어 있었다면 fcitx5와 fcitx5-hangul이 설치되면서 기존 버전의 패키지들은 자동으로 제거해 줍니다. 즉, fcitx4와 fcitx5가 공존할 수는 없습니다.
    설치가 잘 됐다면, Settings > Region & Language > Manage Installed Languages > Language Support 창 하단의 Keyboard input method system을 Fcitx 5로 선택해 줍니다.
    // reboot 
    키보드 모양의 아이콘을 눌러서 팝업 메뉴를 열고 Configure를 눌러주면 Fcitx Configuration 창이 열립니다. Fcitx4의 환경설청 창과는 형태가 조금 다릅니다.
    
   
    upper top: Configure
      Input Method
        Available Input Method
          search: Hangul
        result:
          📝 Note that English keyboard must be preceeded to ensure compatibility other tools. like STM32 Cube MX
          Keyboard - Korean   # Default English keyboard
          Hangul  # new added keyboard
      Global Options
        Trigger Input Method: Control+Sapce -> remove except Hangul (button)


%shell>  fcitx5 --version
  5.1.10

// fcitx5
sudo apt install fcitx5-hangul
#  fcitx5-config-qt

%shell>  fcitx5 -r

Wayland Diagnose
  Fcitx should be launched by KWin under KDE Wayland in order to use Wayland input method frontend. This can improve the experience when using Fcitx on Wayland. To configure this, you need to go to "System Settings" -> "Virtual keyboard" and select "Fcitx 5" from it. You may also need to disable tools that launches input method, such as imsettings on Fedora, or im-config on Debian/Ubuntu. For more details see https://fcitx-im.org/wiki/Using_Fcitx_5_on_Wayland#KDE_Plasma

%shell> systemsettings
  Input Devices → Virtual Keyboard.

  Input & Output - Keyboard - Virtual Keyboard
    - ✔️  

sudo apt remove ibus ibus-hangul

Wayland Diagnose

  Detect GTK_IM_MODULE and QT_IM_MODULE being set and Wayland Input method frontend is working. It is recommended to unset GTK_IM_MODULE and QT_IM_MODULE and use Wayland input method frontend instead. For more details see https://fcitx-im.org/wiki/Using_Fcitx_5_on_Wayland#KDE_Plasma

%shell> fcitx5-configtool

Add Hangul Input Method
  In the configuration tool, go to the Input Method tab.
  Click the + button to add a new input method.
  Search for "Korean - Hangul" in the list.
  Select it and click OK.
  Ensure that Korean - Hangul appears in your input method list.
 
https://fcitx-im.org/wiki/Using_Fcitx_5_on_Wayland#KDE_Plasma


sudo apt install -y fcitx5-hangul
killall fcitx5
while pgrep -x fcitx5 > /dev/null
    sleep 0.1
  echo wait
end

# cat ~/.config/fcitx5/profile
echo "[Groups/0]
# Group Name
Name=Hangul
# Layout
Default Layout=us
# Default Input Method
DefaultIM=hangul

[Groups/0/Items/0]
# Name
Name=keyboard-us
# Layout
Layout=

[Groups/0/Items/1]
# Name
Name=hangul
# Layout
Layout=

[Groups/1]
# Group Name
Name=Default
# Layout
Default Layout=us
# Default Input Method
DefaultIM=keyboard-us

[Groups/1/Items/0]
# Name
Name=keyboard-us  
# Layout
Layout=

[GroupOrder]
0=Hangul
1=Default

" | tee ~/.config/fcitx5/profile >/dev/null
# 종료한 다음에 파일을 수정해야한다. 그렇지 않으면 killall 시에 런타임 중에 사용하는 해당 설정으로 복구된다.

fcitx5 >/dev/null 2>&1 & disown

fcitx5-remote -g Hangul

❯ fcitx5-remote -q
  Hangul

📅 2024-12-31 21:25:43

https://fcitx-im.org/wiki/Using_Fcitx_5_on_Wayland#KDE_Plasma
  ⚠️ If you set GTK_IM_MODULE/QT_IM_MODULE globally, you will hit this issue Candidate window is 🪱 blinking under wayland with Fcitx 5
# Do not set GTK_IM_MODULE & QT_IM_MODULE & SDL_IM_MODULE . You could unset GTK_IM_MODULE & QT_IM_MODULE by runing im-config and then selecting do not set any IM from im-config and use desktop default"
im-config -n none

⚠️ Use "Virtual keyboard" KCM (Virtual Keyboard KCM(KWin)) to launch fcitx5. This is required to use text-input protocol. If you launch fcitx this way, make sure you do not use "restart" in the tray menu, since the socket passed from KWin can not be reused with the newly restarted fcitx.


default: 
  cat profile
  [Groups/0]
  # Group Name
  Name=Default
  # Layout
  Default Layout=us
  # Default Input Method
  DefaultIM=keyboard-us

  [Groups/0/Items/0]
  # Name
  Name=keyboard-us
  # Layout
  Layout=

  [GroupOrder]
  0=Default

maintain default Global Options - Hotkey - Trigger Input Method: (Ctrl + Sapce)
  because /hangul key may not exists an keyboard or key is overlpaped in a tool like VSCODE

https://community.kde.org/Kubuntu/PPAs

❯ echo $XDG_SESSION_TYPE ; https://www.freedesktop.org/software/systemd/man/latest/pam_systemd.html#%24XDG_SESSION_TYPE
  


echo $XDG_SESSION_TYPE

보니까 해당 ppa는 공식인가?
ChatGPT said:
ChatGPT

네, **ppa:kubuntu-ppa/backports**는 Kubuntu 공식 PPA입니다. 이는 KDE 커뮤니티와 Kubuntu 팀에서 관리하며, Kubuntu 사용자들이 최신 KDE 소프트웨어를 사용할 수 있도록 제공합니다.

sudo add-apt-repository -y ppa:kubuntu-ppa/backports
sudo apt update && sudo apt full-upgrade -y

apt list -a dolphin


📅 2024-12-28 18:47:52
  sudo add-apt-repository -r -y ppa:kubuntu-ppa/backports
  sudo apt update && sudo apt full-upgrade -y


flatpak install -y --user flathub org.gimp.GIMP
flatpak remove flathub org.gimp.GIMP


kubuntu 24.10 VSCODe 터미널에서만 flatpak 설치 시, 100%에서 멈추는 문제 (CPU 100% 사용중..top 으로 확인함).  ---> 
  아직도 그럼. 제거할때도 마찬가지.
    Uninstalling…
  IME 문제인가? 다시 해보기. 아님. 📅 2024-12-31 21:27:51


>>>>>>>>.

kwriteconfig5 --file ~/.config/kdeglobals --group General --key FileManagerApplication org.peazip.PeaZip.desktop
find ~/.local/share/flatpak/exports/share/applications/ -name '*wezterm*.desktop'

/home/wbfw109v2/.local/share/flatpak/exports/share/applications /org.wezfurlong.wezterm.desktop

kwriteconfig5 --file ~/.config/kdeglobals --group General --key TerminalApplication org.wezfurlong.wezterm.desktop
kbuildsycoca5 

   

>>>>> xdg-mime default org.wezfurlong.wezterm.desktop x-scheme-handler/terminal






Enabling SSH X11 forwarding in Visual Studio Code for remote development

============ 노트북에
... digikam 설치 안해봄
  매터 모듈 사용하는거 ㅇ찾아야 함... 와이파이..


flatpak install -y --user flathub org.kde.digikam
에서 모든 권한 주는 방법.  maraidb drvier 오류 발생해. "모든" 권한
  줘도 안됨. ..ubuntu 에서 테스트.


brew install doxygen



: '
📦 doxygen
https://repology.org/project/tio/versions
https://formulae.brew.sh/formula/tio#default
https://api.github.com/repos/tio/tio

🚣 This tool supports color output for serial connections, similar to PuTTY.
'
brew install tio
# 🛍️ e.g. %shell> tio /dev/ttyUSB0    # Default baud rate is 115200. Use this with a Raspberry Pi and a USB-to-TTL adapter.



cd /home/wbfw109/repos/synergy-hub/study/cpp_study/p_doxygen_test
doxygen -g
doxygen Doxyfile


➡️ VcXsrv vs X410
  https://www.reddit.com/r/bashonubuntuonwindows/comments/t7e7lk/i_couldnt_find_any_benefits_for_x410/
    VcXsrv 추천: 무료이고, 커뮤니티 지원이 풍부하며 고급 사용자가 문제를 더 쉽게 해결 가능.
    X410 추천: 단순한 설정과 WSL에 특화된 지원 문서를 원하거나, 자잘한 버그로 인해 VcXsrv 사용에 불편함을 겪는 경우.


cat $HOMEBREW_PREFIX
brew --prefix
brew --prefix llvm
brew list llvm



This is a simulated preview with limited functionality. Deactivate 'Headless mode' in extension settings for a full experience.

[프로젝트]
ADAS 자율주행차 시스템 반도체SW 개발
  1. 자동차 주행 실시간 고속 인지/판단/제어
- 자동차 구동 제어 프로그램 기반 ADAS(첨단 운전자 보조 시스템) 개발을 위해 
  전측방 Lidar, 카메라 등의 센서 기술적용 
[프로젝트]
인텔 AI 비젼 개발
  1. 머신러닝 모델 활용 불량제품 검사 및 제품 분류
- 인텔 Geti 플랫폼을 활용 컨베이어 벨트를 포함한 자동화 시스템 구축
[프로젝트]
엣지 AIoT 시스템 개발
  1. 드론을 이용한 영상처리 기반의 방범시스템
- 가속도센서 데이터 기반으로 얼굴인식/ 추적 알고리즘 개발 
[프로젝트]
  인텔 엣지 AI 실무 프로젝트
    1. Face Tracking을 통한 스마트 거치대   (  5 5h)
  - 인텔 실시간 딥페이크 탐지 기술(FakeCatcher)활용
    2. (GETi/Open VINO) 딥러닝을 통한 PCB불량탐지  (  7 0H)　
  - Edge AI Workflow에 따른 PCB불량탐지를 위한 모델 개발
재량교과
  1. 기업 현장전문가 및 수료생 초청교육
  2. 이력서 및 포트폴리오 작성 컨설팅
  3. 모의면접(역량, 압박, AI 면접등)

파이썬 fastapi ➡️ 
  좀 더 깔끔한 UI로 API 문서를 제공하고 싶은 경우에는 ReDoc 이라는 옵션도 생각해 볼 수 있는데, 이것도 FastAPI에서 디폴트로 제공하고 있다. 다만 ReDoc 은 API를 테스트 해볼 수 있는 기능은 없어서 문서 용도로만 제공하는게 좋겠다.
  >>> 개발 중에는 Swagger UI, 배포 시에는 ReDoc을 사용하는 방식으로



이력서, 포트폴리오 30일에 fix.


넵
cp /mnt/lect_nfs/QtExamples/Chapter10/

면접시간 맞춰서 갓다 오기. 직인/..이랑 뭐 필요? 출석체크..

mmaction_or_    -files 이거 팀 프로젝트에 추가해야함.
  posec3d

>> 이거 내 레포지토리에서 안내 포함시켜야 함. https://github.com/opmaksim/Signal-Project



  매터 통신 찾아보니까,
    매터 라우터 장치가 필요한가?
      - 배터리로 구동되야 하는 저전력 장치가 있는가?
        x. 미니 키오스크(?) 인포테인먼트 화면을 위한 라즈베리파이도 고성능 장치.
          터틀봇3도 고성능 장치.
      - 메쉬 네트워크가필요한가?
        x. 우리가 1 ~ 2인 매장을 대상으로 해서 와이파이 범위로 커버가 되서, 중앙 라우터 장치가 필요 없음.
    매터 모듈이 주변장치 별로 필요한가?
      x. 매터는 "통신" 표준으로 주변장치와는 관계없음.
      - 단, 매터 스택 (라이브러리) 를 지원하는 보드를 사용해야 한다고 함. 그래서 stm 보드 새로 사야 할 듯.
      - 라즈베리파이의경우 라이브러리 설치가가능해서 따로 추가 구매가 필요없다고 함.
        https://github.com/project-chip/connectedhomeip


  그래서 저거 stm32 공식 유튜브에 나온 보드 사보려고 합니다.

  어라? 그    실무기술이랑 기타사항 너비만 조절했어요.
    다른게 바뀌었어요?

qt webkit tools



can 통신하려면 can 통신 지원하는 
  트랜시버 모듈:
  터미네이션 저항: 2개.

CAN 통신 용도
  배터리 상태(전압, 전류, 온도, 잔여 용량) 모니터링.
    >> 충전 상태 및 오류 상태를 CAN 메시지로 전송.?? 
  DC 모터 또는 BLDC 모터의 속도, 위치, 토크 등을 제어.
    서보 모터의 정밀한 위치 및 속도 제어.
    다수의 모터를 한 CAN 버스에 연결하여 제어 가능(다중 노드 통신).

터미네이션 저항 


git clone 하면 생성날짜가 clone 날짜로 기록되서 못보는데요? 아.. 이거 확실한건 저거 본 프로젝트 일정 시작 날짜 이후라는건데.. 

git log --diff-filter=A -- <파일명> 
으로 첫 커밋 날짜 볼수 있나요? 
창

문기숙

교수님 죄송합니다만, 프로필 작성한거에 대해서 여쭤보려고 합니다.

프로필 작성한거 표준이 있나요? 사람마다 프로젝트 하나에 대해 한 줄만 적은 사람들도 있고, 그렇지 않고 아래에 추가 정보를 적은 사람도 있어서
  인텔 2기 책자를 봐도 그러네요

* 이력서에 관해서도 질문있습니다.
  - 이력서에 있는 Skill-Portfolio 에 있는 모든 항목을 포트폴리오 기술서에도 똑같이 작성해야 하나요?
  - 하만이나 이전기수의 사람들은 "포트폴리오 기술서" 를 프로젝트당 보통 몇페이지 정도 작성했나요? 그리고 총 "포트폴리오 기술서"의 전체 페이지 수가 몇쪽이나 되야해요?
    저희도 그렇게 작성해야 하나 싶어서 여쭤봅니다.


❓ 이거 어떻게 학습햇더라 레이블 넣어서?
  Yolov11 (PyTorch 기반, person pose estimation)을 활용하여 교통 수신호 데이터셋을 학습하고, 이를 ONNX 중간 형식으로 변환한 뒤 TensorRT 양자화를 통해 최적화.

Qt creator
  Qt - Qt Designer Form class

❓ in MainWidget
  ui->pTab->setLayout(pTab1DevControl->layout()); 

STM32WB5MM-DK
  
  

https://www.mouser.kr/ProductDetail/STMicroelectronics/STM32WB5MM-DK?qs=pUKx8fyJudBXuFw80Ns78Q%3D%3D&mgh=1
  AGL ; ROS 2 랑 호환되고 인포테인먼트도 할 수 있는 차량용 OS

라즈베리파 OS
>>>> https://source.android.com/docs/devices/automotive/start/what_automotive?hl=ko#android-automotive-android-auto
  agl infotainment

GPS와 기본적인 지도나 경로를 사용하여 목적지로 가는 길을 안내하는 기능은 Raspberry Pi 4에서도 처리할 수 있습니다.
  
  AGL
    >> ROS 2 와 호환되어야 함. infortainment 를 지원행 함.
  

임베디드 (STM32, Arduino, AVR) S/W 개발 프로젝트 수행
교통 수신호 인식 AI와 초음파 센서를 활용해 충돌을 방지하는 엣지 디바이스 (RC카) 개발
커널 모듈 및 디바이스 드라이버 개발 (ioctl, poll, IRQ 활용)
Yocto Project 기반 빌드 및 임베디드 리눅스 환경 구성 경험
Qt 기반 GUI 애플리케이션 설계 및 구현


프로젝트 기술서.. readme 를 만들고 hwp 에 붙여넣기하자.
https://github.com/PhysicsX/QTonRaspberryPi




Oo to slot.. option 없음.. 

PbQuit_clikced() qApp ->quit()




devcontainer.png.
  QWidget
    [Attributes]:
      - Laout Vertically
      layoutStrcech: 1,4,1, 4
    horizontal layout 1
      [Attributes]:
        layoutStretch: 2:1:1
      QPushButton
        [Attributes]:
          Label: pBtimerStart
          text: TimerStart
      QComboxBox
        [Attributes]: 
          Label: pCBtimerValue
          50 100 200 500 1000 2000 
      QPushButton
        [Attributes]:
          Label: pBQuit 
          text: Quit
    horizontal layout 2
      QDial
        [Attributes]:
          Label: pDialLed
          maxmimum 255  
          ✔️ notchesVisible
      QLCDNumber
        [Attributes]:
          Label: pLcdNumberaLed
          maxmimum 255
          digitcount 2
          mode: Hex
          segmentstyle: Filled
    horizontal layout 3
      QProgressBar
        [Attributes]:
          Label:pProgressBarLed
    gridLayout
      QChceckBox  
        [Attributes]:
          Label: pCBKey1
      QChceckBox
        [Attributes]:
          Label: pCBKey2
      QChceckBox
        [Attributes]:
          Label: pCBKey3  
        
  Configure Connection
    valueChanged(int)
    display(int)
    qDial <-> qLCDNumber
    
    툴바에서 시그널 및 슬롯 편집 모드로 전환 (또는 단축키 F4).
    QDial을 클릭한 후 QLCDNumber로 드래그하여 연결합니다.
    나타나는 연결 설정 창에서 QDial의 시그널을 valueChanged(int)로 선택하고, QLCDNumber의 슬롯을 display(int)로 선택합니다.
    or Edit menu - Edit Signals/Slots

    QTimer

  Qt - Qt designer Form Class vs Qt Item model in Qt IDE? 
    keyled.h, keyled.cpp 


  ?tab1devcontrol.h
    #include "keyled.h"
  ?tab1devcontrol.cpp
    #include "keyled.h"

  on_pPBtimerSart_clicked(bool chceked)
    if cecked
      QString strValue = ui->pCbtimerValue>currentText();

  g

$ sudo apt install qemu-system-x86 qemu-kvm libvirt-daemon-system libvirt-clients bridge-utils virt-manager


https://formulae.brew.sh/formula/libvirt  

We also need to install QEMU, with it, it is possible to emulate/run raspbian os like it is on real raspberry pi 4 hardware

$ sudo apt install qemu-system-x86 qemu-kvm libvirt-daemon-system libvirt-clients bridge-utils virt-manager



cockpit ui
this fu istAllNodeDevices
cockpit
  error: failed to connect to the hypervisor error: Failed to connect socket to '/var/run/libvirt/libvirt-sock': Permission denied
  >> 가상머신 만들때 관리자 접근으로 전환해야 함.

this function is not supported by the connection driver: virConnectListAllNodeDevices

  이 오류의 원인은 libvirt의 nodedev 데몬이 설치되지 않았기 때문입니다.
https://github.com/PhysicsX/QTonRaspberryPi
  🚣 ??? sudo apt install bridge-utils
sudo apt install libvirt-clients libvirt-daemon libvirt-daemon-config-network libvirt-daemon-config-nwfilter libvirt-daemon-driver-qemu libvirt-daemon-system libvirt-daemon-system-systemd

❗ grep "virt-manager" /var/log/dpkg.log
  설치날짜 확인... kubuntu 설치할때 자동으로 설치된듯. full optional package 하니까.


📰📰📰 todo: When custom kernel build and test in Yocto for Jetson Nano 
❔ virt-manager 
    네, Virt-Manager(및 virt-* 관련 프로젝트)의 활발한 개발이 거의 중단된 상태로 보이는 것이 사실입니다. 마지막으로 주요 업데이트가 이루어진 시점은 2022년이며, 이후에는 눈에 띄는 새로운 릴리스나 기능 추가가 없습니다.

    상황 분석: Virt-Manager의 상태
    활동 부족:

    Virt-Manager 프로젝트는 Red Hat에서 시작되었지만, Red Hat이 RHEL 8부터 공식적으로 Cockpit으로 전환하면서 사실상 주요 개발 리소스가 Cockpit에 집중되었습니다.
    Virt-Manager는 더 이상 Red Hat의 주요 프로젝트로 간주되지 않으며, 커뮤니티 주도로만 유지되고 있습니다.
    Deprecated 선언:

    RHEL 8 이후 Virt-Manager는 Deprecated(더 이상 권장하지 않음) 처리되었으며, Red Hat은 Cockpit-Machines를 대체 도구로 제안하고 있습니다.
    Fedora에서도 여전히 사용할 수 있지만, Fedora와 CentOS 사용자는 점차 Cockpit-Machines로 전환하도록 유도받고 있습니다.
    최신 업데이트 이후 활동 부족:

    2022년 이후 Virt-Manager의 업데이트는 주로 버그 수정 및 소규모 개선에 머물렀으며, 대규모 기능 개발은 사실상 중단된 상태입니다.

    https://cockpit-project.org/running.html

    macOS 에서는 사용도 안된다. WSL2 에서도 안 됨.


⚓ Running Cockpit ; https://cockpit-project.org/running.html#ubuntu
  Running Cockpit
    If you already have Cockpit on your server, point your web browser to: https://localhost:9090
    Use your system user account and password to log in. See the guide for more info.

    After installing Cockpit itself, consider installing additional applications in Cockpit
      https://cockpit-project.org/applications.html

⚓🖇️ Start up ; https://cockpit-project.org/guide/latest/startup.html#startup-boot 📅 2024-12-04 00:17:59
  Cockpit's 🪱 cockpit-ws (Cockpit Web Service) component is what the browser connects to and it typically starts 🚣 on demand via systemd socket activation.
  The actual cockpit.service and cockpit-ws process will start on demand when a browser accesses the cockpit.socket, usually on 🪱 port 9090.
  Once a user logs in then a 🪱 cockpit-bridge process will be started in a Linux user login session.
    💡 Only systems that you connect to with your browser need to have the cockpit.socket enabled. 
      For systems that you add through host switcher the bridge is started via SSH on demand.
  #💡 Process exit
  # Boot start up
    sudo systemctl enable cockpit.socket

  ☑️ so "sudo systemctl enable --now cockpit" is Invalid command
    https://superuser.com/questions/1790212/error-when-enabling-cockpit-project-on-debian-12-bookworm
... 9090 -< localhost:9090
  https://code.visualstudio.com/docs/editor/port-forwarding
  VS Code PORTS 탭이 동작하지 않는 이유는 WSL2의 NAT 네트워크와 cockpit.socket의 요청 기반 동작 때문일 가능성이 높습니다.
    >>>>> 설치는 했고, qemu 랑 연동 방법?

  >>>>>>> https://cockpit-project.org/applications
    # Virtual Machines ; https://github.com/cockpit-project/cockpit-machines
      apt-cache plicy cockpit-machines
      loadenv /etc/os-release
      sudo apt install -y --target-release $VERSION_CODENAME-backports cockpit-machines
      dpkg -s cockpit-machines

  https://docs.fedoraproject.org/en-US/fedora-server/virtualization/vm-management-cockpit/
    ?? 옹? CPU 타입 설정이 가능한가?
  📰➡️ >> Cockpit UI 에서는 생성 불가능하고  
    - virt-install   # 가상 머신 생성 및 시작
      sudo virt install ..
    - libvirt XML 으로 템플릿 정의하고  
      sudo virsh define /path/to/arm-vm.xml
      sudo virsh start arm-vm   # 가상 머신 생성 및 시작
      이러면 cockpit ui 가 인식 간으한듯.

  
  CPU 아키텍처를 ARM으로 변경하려면 libvirt XML을 직접 편집하여 arch='aarch64' 및 emulator='/usr/bin/qemu-system-aarch64' 등의 설정을 추가해야 합니다.


https://github.com/cockpit-project/cockpit-machines


#⚫ Set up QEMU for multi-architecture support
docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
: '
This command sets up QEMU to enable multi-architecture execution on the host system.
  📌 Key behavior:
    - This command modifies 🚣 the host kernel's binfmt_misc settings, not just within the container.
    - Once the setup is complete, the container can exit, and the host system will still support multi-architecture binaries.

  🧩 What is binfmt_misc?
    - `binfmt_misc` is a Linux kernel feature that allows specifying an interpreter for executing binaries based on their file format.
    - Example: When executing an ARM64 binary, the kernel automatically invokes QEMU as the interpreter to run it.

  🔍 How does it work?
    1. When a binary is executed, the kernel reads its header (the first few bytes of the file).
    2. The kernel compares the header to the 🪱 magic numbers registered in binfmt_misc to determine the appropriate interpreter.
    3. If QEMU is registered as the interpreter, the kernel uses QEMU to execute the binary.

  Notes:
    - The `--privileged` option allows the Docker container to modify the host kernel's binfmt_misc settings.
    - This command requires administrative privileges as it directly affects the host system configuration.
'
      
# Create and use a new Buildx builder instance
# docker buildx create --use --name mybuilder
기본 Docker 빌더는 단일 플랫폼(x86 또는 ARM 등)에서만 작동하며, 고급 기능(예: 멀티 플랫폼 빌드, 캐시 관리, 병렬 빌드)을 지원하지 않습니다.
Buildx를 사용하려면 새로운 빌더 인스턴스를 생성하여 활성화해야 합니다.
멀티 플랫폼 빌드 지원

Buildx를 통해 ARM, x86, PowerPC 등의 다양한 플랫폼에서 실행 가능한 이미지를 빌드하려면, 빌더 인스턴스가 필요합니다.
이 빌더 인스턴스는 QEMU 또는 Docker BuildKit과 같은 멀티 플랫폼 빌드를 지원하는 백엔드를 설정합니다.
독립적인 빌더 관리

Buildx 빌더는 서로 독립적으로 동작하므로, 프로젝트마다 별도의 빌더를 설정하고 관리할 수 있습니다.
빌더 인스턴스를 생성하면, 다른 빌더와 충돌 없이 작업을 분리할 수 있습니다.

docker buildx inspect mybuilder --bootstrap
# Verify Buildx installation
docker buildx ls


# Compile Qt 6.8.0 with Docker
git clone https://github.com/PhysicsX/QTonRaspberryPi $HOME/repos/QTonRaspberryPi
cd $HOME/repos/QTonRaspberryPi

# Use multiple Dockerfiles for cross-compRun the command to create rasbian(debian) image.
$ docker buildx build --platform linux/arm64 --load -f DockerFileRasp -t raspimage .
ilation: one for preparing ARM environment, another for building Qt binaries
## DockerFileRasp
#   # If you want to choose 32 bit Rasbian then change this line accordingly. Otherwise compilation will fail
#   # In this file it is 64 bit -> 2024-07-04-raspios-bookworm-arm64.img
#   FROM arm64v8/debian:bookworm




⚫ docker buildx build --platform linux/arm64 --load -f DockerFileRasp -t raspimage .
⚫ docker create --name temp-arm raspimage
⚫ docker cp temp-arm:/build/rasp.tar.gz ./rasp.tar.gz
#  You do not need to extract it. Do not touch it.

# https://youtu.be/5XvQ_fLuBX0?t=932
⚫ docker build -t qtcrossbuild .
위 명령에는 buildx가 사용되지 않았습니다. 이유는 buildx는 QEMU를 사용하며, x86 기반 Ubuntu에서는 QEMU가 필요하지 않기 때문입니다. 빌드는 시간이 조금 걸릴 수 있습니다(16GB RAM에서 테스트했으며, 몇 시간이 걸렸습니다).
# 빌드가 완료되면 오류 없이 이미지가 생성됩니다. 이 이미지 내부의 /build/project 디렉토리에 Raspberry Pi에서 실행할 준비가 된 HelloQt6 바이너리를 찾을 수 있습니다
docker build --no-cache -t qt crossbuild .

⚫ docker create --name tmpbuild qtcrossbuild
⚫ docker ps -a


🪱 Common Microcontroller Software Interface Standard (CMSIS)

sleep 1
docker cp tmpbuild:/build/project/HelloQt6 ./HelloQt6

+---------------------+--------------------------------+
| Application Layer   | 사용자가 작성하는 고수준 로직  |
+---------------------+--------------------------------+
| OS/RTOS             | 운영체제 또는 실시간 운영체제   |
+---------------------+--------------------------------+
| BSP                 | 하드웨어 초기화 및 제어 제공   |
+---------------------+--------------------------------+
| HAL/Drivers         | 하드웨어 추상화 및 드라이버    |
+---------------------+--------------------------------+
| Hardware            | 실제 보드와 장치              |
+---------------------+--------------------------------+



STM32
  ├── Core
  │   ├── Inc                # 프로젝트 공통 헤더
  │   ├── Src                # 프로젝트 공통 소스
  │   └── Startup            # MCU 초기화 코드 (어셈블리)
  ├── Drivers
  │   ├── CMSIS              # Cortex-M CMSIS 관련 코드
  │   └── STM32F4xx_HAL_Driver # HAL 드라이버 (GPIO, UART, I2C 등)

  ├── Debug                  # 빌드 아티팩트 (디버그 빌드)
  └── Middlewares            # RTOS, FATFS 등 상위 계층 기능 (필요 시)

////////////// https://www.youtube.com/watch?v=xQ8PkT8Utfc

WSL 에서 카메라 적용하려면 커스텀 커널 빌드해야 하고 카메라 권한 허용해야 하고, .. 또 ms 가 하라는대로 그거도 해야 함.
  ## Changelog

  - 📅 2024-08-26 21:50:50
    - The settings environment is changed from WSL Ubuntu settings to Windows 11 because WSL2 Ubuntu not supports well USB camera drivers.
      > I have tried building with a custom kernel and followed all the steps for [USB device sharing](https://learn.microsoft.com/en-us/windows/wsl/connect-usb) as recommended by Microsoft. However, I still could not access video devices from OpenCV in WSL2 (/dev/video\* are None).
  - 📅 2024-08-29 00:19:46
    - I decided to re-use WSL2 Ubuntu in home, and use Ubuntu OS (not WSL) in outside.
    - Many C++ tools and libraries seem to be tailored to the unix-lke operating system.
      - Even tools that are known to work on Windows, when applied with custom options, result in many build errors for the libraries, and the work to resolve them is also limited and cumbersome.
      - If you want to use USB Device Camera in Opencv in local, work it outside such as at company.


study 여기 정리 + ppt 정리.


5951 줄 ~ 시작

onlyoffice 도 정리
  🧮 onlyoffice ....
  >>>> https://flathub.org/apps/org.onlyoffice.desktopeditors
  https://helpcenter.onlyoffice.com/installation/desktop-install-ubuntu.aspx  
  📰 libreoffice viewer can not play video... 
    https://en.m.wikipedia.org/wiki/List_of_office_suites
    https://formulae.brew.sh/cask/onlyoffice

    https://helpcenter.onlyoffice.com/installation.aspx

    https://ubuntu.com/tutorials/how-to-install-onlyoffice-server-on-ubuntu#2-installation
    ?? sudo snap install onlyoffice-ds 으로 설치하면


Linux Standard Base (LSB) ; https://refspecs.linuxbase.org/
                            https://refspecs.linuxfoundation.org/
                            https://wiki.linuxfoundation.org/lsb/start

인터뷰 준비:
  lsb_release -a 🆚  uname -a
    lsb_release는 배포판 정보를 출력하며, 주로 배포판 이름, 버전, 코드네임 등을 확인하는 데 사용됩니다.
    uname은 커널과 하드웨어 정보를 확인하며, OS 커널 수준의 정보를 제공합니다.

  Pluggable Authentication Module (PAM) ; https://en.wikipedia.org/wiki/Pluggable_Authentication_Module
    PAM은 인증에 의존하는 프로그램들이 내부 인증 방식과 분리되어 독립적으로 작성될 수 있도록 하는 메커니즘.
  freedesktop.org (fd.o), formerly X Desktop Group (XDG) ; https://en.wikipedia.org/wiki/Freedesktop.org

$XDG_SESSION_TYPE 공식 문서 찾기
  XDG는 **"X Desktop Group"**의 약자입니다. 이 그룹은 나중에 freedesktop.org로 이름이 변경되었으며
  , Linux 및 Unix 기반 시스템에서 데스크톱 환경과 관련된 표준을 정의하고 개발하는 역할을 담당합니다.

  freedesktop.org(fd.o), 이전의 X Desktop Group(XDG)은 Linux 및 기타 Unix 계열 운영 체제의 X Window System(X11) 및 Wayland를 위한
  , 자유 소프트웨어 데스크톱 환경에 대한 상호 운용성 및 공유 기반 기술을 개발하기 위한 프로젝트입니다.

    🚣 X11과 Wayland는 디스플레이 서버 프로토콜로, 운영 체제와 데스크톱 환경 간의 그래픽 출력 및 입력을 중재합니다.

    상호 운용성(interoperability)이란?
      상호 운용성은 서로 다른 시스템, 소프트웨어, 또는 환경이 함께 잘 작동하도록 만드는 것을 의미합니다.
      Linux 생태계에는 다양한 데스크톱 환경(예: GNOME, KDE, XFCE 등)과 여러 배포판이 존재합니다.
    예시
      MIME 타입 처리:
        GNOME이나 KDE 같은 데스크톱 환경이 서로 다른 방식으로 파일 타입을 처리한다면, 동일한 파일이 각 환경에서 다르게 동작할 수 있습니다.
        freedesktop.org는 XDG MIME Applications Specification이라는 표준을 정의하여 모든 환경이 파일 타입을 동일하게 처리하도록 했습니다.
        애플리케이션 실행:

      .desktop 파일(애플리케이션 실행 파일)을 정의한 표준을 제공하여, GNOME이든 KDE든 동일한 방식으로 애플리케이션을 실행할 수 있도록 했습니다.

  2. 공유 기반 기술(shared base technology)이란?
    공유 기반 기술은 여러 시스템이 공통적으로 사용하는 기본적인 기술을 의미합니다.
    이는 중복 개발을 피하고 효율적으로 시스템을 설계하기 위한 기반 기술을 말합니다.
    예시:
    XDG Base Directory Specification:
      하나의 경로 규칙(~/.config, ~/.local/share)을 모두 따름.
        설정 파일 경로에 대한 하나의 규칙을 모두가 공유합니다.

    모든 데스크톱 환경이 공통적으로 설정 파일이나 데이터 파일의 경로를 관리하도록 규정.
      예: $XDG_CONFIG_HOME은 기본적으로 ~/.config를 사용.
      결과: GNOME과 KDE가 동일한 경로에서 설정 파일을 읽고, 사용자 경험이 일관성 있게 유지됨.
  D-Bus:
    하나의 메시지 버스 시스템을 GNOME, KDE, XFCE 등에서 함께 사용.
      하나의 메시지 버스를 모든 데스크톱 환경이 공유합니다. 각 환경이 독립적인 메시지 시스템을 구현하지 않습니다.

    애플리케이션 간의 메시징을 담당하는 기술.
    freedesktop.org가 설계하여 GNOME, KDE, 그리고 다른 데스크톱 환경에서 모두 사용.

  >> 단 ❓
    네트워크 투명성:	원격 클라이언트 지원 (예: X Forwarding)	      기본적으로 지원하지 않음 (네트워크 프로토콜이 아님)
      으로, 그래픽을 원격에서 띄우기 위해서는 x11을 써야 한다.

uart gpio 다양한 기능을 제공하는 선풍기 제공. 데이터시트 

in Rsapberry pi
  sudo apt install x11-apps
  이거 같은 리눅스 운영   체제끼리는 그냥 ssh -XY 로 접속하면  자동으로 DISPLAY 가 설정이 되가지고 뭐 따로 설정 안해줘도 xeyes 같은거 하면 자동으로 내 호스트 환경에 보이네

lsblk
  sudo raspi-config
Advanced Options > Expand Filesystem

// https://youtu.be/xQ8PkT8Utfc?t=1173

//? 화면 문제인가?..  빌드가 되도 helloqt 가 없고, 압축파일도 깨져있던데.. 
  Settings - System - Power Management
    - Suspend Session
      - After a period of inactivity: ✔️ Do nothing
    - Display and Brightness
      - Turn off screen: ✔️ Never

synergy-hub-large-archives



DockerFileRasp 라는 파일에서 
"FROM " 으로 시작하는 줄을 찾아서
FROM arm32v7/debian:bookworm
으로 바꾸는 fish script)
#!/usr/bin/env fish

# File path to Dockerfile
set dockerfile_path "DockerFileRasp"

# Check if the file exists
if test -f $dockerfile_path
    # Replace the line starting with 'FROM' with the new content
    sed -i 's/^FROM .*/FROM arm32v7\/debian:bookworm/' $dockerfile_path
    echo "Updated 'FROM' line in $dockerfile_path"
else
    echo "Error: File $dockerfile_path does not exist"
end


FROM arm64v8/debian:bookworm

📝 
  docker prune 명령은 Docker 데몬의 상태를 초기화하거나 불필요한 데이터를 삭제하기 때문에, 이전에 설정했던 QEMU의 멀티아키텍처 지원 설정이 사라질 수 있습니다.

  docker run --rm --privileged multiarch/qemu-user-static --reset -p yes 명령은 QEMU를 Docker 데몬에 임시로 등록하는 방식으로 동작합니다. 그러나 docker system prune 또는 docker builder prune 같은 명령을 실행하면, 다음과 같은 이유로 설정이 초기화됩니다:

  QEMU 바이너리가 삭제됨:

  QEMU 설정은 Docker 내부의 binfmt 등록으로 이루어집니다. docker prune 시 관련 컨테이너와 설정이 제거됩니다.
  빌더 재설정:

  docker buildx 빌더가 다시 초기화되면서 QEMU를 사용하는 플랫폼 지원이 해제될 수 있습니다.

  // ❗ 그리고 docker build 중 빌드가 끝나기 전까지 오류를 알 수 없으므로..... 그냥 처음에 무조건 실행하자.

🧮  Common
  // pwd: $HOME/repos/QTonRaspberryPi
  // docker image rm qtcrossbuild:latest
  git clone https://github.com/PhysicsX/QTonRaspberryPi
  🧮 if 64bit (user-space. when install Raspbery Pi OS)
    docker run --rm --privileged multiarch/qemu-user-static --reset -p yes && \
    docker buildx inspect --bootstrap | grep linux/arm64 && \
    docker buildx build --platform linux/arm64 --no-cache --load -f DockerFileRasp -t raspimage . && \
    docker create --name temp-arm raspimage && \
    docker cp temp-arm:/build/rasp.tar.gz ./rasp.tar.gz && \
    docker build --no-cache -t qtcrossbuild . && \
    docker create --name tmpbuild qtcrossbuild && \
    docker cp tmpbuild:/build/project/HelloQt6 ./qt6.8.0-arm64v8-bookworm-app-Hello && \
    file qt6.8.0-arm64v8-bookworm-app-Hello && \
    docker cp tmpbuild:/build/qt-pi-binaries.tar.gz ./qt6.8.0-arm64v8-bookworm-dev_env.tar.gz

    cp ./qt-pi-binaries.tar.gz ./qt6.8.0-arm64v8-bookworm-app-Hello /nfs/ && \
    ssh r-pi.local '
    export qt6_dir=/usr/local/qt6
    echo "Installing in $qt6_dir ..."

    sudo mkdir -p $qt6_dir
    sudo chown $USER:$USER $qt6_dir
    sudo chmod 700 $qt6_dir 
    tar -xvf /mnt/host/qt-pi-binaries.tar.gz -C $qt6_dir
    '
  🧮 if 32bit (user-space. when install Raspbery Pi OS)
    set qt_dev_env_archive_file_name qt6.8.0-arm32v7-bookworm-dev_env.tar.gz
    set qt_app_hello_file_name qt6.8.0-arm32v7-bookworm-app-Hello
          
    # ⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️ Required !!
    docker run --rm --privileged multiarch/qemu-user-static --reset -p yes && \
    docker buildx inspect --bootstrap |   grep linux/arm/v7 && \

    docker buildx build --platform linux/arm/v7 --no-cache --load -f DockerFileRasp -t raspimage . && \
    docker create --name temp-arm raspimage && \
    docker cp temp-arm:/build/rasp.tar.gz ./rasp.tar.gz && \


    # ⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️⚠️ Required !!
    docker run --rm --privileged multiarch/qemu-user-static --reset -p yes && \
    docker buildx inspect --bootstrap |   grep linux/arm/v7 && \
    docker build --no-cache -t qtcrossbuild . && \
    docker create --name tmpbuild qtcrossbuild && \
    docker cp tmpbuild:/build/project/HelloQt6 ./$qt_app_hello_file_name && \
    file $qt_app_hello_file_name && \
    docker cp tmpbuild:/build/qt-pi-binaries.tar.gz ./$qt_dev_env_archive_file_name
    >>
      d200efa5f0021a0c46ceb1678cb81141443a7b08027cf47f  7e94c312cbfed488
      Successfully copied 13.3kB to $HOME/repos/QTonRaspberryPi/$qt_app_hello_file_name
      $qt_app_hello_file_name: ELF 32-bit LSB pie executable, ARM, EABI5 version 1 (GNU/Linux), dynamically linked, interpreter /lib/ld-linux-armhf.so.3, BuildID[sha1]=d948607b3fda22c46458a563390e933807949d75, for GNU/Linux 3.2.0, not stripped
      Successfully copied 40MB to $HOME/repos/QTonRaspberryPi/$qt_dev_env_archive_file_name
    ls -la
    >>
      .rwxr-xr-x $USER $USER  11 KB Thu Jan  2 20:58:52 2025  $qt_app_hello_file_name
      .rw-r--r-- $USER $USER  38 MB Thu Jan  2 20:58:50 2025  $qt_dev_env_archive_file_name


    cp ./$qt_dev_env_archive_file_name ./$qt_app_hello_file_name /nfs/
    ssh r-pi.local '
    export qt6_dir=/usr/local/qt6
    qt_dev_env_archive_file_name=qt6.8.0-arm32v7-bookworm-dev_env.tar.gz
    echo "Installing in $qt6_dir ..."

    sudo mkdir -p $qt6_dir && \ 
    sudo chown $USER:$USER $qt6_dir && \
    sudo chmod 700 $qt6_dir && \ 
    tar -xvf /mnt/host/$qt_dev_env_archive_file_name -C $qt6_dir
    '

    ssh r-pi.local '
    export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/qt6/lib/
    /mnt/host/qt6.8.0-arm32v7-bookworm-app-Hello
    '
    >> 
      Hello world 4
    # set -gx LD_LIBRARY_PATH "$LD_LIBRARY_PATH":/usr/local/qt6/lib/


    📅 2025-01-03 06:30:30
      set qt_platforms_dir $HOME/qt-platforms
      mkdir -p $qt_platforms_dir

      set qt_platform_dir_name (string replace -- "-dev_env.tar.gz" "" $qt_dev_env_archive_file_name)
      set qt_platform_dir $qt_platforms_dir/$qt_platform_dir_name
      mkdir -p $qt_platform_dir
      tar -xvf ./$qt_dev_env_archive_file_name -C $qt_platform_dir
      
      echo $qt_platform_dir
        >> $HOME/qt-platforms/qt6.8.0-arm32v7-bookworm

➡️➡️➡️➡️
  >CMake: Select Configure Preset
qt6.8.0-arm32v7-bookworm


 1 warning found (use docker --debug to expand):
 - InvalidBaseImagePlatform: Base image arm32v7/debian:bookworm was pulled with platform "linux/arm/v7", expected "linux/arm64" for current build (line 4)
WARNING: The requested image's platform (linux/arm64) does not match the detected host platform (linux/amd64/v4) and no specific platform was requested
0821d28262843d0b2637d774df4b7cdc9f5ef3e8e4496bb6fe97fc73eb0d3967
Successfully copied 308MB to /home/wbfw109v2/repos/QTonRaspberryPi/rasp.tar.gz
[+] Building 465.0s (13/19)            

: '
docker cp tmpbuild:/build/project/HelloQt6 ./HelloQt6
  >> Successfully copied 76.8kB to /home/wbfw109v2/repos/QTonRaspberryPi/HelloQt6
file HelloQt6
  >> HelloQt6: ELF 64-bit LSB pie executable, ARM aarch64, version 1 (GNU/Linux), dynamically linked, interpreter /lib/ld-linux-aarch64.so.1, BuildID[sha1]=cba75cb32445aa53c148906e033dc3c982beb314, for GNU/Linux 3.7.0, not stripped
docker cp tmpbuild:/build/qt-pi-binaries.tar.gz ./qt-pi-binaries.tar.gz
  >> Successfully copied 44.5MB to $HOME/repos/QTonRaspberryPi/qt-pi-binaries.tar.gz
'


set -gx LD_LIBRARY_PATH
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/qt6/lib/
pi@pi19:/mnt/host $ ./qt6.8.0-arm32v7-bookworm-app-Hello
Hello world 4
pi@pi19:/mnt/host $ echo $LD_LIBRARY_PATH 
:/usr/local/qt6/lib/




❓ Fish shell colon.. 
  exported variable has colon substituted in script ; https://github.com/fish-shell/fish-shell/issues/1374

    Yeah, there's this annoying code "variable_can_be_array" that tries to determine whether colons mean array separators. I don't have any good ideas here.








ldd ./HelloQt6


## rm -rf QTonRaspberryPi and use "--no-cache" when 빌드가 되도 helloqt 가 없고, 압축파일도 깨져있던데..... (파일 크기가 매우 작음. 바이트 수준. 그것으로 확인 가능) when use "docker build --no-cache -t qtcrossbuild ."


sudo apt install xsel
cat /boot/firmware/config.txt | xsel --clipboard --input

export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/qt6/lib/

set -gx LD_LIBRARY_PATH $LD_LIBRARY_PATH:/usr/local/qt6/lib/

set -gx LD_LIBRARY_PATH /usr/local/qt6/lib/

fish shell 문제?
  synergy-hub on  main [!?] is 📦 v0.1.0 via 🐍 v3.13.1 
  ❯ set -gx asdf $asdf:/bcdefg

  synergy-hub on  main [!?] is 📦 v0.1.0 via 🐍 v3.13.1 
  ❯ echi $^C

  synergy-hub on  main [!?] is 📦 v0.1.0 via 🐍 v3.13.1 
  ❯ echo $asdf

🚨
  pi@pi19 /m/host> ./HelloQt6
  exec: Failed to execute process './HelloQt6': The file exists and is executable. Check the interpreter or linker?


  ls -l /lib/ld-linux-aarch64.so.1
  pi@pi19 /m/host> readelf -l HelloQt6 | grep interpreter

      [Requesting program interpreter: /lib/ld-linux-aarch64.so.1]
  pi@pi19 /m/host> ll /lib/ld-linux-aarch64.so.1
  ls: cannot access '/lib/ld-linux-aarch64.so.1': No such file or directory
  pi@pi19 /m/host [2]> ls -l /lib/ld-linux-aarch64.so.1

  ls: cannot access '/lib/ld-linux-aarch64.so.1': No such file or directory
  ❗ 필요한 의존성 확인!!  readelf -l HelloQt6 | grep interpreter
  ❗ 필요한 의존성 확인!! readelf -d ./HelloQt6 | grep NEEDED

  # 실행 파일이 필요로 하는 공유 라이브러리(Shared Libraries) 목록을 확인합니다.
  readelf -d HelloQt6 | grep NEEDED
  # 실행 파일이 사용하는 프로그램 인터프리터를 확인합니다.
  readelf -l HelloQt6 | grep interpreter

  [Requesting program interpreter: /lib/ld-linux-aarch64.so.1]
    sudo apt install -y libc6

📅 2025-01-01 20:34:38

in Ubuntu
  apt-cache show libc6 | grep Priority: 
  Priority: required
in Raspberry Pi 
  apt-cache show libc6 | grep Priority
  >>
    Priority: optional
    Priority: optional

/home/wbfw109v2/repos/QTonRaspberryPi/DockerFileRasp

# Stage 1: Setting up the environment and copying necessary files from Raspberry Pi OS
# If you want to choose 32 bit Rasbian then change this line accordingly. Otherwise compilation will fail
# In this file it is 64 bit -> 2024-07-04-raspios-bookworm-arm64.img
FROM arm64v8/debian:bookworm

https://hub.docker.com/r/arm32v7/debian/
FROM arm32v7/debian:bookworm


ldconfig -p | grep libQt6Core.so.6
ldconfig -p | grep libc.so.6
ldconfig -p | grep libgcc_s.so.1
ldconfig -p | grep libc.so.6

ls -l /usr/local/qt6/lib/libQt6Core.so.6
lrwxrwxrwx 1 pi pi 19 Jan  1 18:35 /usr/local/qt6/lib/libQt6Core.so.6 -> libQt6Core.so.6.8.0


sudo apt install libc6-arm64

❓ 
  pi@pi19 ~> grep arm_64bit /boot/firmware/config.txt

  arm_64bit=1
  pi@pi19 ~> file /bin/bash

  /bin/bash: ELF 32-bit LSB executable, ARM, EABI5 version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux-armhf.so.3, BuildID[sha1]=12abba9f431c0bef9f0a2a47f29cc9175159347f, for GNU/Linux 3.2.0, stripped

?머여? 32비트야 64비트야?;;
dpkg --print-architecture

armhf
  >> 

  출력이 armhf이면 32비트 운영 체제입니다.
    ❗ arm_64bit=1 설정은 커널 아키텍처만 64비트로 전환하며, 사용자 공간의 아키텍처는 변경되지 않습니다.
  출력이 arm64이면 64비트 운영 체제입니다.


❗ 즉, 현재 라즈베리파이는 64비트 커널과 32비트 사용자 공간을 함께 사용하는 멀티아키(Multi-Arch) 상태입니다. 이는 라즈베리파이 OS에서 기본적으로 제공하는 기능으로, 호환성과 성능을 모두 고려한 설정입니다.
  사용자 공간이 32비트 인건.. 못바꾸는거지? 처음 OS 설치할 때 제외하고?
  ChatGPT의 말:
  ChatGPT
  네, 라즈베리파이에서 사용자 공간 아키텍처(32비트 ↔ 64비트)는 운영 체제(OS) 설치 시 결정되며, 설치 후에는 변경할 수 없습니다.

  즉, 사용자 공간을 32비트에서 64비트로 전환하거나, 64비트에서 32비트로 전환하려면 새로운 OS 이미지를 설치해야 합니다.

🧮 사용자 공간 아키텍처 확인
  dpkg --print-architecture


cat /etc/os-release | grep VERSION
  VERSION_ID="12"
  VERSION="12 (bookworm)"
  VERSION_CODENAME=bookworm


  2. Docker 명령어 팁
컨테이너가 종료된 상태에서 터미널을 열어 접근하기
컨테이너가 종료되었더라도 터미널로 접근하려면 아래 명령어를 사용할 수 있습니다:

bash
Copy code
docker run -it --entrypoint fish <image_name>
이 명령어는 컨테이너를 즉시 실행하고 종료되지 않도록 유지합니다.

이미 실행된 컨테이너에 접속
이미 종료된 컨테이너에 접근하려면 다음을 사용합니다:

bash
Copy code
docker start -ai <container_id>

scoop install extras/potplayer





이렇게 하니까 명확히 이해되네. 사용자가 만든 외부 모듈이라고 보니까. peripheral 이란 이름은 하드웨어 레지스터 이름같아서 명확하지 않아보여서 부적절하고. HAL 이 아니라 HAL 로 하기에도 부적절하고.
근데 그러면 실제로 임베디드 시니어 개발자들은 저 외부 모듈을 어떻게 구조화시켜?
그냥 modules 이라고 하니까 어색한데


peripherals:
  외부 장치를 뜻하지만, MCU의 Peripheral 레지스터와 혼동될 가능성이 있음.
  MCU 내부 레지스터 및 기능과의 혼동을 피하기 위해

  맞습니다! peripheral이라는 용어는 임베디드 시스템 전반에서, 특히 **MCU 내부의 기능(GPIO, UART, SPI 등)**과 혼동될 가능성이 매우 높기 때문에, AVR뿐만 아니라 라즈베리파이와 같은 ARM 기반 플랫폼에서도 사용하는 것을 피하는 것이 합리적입니다.

in Wiktionary

https://en.wiktionary.org/wiki/device
Noun
> device (plural devices)
(computer hardware) A peripheral device; an item of hardware.

https://en.wiktionary.org/wiki/peripheral_device#English
Noun
> peripheral device (plural peripheral devices)
  (computer hardware) An electronic device that is outside the computer's system unit (external to the computer's enclosing case), but used by the computer to which it is connected, such as a printer or a scanner.




CMSIS (Core/Drivers/CMSIS):

MCU와 CPU 코어 레벨 관련 코드.
예: 인터럽트 핸들러, 레지스터 접근.
HAL (Drivers/STM32F4xx_HAL_Driver):

GPIO, Timer, UART 등 MCU 주변 장치의 기본 드라이버.
예: HAL_GPIO_Init(), HAL_UART_Transmit().
STM32의 HAL은 MCU 내부 주변 장치(GPIO, Timer, UART, I2C, SPI등)를 초기화하고 제어하는 기본 드라이버 계층입니다. 여기서 **"MCU 주변 장치"**는 보드 전체가 아니라, MCU 칩 자체에 내장된 하드웨어 기능을 의미합니다.

HAL에서 **"MCU 주변 장치"**란 MCU 칩 내에 포함된 하드웨어 모듈(GPIO, Timer, UART 등)을 의미하며, 보드 전체를 지칭하지 않습니다.


QTonRaspberryPi on  main [!?] took 3h12m9s 
  

  AioTclient prefix

Qt
  attribute: pixmap


https://github.com/settings/appearance
  High contrast

mp4 to gif with resize
<-- https://ezgif.com/video-to-gif --> 
  540px x AUTO
  Frame Rate: 10 FPS
  Optimize for static background (assign more colors to moving parts of the image)




/*
전략 패턴 (Strategy Pattern): 객체의 행위를 캡슐화하고, 런타임에 다양한 행위를 바꿀 수 있도록 함.
의존성 주입 (Dependency Injection): 객체의 의존성을 외부에서 주입하여 결합도를 낮추고, 유연성과 테스트 용이성을 높임.
*/    

TODO: fanProject.tar backup to Onedrive, google, mega...

커널 빌드 과정에서 사용되는 kconfig(커널 구성 도구) 스크립트는 flex를 사용해 스캐너 코드를 생성합니다. 

이 스캐너는 Makefile이나 설정 파일에서 특정 패턴을 인식하고 처리하는 데 사용됩니다.


엘프프로페셔널
리눅스 커널 드라이버 개발/
Prerequsites
  
  ##  fish script
  ```
  # in order to kernel make works well?
  # flex: 입력 데이터를 토큰으로 나누는 역할(예: 숫자, 키워드, 연산자).
  # bison: flex가 생성 한 토큰을 받아 문법에 따라 구문 트리를 만드는 역할.
  # arm-linux-gnueabihf: ...
  sudo apt install -y flex bison \
    gcc-arm-linux-gnueabihf

  mkdir -p $HOME/repos/kernels && cd $HOME/repos/kernels && \
  git clone https://github.com/raspberrypi/linux raspberry-pi && \



  # get default .config
  make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- bcm2711_defconfig
  # ...
  make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- modules
```

#!/usr/bin/env fish

## Description:
# This script sets up the necessary environment and tools for Linux kernel driver development and builds the Raspberry Pi kernel.

## Install required packages
# - flex: Splits input data into tokens (e.g., numbers, keywords, operators).
# - bison: Processes tokens generated by flex and creates a parse tree based on grammar.
# - gcc-arm-linux-gnueabihf: ARM cross-compiler for building ARM binaries.
echo "Installing required tools..."
sudo apt update && sudo apt install -y flex bison gcc-arm-linux-gnueabihf

## Create directories for kernel sources
echo "Setting up kernel repositories..."
mkdir -p $HOME/repos/kernels
cd $HOME/repos/kernels

# Clone Raspberry Pi kernel source repository
if not test -d raspberry-pi
    git clone https://github.com/raspberrypi/linux raspberry-pi
else
    echo "Kernel repository already exists, skipping clone."
end

# Navigate to the kernel source directory
cd raspberry-pi

# Get the default kernel configuration for Raspberry Pi 4
echo "Setting up default kernel configuration..."
make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- bcm2711_defconfig

# 커널 부터 빌드해야 한다. 그렇지 않으면 이 소스로부터 빌드한 커널버전과 맞지 않아서 작동하지 않음. 마이너 버전 포함..
#  uname -r
#     >> 6.6.62+rpt-rpi-v7l
#  cat ~/repos/kernels/raspberry_pi/include/generated/utsrelease.h
#     #define UTS_RELEASE "6.6.69-v7l+"

# Build the kernel image
make -j (nproc) ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- zImage
# Copy the built kernel image
mkdir -p /nfs/kernels/pi/
cp arch/arm/boot/zImage /nfs/kernels/pi/kernel7l.img
# Deploy kernel to Raspberry Pi
ssh r-pi.local "sudo cp /mnt/host/kernels/pi/kernel7l.img /boot/firmware/kernel7l.img"

# Build the kernel modules
echo "Building kernel modules..."
make -j (nproc) ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- modules

# Output success message
echo "Kernel setup and module build complete!"


영상 찍는거 시나리오 생각.
❗ 관계대명사(relative pronoun)는 본질적으로 대명사이기 때문에, 일반적인 명사처럼 전치사의 목적어로 사용될 수 있습니다.
  즉, 문장에서 전치사 + 관계대명사(which, whom 등)의 형태로 쓰일 수 있는 이유는 which 자체가 명사 역할을 하기 때문이에요.

메모리 업데이트됨
빠르게 동작을 시연하는 영상 시나리오는 다음과 같이 구성할 수 있습니다:

  "LED 제어 커널 드라이버 동작 시연

  kernel_timer_app  
    sudo mknod /dev/ledKey_dev c 230 0
    sudo chmod 666 /dev/ledKey_dev

    sudo insmod /mnt/host/drivers/kernel_timer_dev.ko
    
    /mnt/host/drivers/kernel_timer_app 0x55 100


    버튼 2:
      50 (속도 빠르게 변경)
    버튼 1: 정지
    버튼 4: 다시 시작
    키보드 입력: stop

    sudo rmmod kernel_timer_dev




❓ Conan issues
  Can confirm this issue. I got it to work when I changed the line

  conan-center-index/recipes/pulseaudio/all/conanfile.py

  Line 117 in c2c5964

  if self.settings.compiler == "clang" and self.settings.compiler.version == 15: 



영상을 직자 .


https://www.saramin.co.kr/zf_user/jobs/relay/view?isMypage=no&rec_idx=49414507&recommend_ids=eJxNj7ERA0EIA6txDkggiF2I%2B%2B%2FCfv%2FMc%2BGOFgEcCsX4tNdLb06FA%2FMgYOHa1DiTP%2FQbndabZhO0lWmCH1WZumbtlgPppyySi%2FIJW7lQdWH8kUjL3r3ThW0usnQc%2BWv2emR6MvlUJUaxKdTKOR9UX2l8AYYxQJo%3D&view_type=search&searchword=bsp+%EA%B0%9C%EB%B0%9C%EC%9E%90&searchType=search&gz=1&t_ref_scnid=816&t_ref_content=SRI_050_SCH_CVS_RCT_AVA&t_ref=search&inner_source=saramin&inner_medium=pattern&inner_campaign=SRI_050_SCH_CVS_RCT_AVA&inner_term=2&referNonce=6b3d9f8137177908ab91&relayNonce=b5e37e3d8f7c3ac9a654&paid_fl=n&immediately_apply_layer_open=n#seq=0  





?cmake 가 없나?.. 이게 패키지들이 path 가 아니라 절대경로를 참조하는게 있나봄.. 설치하자 무조건..
  cmake....
  sudo apt install cmake



Compile qtbase for host
CMake Warning:
  No source or binary directory provided.  Both will be assumed to be the
  same as the current working directory, but note that this warning will
  become a fatal error in future CMake releases.  


ssh pi19@pi.local

Dockerfile
    gcc-12-aarch64-linux-gnu \
    g++-12-aarch64-linux-gnu \
    binutils-aarch64-linux-gnu \
    libc6-arm64-cross \
    libc6-dev-arm64-cross \
    ➡️
    gcc-arm-linux-gnueabihf \
    g++-arm-linux-gnueabihf \
    binutils-arm-linux-gnueabihf \
    libc6-armhf-cross \     
    libc6-dev-armhf-cross \

toolchain.cmake
  # Set the C and C++ compilers
  set(TARGET_ARCHITECTURE aarch64-linux-gnu)
  set(CMAKE_C_COMPILER /usr/bin/${TARGET_ARCHITECTURE}-gcc-12)
  set(CMAKE_CXX_COMPILER /usr/bin/${TARGET_ARCHITECTURE}-g++-12)
  ➡️ 
  set(TARGET_ARCHITECTURE arm-linux-gnueabihf)
  set(CMAKE_C_COMPILER /usr/bin/${TARGET_ARCHITECTURE}-gcc)
  set(CMAKE_CXX_COMPILER /usr/bin/${TARGET_ARCHITECTURE}-g++)

DockerfileRasp
  FROM arm64v8/debian:bookworm
  libc6-arm64-cross
  ➡️ 
  FROM arm32v7/debian:bookworm
  libc6-armhf-cross

build command:
   docker buildx build --platform linux/arm64 --load -f DockerFileRasp -t raspimage .
  ➡️ 
   docker buildx build --platform linux/arm/v7 --load -f DockerFileRasp -t raspimage .



📅 2025-01-03 07:18:21
#### For 32bit cross compile c/c++ programs? 
# package set!!! for develeopment

gcc-arm-linux-gnueabihf \
g++-arm-linux-gnueabihf \

binutils-arm-linux-gnueabihf \
libc6-armhf-cross \
libc6-dev-armhf-cross \


iot_client

❓ LD_LIBRARY_PATH 




TODO: fanProject.tar
  다시 클라우드 드라이브에 추가.


cat ~/repos/kernels/raspberry_pi/include/generated/utsrelease.h
  #define UTS_RELEASE "6.6.69-v7l+


in raspberry pi
  sudo apt-get install -y cmake libjpeg9-dev gcc g++
  ❯ apt-cache show libjpeg9-dev

  git clone https://github.com/jacksonliam/mjpg-streamer
  cd mjpg-streamer/mjpg-streamer-experimental
  make
  sudo make install

  ./start.sh

  #   curl http://10.10.14.59:8080/
  # 10.10.14.59:8080/?action=stream

  # wget 10.10.14.59:8080/?action=snapshot
  # eog 

View2_1 = QWebEngineView(this);
View2_1->load(QUrl(QStringLiteral("...naver.com.."))  


sudo apt-get install libegl1-mesa-dev libgles2-mesa-dev


perl init-repository --module-subset=qtbase,qttools

!!!!!!!!! qt6.8.0-sdk 설치햇어야햇ㅇㅁ  


perl init-repository --module-subset=qtbase,qttools

➡️ 다시..
  호스트
  ===========
  mkdir -p ~/qt-host ~/qt-raspi 
  mkdir -p $HOME/rpi-sysroot/usr $HOME/rpi-sysroot/opt \
    $HOME/rpi-sysroot/lib $HOME/rpi-sysroot/usr/include $HOME/rpi-sysroot/usr/lib $HOME/rpi-sysroot/opt/vc
  mkdir -p $HOME/qt-hostbuild $HOME/qtpi-build

  # install qt dependencies
  sudo apt install -y  make cmake build-essential libclang-dev clang ninja-build gcc git bison python3 gperf pkg-config libfontconfig1-dev libfreetype6-dev libx11-dev libx11-xcb-dev libxext-dev libxfixes-dev libxi-dev libxrender-dev libxcb1-dev libxcb-glx0-dev libxcb-keysyms1-dev libxcb-image0-dev libxcb-shm0-dev libxcb-icccm4-dev libxcb-sync-dev libxcb-xfixes0-dev libxcb-shape0-dev libxcb-randr0-dev libxcb-render-util0-dev libxcb-util-dev libxcb-xinerama0-dev libxcb-xkb-dev libxkbcommon-dev libxkbcommon-x11-dev libatspi2.0-dev libgl1-mesa-dev libglu1-mesa-dev freeglut3-dev
  # install cross compiler
  sudo apt install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
  

  # WARNING: QtWebEngine won't be built. Build requires nss >= 3.26.
  sudo apt install libnss3-1d-dev


  # WARNING: No backend for low level audio found.
  sudo apt install libjack-dev
  # WARNING: No media backend found
  sudo apt install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev

  # WARNING: SensorFW support currently not enabled with cmake

  설치 후 rm -fr qt-hostbuild.. 를 하고 다시 해야 확인가능.

  # gen/third_party/libevent/event.h:5:10: fatal error: event.h: No such file or directory
  sudo apt install libevent-dev
  


    -- Configuring submodule 'qtwebengine'
    Traceback (most recent call last):
      File "<string>", line 1, in <module>
        import html5lib 
    ModuleNotFoundError: No module named 'html5lib'
    [QtWebEngine] -- Checking 'ulimit -n'
    [QtWebEngine]  -- Open files limit 1073741816
    [QtWebEngine] -- Support check for QtWebEngine failed: Python3 html5lib is missing.
    [QtWebEngine] -- Support check for QtPdf failed: Python3 html5lib is missing.
    -- Configuring submodule 'qtdoc'
    -- Configuring submodule 'qtgrpc'


    # https://en.wikipedia.org/wiki/Qt_(software)
    #   https://github.com/qt
    cd $HOME  
    # mirror of https://github.com/qt/qt5
    # git clone "https://codereview.qt-project.org/qt/qt5"
      git clone https://github.com/qt/qt5
      cd qt5/
      
      https://github.com/qt/qt5
      # 6.8.0 https://github.com/qt/qt5/tree/6.8.0
      git checkout 6.8.1
      perl init-repository -f 
      cd $HOME/qt-hostbuild/
      
      
      # pkg-config --libs icu-uc icu-i18n
      #   >> -licui18n -L/usr/lib/x86_64-linux-gnu -licuuc -licudata
      # find /usr -name "nss.pc"
      export PKG_CONFIG_PATH="/usr/lib/x86_64-linux-gnu/pkgconfig:$PKG_CONFIG_PATH"
      export LDFLAGS="-L/usr/lib/x86_64-linux-gnu"
      export CXXFLAGS="-I/usr/include"

      # export PKG_CONFIG_PATH="/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH"
      # export LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH
      # pkg-config --libs nss

      cmake ../qt5/ -GNinja -DCMAKE_BUILD_TYPE=Release -DQT_BUILD_EXAMPLES=OFF -DQT_BUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=$HOME/qt-host
      # cmake --build . --target moc --parallel 8
      cmake --build . --parallel 8
      cmake --install .


    # WARNING: QtWebEngine won't be built. Could not find all necessary libraries for qpa-xcb support. X11:YES LIBDRM:YES XCOMPOSITE:YES XCURSOR:NO XRANDR:YES XI:YES XPROTO:YES XSHMFENCE:YES XTST:YES
    # Install missing dependencies for X11 support:

    sudo apt-get install libx11-dev libxcursor-dev libxrandr-dev libxcomposite-dev libxext-dev libxdamage-dev libxi-dev


    rm -fr ~/qt5 ~/qt-hostbuild ~/qt-host
    mkdir -p ~/qt5 ~/qt-hostbuild ~/qt-host

    cd $HOME
    git clone "https://codereview.qt-project.org/qt/qt5"
    cd qt5/
    git checkout 6.8.1
    perl init-repository -f

    cd ..
    mkdir $HOME/qt-hostbuild
    cd $HOME/qt-hostbuild/

    cmake -GNinja ../qt5/ -DCMAKE_BUILD_TYPE=Release -DQT_BUILD_EXAMPLES=OFF -DQT_BUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=$HOME/qt-host
    


    cmake --build . --parallel 8
    cmake --install .



      cmake --build . --parallel 8

      [2/12697] Linking CXX shared library qtbase/lib/libQt6Core.so.6.8.1
      FAILED: qtbase/lib/libQt6Core.so.6.8.1 
      // .. 안됨.. ❌ 절대 직접 빌드 xx.. 하.. 따라햇는데  
        # https://wiki.qt.io/Cross-Compile_Qt_6_for_Raspberry_Pi

  # Sysroot 동기화
  # rsync
  #   -a: Archive mode, which ensures the synchronization retains file permissions, timestamps, symbolic links, etc.
  #   -v: Verbose output, providing detailed information about the synchronization process.
  #   -z: Compress data during transfer to reduce network usage and increase speed.
  #   -S: Handle sparse files efficiently to save space and improve performance during synchronization.
  #   --rsync-path="rsync": Specify the command to run on the remote system; in this case, it's the standard `rsync`.
  #   --delete: Remove files from the destination that no longer exist in the source, ensuring exact mirroring.
  ## ❕ Rqeuires sudo in raspberry pi
  set raspberry_pi_ip 10.10.14.59
  rsync -avzS --rsync-path="sudo rsync" --delete pi@$raspberry_pi_ip:/lib/ ~/rpi-sysroot/lib/
  rsync -avzS --rsync-path="sudo rsync" --delete pi@$raspberry_pi_ip:/usr/include/ ~/rpi-sysroot/usr/include/
  rsync -avzS --rsync-path="sudo rsync" --delete pi@$raspberry_pi_ip:/usr/lib/ ~/rpi-sysroot/usr/lib/
  rsync -avzS --rsync-path="sudo rsync" --delete pi@$raspberry_pi_ip:/opt/vc/ ~/rpi-sysroot/opt/vc/

  sudo apt install symlinks
  cd $HOME
  symlinks -rc rpi-sysroot






  라즈베리파이
  ===
  sudo apt update
  sudo apt full-upgrade
  sudo reboot

  # 😠 Next, install the package dependencies.
  sudo apt-get install -y libboost-all-dev libudev-dev libinput-dev libts-dev libmtdev-dev libjpeg-dev libfontconfig1-dev libssl-dev libdbus-1-dev libglib2.0-dev libxkbcommon-dev libegl1-mesa-dev libgbm-dev libgles2-mesa-dev mesa-common-dev libasound2-dev libpulse-dev gstreamer1.0-omx libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev  gstreamer1.0-alsa libvpx-dev libsrtp2-dev libsnappy-dev libnss3-dev "^libxcb.*" flex bison libxslt-dev ruby gperf libbz2-dev libcups2-dev libatkmm-1.6-dev libxi6 libxcomposite1 libfreetype6-dev libicu-dev libsqlite3-dev libxslt1-dev
      sudo apt-get install -y libavcodec-dev libavformat-dev libswscale-dev libx11-dev freetds-dev libpq-dev libiodbc2-dev firebird-dev libgst-dev libxext-dev libxcb1 libxcb1-dev libx11-xcb1 libx11-xcb-dev libxcb-keysyms1 libxcb-keysyms1-dev libxcb-image0 libxcb-image0-dev libxcb-shm0 libxcb-shm0-dev libxcb-icccm4 libxcb-icccm4-dev libxcb-sync1 libxcb-sync-dev libxcb-render-util0 libxcb-render-util0-dev libxcb-xfixes0-dev libxrender-dev libxcb-shape0-dev libxcb-randr0-dev libxcb-glx0-dev libxi-dev libdrm-dev libxcb-xinerama0 libxcb-xinerama0-dev libatspi2.0-dev libxcursor-dev libxcomposite-dev libxdamage-dev libxss-dev libxtst-dev libpci-dev libcap-dev libxrandr-dev libdirectfb-dev libaudio-dev libxkbcommon-x11-dev


sudo apt install libavcodec-dev libavformat-dev libswscale-dev libavutil-dev

>> qt 빌드 시 발생.. ffmpeg 가 snap 에 설치되어잇는데 못찾는듯? ㅇ
  CMake Error at qtmultimedia/src/plugins/multimedia/ffmpeg/cmake_install.cmake:60 (file):
    file INSTALL cannot find
    "/home/wbfw109v2/qt-hostbuild/qtbase/plugins/multimedia/libffmpegmediaplugin.so":
    No such file or directory.
  Call Stack (most recent call first):
    qtmultimedia/src/plugins/multimedia/cmake_install.cmake:47 (include)
    qtmultimedia/src/plugins/cmake_install.cmake:47 (include)
    qtmultimedia/src/cmake_install.cmake:77 (include)
    qtmultimedia/cmake_install.cmake:47 (include)
    cmake_install.cmake:87 (include)

  https://launchpad.net/ubuntu/+source/ffmpeg

  ❓
    ❯ which ffmpeg
    /home/linuxbrew/.linuxbrew/bin/ffmpeg

    ~/qt-hostbuild via △ v3.31.3 
    ❯ brew remove ffmpeg
    Error: Refusing to uninstall /home/linuxbrew/.linuxbrew/Cellar/ffmpeg/7.1_4
    because it is required by timg, which is currently installed.
    You can override this and force removal with:
      brew uninstall --ignore-dependencies ffmpeg

  

https://github.com/qt/qtbase
https://codereview.qt-project.org/qt/qt5


❓ 과제
  GUI 프레임워크: QT GUI 프레임워크를 활용한 센서 데이터 관리 시스템
  - project name: sensorMan_PJS
  - Main window widget 은 Tab widget 사용
  - 첫번째 탭 화면에서는 iot 서버와 데이터 송/수신이 가능한 클라이언트 구현
    - Line Edit 더블클릭 시 가상 키보드 구현
  - 두 번째 탭 화면에서는 iot 서버에서 10초 단위로 수신된 조도/온도/습도 데이터를 실시간 라인차트 구현
    ❔ 데이터 수신 포맷: [HM_CON]SENSOR@90@27.5@20.9
  - 세 번째 탭 화면에서는 수신된 센서 데이터를 sqlite 데이터베이스를 활용하여 저장하고
    , 검색 기간별 데이터 조회 및 삭제 기능 구현
    , 조회된 센서데이터는 라인차트로 구현
  
  Socket, Snesor, Sqlite 탭.
    Socket:
      수신 데이터, --space--, 수신 삭제, 서버 해제
      --메시지 박스--
      --호스트 텍스트 박스--, -- 데이터--, 송신
    Sensor:
      시간별 조도, 온도 습도 그래프.
      우측 상단에 Clear 버튼
    Sqlite  
      
  Design
    [element: Tab Widget]
      Right click - ✔️ Insert Page
      Tab count: 3
      Tab name: (Socket, Snesor, Sqlite)
        [element: Tab1 (Socket)]
          - Attributes:
            layoutStrecth: 2, 5, 2, 2
          [element: Vertical Layout] * 1
            - after create layout elements, Right click  - Layout - ✔️ Lay Out Vertically
            Attributes:
              layoutStrecth: 1,5,1
            [element: Horizontal Layout] 1
              [element: Lable]
                Attributes:
                  alignment - Horizontal - ✔️ AlignHCenter
              [element: Spacer]
              [element: Push Button]
              [element: Push Button]
                
            [element: Horizontal Layout] 2
              * [element: Text Edit]
            [element: Horizontal Layout] 3 
              Attributes:
                spacing: 20
              * [element: Line Edit], [element: Line Edit], [element: Push Button]
  
>>>>. Qt vscode 에서 할 때 Open in Qt Desiner 이전에 Cmake configure,는 해야하는듯? build가지?..
  안그러면 디자이너에서 옵션이 안뜸.. 


  https://doc.qt.io/qt-6/qtcharts-index.html


➡️ https://doc.qt.io/qt-6/qtqml-index.html



## qt_binaries settings
set -x qt_binaries $HOME/qt/6.8.0/gcc_64/bin
fish_add_path $qt_binaries

// QML Tutorial 1. Value Types ; https://doc.qt.io/qt-6/qml-tutorial1.html
➡️❌ QML
  ⚓ QmlSandbox
    https://marketplace.visualstudio.com/items?itemName=SavenkovIgor.QmlSandboxExtension
    여러 개 파일로 구성된 QML 의 경우 live preview 를 볼수 없다.
  문제는 이 확장 이외에는 live preview 를 지원하는 확장이 없다.
  또한 Qt creator 와 다르게 UI 에서 시그널/슬롯, 속성 등을 다루는 기능이 없어서 백엔드와 같이 작업하기 불편하다.




 cmake --build . --parallel (nproc)
[3/11278] Linking CXX shared library qtbase/lib/libQt6Core.so.6.8.1
FAILED: qtbase/lib/libQt6Core.so.6.8.1  

이거 혹시, 해당 라즈베리파이소스에서 빌드한 커널모듈을 insmod 가 가능하게하려면, 우선 라즈베리파이소스에서 zImage 를 빌드해서 그거부터 옮겨야 같은 커널로 만들어야 하는건가?
ㅇㅇ...




윈도우는 드라이버가 독립적으로 작동합니다. 드라이버는 특정 하드웨어를 제어하는 코드로, 운영체제 커널과는 별개로 설치됩니다. 윈도우는 드라이버가 특정 운영체제 버전과는 크게 연관되지 않으며, 다양한 하드웨어와 호환될 수 있도록 드라이버를 설계하는 경우가 많습니다.

독립적인 드라이버: 윈도우의 드라이버는 보통 하드웨어와 소프트웨어의 호환성만을 고려하고, 운영체제의 커널 버전과의 호환성은 크게 신경 쓰지 않습니다. 드라이버가 OS의 커널과 직접 결합되지 않기 때문에, 드라이버가 OS 버전과 맞지 않아도 동작할 수 있는 경우가 많습니다.
리눅스는 커널 모듈을 사용합니다. 커널 모듈은 현재 실행 중인 커널과 밀접하게 연결되어 있으며, 커널의 버전이나 설정에 따라 작동합니다. 그래서 리눅스에서는 커널 모듈(.ko 파일)이 특정 커널 버전과 호환되어야 하며, 만약 커널이 업데이트되면, 해당 커널에 맞는 모듈을 다시 빌드해야 합니다.

커널 의존성: 리눅스의 .ko 커널 모듈은 커널 버전 및 구성 옵션에 의존합니다. 즉, 커널이 업데이트되면 모듈도 다시 빌드하여 새 커널에 맞춰야 합니다.


너무말이 안되는데?

뭔가 파일이 너무 .. 조잡한거같음..




OpenCV와 같은 라이브러리에서의 사용:
OpenCV 같은 유명한 라이브러리에서도 디버깅 메시지나 로깅을 관리할 때 이와 유사한 패턴을 사용합니다. OpenCV는 디버깅 메시지를 출력하는 여러 방법을 제공합니다. OpenCV는 디버그 모드에서 CV_LOG_* 매크로를 사용하여 로그를 관리하고, 배포 시에는 로그를 비활성화하는 방식입니다.

OpenCV의 디버깅/로깅 예시 (간략화된 예시):

cpp
코드 복사
#define CV_LOG_DEBUG(msg) \
    if (cv::getLogLevel() >= cv::LOG_LEVEL_DEBUG) { \
        std::cout << "DEBUG: " << msg << std::endl; \
    }





너무 답이 없는데? qt online installre 로 설치하는 게 아니라면, 이런거 일일이 다 수정해도 설치하기 힘든 수준이야.

소스 빌드가 필요한 이유가 없다면, Qt Online Installer나 배포판 패키지를 활용하는 것이 훨씬 생산적입니다. 특히 WebEngine과 같은 복잡한 모듈은 시간이 많이 소요되고 실패 가능성이 높기 때문에, 기존에 빌드된 바이너리를 활용하는 것이 더 실용적입니다.
  Qt가 흔히 사용되지 않는 이유 중 하나는 이러한 초기 설정의 어려움이 개발자 진입 장벽을 높이기 때문입니다. 하지만 일단 설정이 완료되면, Qt는 강력한 기능과 크로스플랫폼 지원으로 뛰어난 개발 환경을 제공합니다. 👍

❗ TODO: 카메라 필터앱도 해야하네.. 인생네컷.. >>>>>>>>>>> 코드 이쁘게 정리부터 하고 Jetson nano 정리... 크로스컴파일 생각하면서.


방법이 이거밖에 없나.. 도커.. https://github.com/PhysicsX/QTonRaspberryPi
❓ https://wiki.qt.io/Cross-Compile_Qt_6_for_Raspberry_Pi#Building_Qt_6_for_Host_Machine
  맞습니다! 이 문서는 Qt 애플리케이션 자체를 크로스 컴파일하는 방법이 아니라, Qt 라이브러리를 크로스 컴파일하여 라즈베리 파이에서 사용할 수 있도록 배포하는 방법을 다룹니다.

1. 지금 호스트 Qt 는 oneline instaler 로 잘 설치햇고 이미 cmake preset 도 구성한 상태야.
크로스컴파일+ 라즈베리파이용 cmakepreset 을 구성하려 하는데 그냥 방법이 안보이는데? 실제로 예시도 하나도 없고. 

도커로부터 빌드하는게 잇긴 한데.. 이거는 도커 컨테이너 안에서 "크로스컴파일"하는거라 intellisense 못받나? 아닌가? 어차피 버전 똑같으면 qt library 는 같아서 상관없나? 빌드할때만 어차피 내부적으로 각 아키텍처마다 필요한 거를 참조하는거니까? 
2. 그리고 만약 이런 경우 cmake preset 을 만들 수가 있나? 툴체인, 프리셋으로 로컬 경로가 아니라 도커 컨테이너 안의 경로를 설정해야하는거라 불가능하지? 
3. 그러면 그냥 tasks 로 구성하는게 나으려나 어쩔 수 없이?
4. 만약 이거도 안되는 경우는 실제 임베디드 개발자는 어떻게 하나? 각 라즈베리파이나 젯슨 나노와 같은 기기에 online installer (desiner, ide 이런거 말고, 런타임과 컴파일만 가능하도록) 설치해서, 호스트에서 소스를 nfs/ 로 copy 하고, 라즈베리파이나 젯슨에서 /nfs 에서 이거를 빌드하는 식으로 하나? (실제 임베디드 QT 개발자는 어떻게하고 있지? 2024~2025년 기준.)
qt6.8.0-essentials	
essential module libraries
essential module headers
essential module private headers
essential module runtime tools
essential module development tools
qt6.8.0-essentials-dev	
essential module libraries
essential module headers
essential module private headers
essential module runtime tools
essential module development tools
qt6.8.0-full	
essential module libraries
essential module headers
essential module private headers
essential module runtime tools
essential module development tools
add-on module libraries
add-on module headers
add-on module private headers
add-on module runtime tools
add-on module development tools
sources
qt6.8.0-full-dev	
essential module libraries
essential module headers
essential module private headers
essential module runtime tools
essential module development tools
add-on module libraries
add-on module headers
add-on module private headers
add-on module runtime tools
add-on module development tools
sources
qt6.8.0-full-dbg	
Qt debug information files for:
essential module libraries
add-on module libraries
qt6.8.0-sdk	
latest Qt Creator
qt6.8.0-full-dev (details above)
qt6.8.0-full-dbg (details above)
Ninja
CMake



=====
내가 말하는 도커로 크로스컴파일 하는 방법: https://raw.githubusercontent.com/PhysicsX/QTonRaspberryPi/refs/heads/main/README.md
이거 읽었어.

일단 cmake toolchain 을 사용 불가능한 상황이잔아. --> qt 가 실행 되도록 임베디드 기기에 처리해야 함.
그렇다고 직접 소스로부터 빌드하는 것은 불가능한 상황(필요한 라이브러리들과 방법이 제대로 명시되어있지 않음)

"디바이스에 Qt Online Installer를 사용하는 경우는 드뭅니다. 대신, 크로스컴파일 환경에서 컴파일한 라이브러리와 헤더만 디바이스에 설치하는 경우가 많습니다." 드물다고? 

근데 런타임, 컴파일이 되도록 하는 툴은 그럼 어떻게 설치하는데? qt6.8 을 컴파일/실행하기 위한 라이브러리를 라즈베리파이에 설치 가능해? 


❓ Qt Application 배포 방식
  windeployqt --release path\to\your_application
    윈도우에서는 동적 링크를 사용하여 Qt 애플리케이션을 배포할 때, 필요한 Qt 라이브러리를 애플리케이션과 함께 번들로 제공해야 합니다.

  linuxdeployqt path/to/your_application -appimage
    Linux에서는 Qt 애플리케이션을 AppImage와 같은 포맷으로 배포하거나 실행 파일과 라이브러리를 함께 제공할 수 있습니다.
    https://github.com/probonopd/linuxdeployqt?tab=readme-ov-file
    📰 Please note: As of 2024 , I am no longer actively working on this codebase in favor of https://github.com/probonopd/go-appimage.

  근데 linuxdeploy 이거는,  음.. 그러니까 빌드된 결과물에 대해서 실행하는거야? 그럼 크로스컴파일시 결과물에 대해서는 경로를 어떻게찾나?;;


Qt5 qml mqtt chart raspberry pi
  https://www.youtube.com/watch?v=1IqdZ9gLZx8

빌드를 통해서만 사용이 가능하고, 임베디드 기기라 빌드하고 거기서 개발하는것으 ㄴ어렵고..

https://download.qt.io/official_releases/qt/6.8/6.8.0/submodules/


Qt 5: mkspecs/devices에서 장치별 설정 파일 사용.
Qt 6: CMake toolchain 파일을 통해 모든 빌드 설정 관리.


https://doc.qt.io/qt-6/linux-requirements.html
https://doc.qt.io/qt-6/linux-building.html


EGL Full-Screen ; Qt가 EGL과 OpenGL ES를 활용하여 창 없는 환경에서 전체 화면 렌더링을 수행하는 플랫폼 플러그인입니다.



❗ 배경: Qt는 여러 플랫폼에서 동작하기 위해 다양한 플랫폼 플러그인을 제공합니다. X11 환경에서는 xcb가 일반적이며, EGL, EGLFS, GLX 등을 지원하도록 빌드할 수 있습니다.
  구성 방법:
  Qt를 소스 코드에서 빌드할 때, 플랫폼 플러그인을 지정합니다.
    ./configure -opengl es2 -egl -xcb

  Qt가 어떤 플랫폼 플러그인을 사용할지는 실행 환경에서 설정할 수 있습니다.
  ./myQtApp -platform eglfs


  ./configure -opengl es2 -egl -xcb 에서 es2 는 뭐야? xcb 는 뭐고? egl 은? 약자가..

    es2: OpenGL ES 2.0 (OpenGL for Embedded Systems 2.0)

    EGL (Embedded-System Graphics Library

    XCB (X protocol C-language Binding)
      X11 프로토콜을 사용하는 X Server와의 통신을 처리하는 경량화된 라이브러리입니다.
      EGL이나 GLX를 통해 OpenGL 렌더링을 처리하는 역할도 수행합니다.

https://velog.io/@wuxxeong/Cross-Compile-Qt-6-for-Raspberry-pi-%ED%99%98%EA%B2%BD-%EA%B5%AC%EC%B6%95
  Host Machine에서 Raspberry Pi 와 Host Machine을 위한 Qt를 각각 빌드하기
  Qt를 Rasberry Pi 와 Host Machine 따로 설치하는 것이 아니라, Host Pc에서 두 번 설치하는 것이다.
  이를 위해 Host pc에서 Host를 위한 qt를 cmake로 build하는 과정과 RaspberryPi를 위한 qt를 cmake로 build하는 과정이 필요하다.



C:\Users\wbfw1\AppData\Roaming\Microsoft\Windows\Recent\AutomaticDestinations


프레임버퍼(/dev/fb0)*

GBM: Generic Buffer Management의 약자로
, DRM(Direct Rendering Manager) API와 연동하여 EGL과 OpenGL ES에서 사용할 수 있는 버퍼를 관리하는 Linux 커널 기반의 메커니즘입니다.



vfpv4: ARM 프로세서에서 사용하는 부동소수점 유닛(FPU, Floating Point Unit)의 한 종류입니다.

vfpv4는 vfp(Vector Floating Point)의 4번째 버전으로, NEON 같은 SIMD 명령어 세트와 함께 사용됩니다.
최적화와 고속 수학 계산을 지원하는 환경을 나타냅니다.

🪱 helper script.. 
  헬퍼 스크립트(helper script)는 특정 작업을 쉽게 수행하도록 만들어진 스크립트입니다.
  매번 긴 명령어를 작성하지 않아도 간단한 명령으로 프로젝트를 빌드하거나 설정할 수 있습니다.


1. include_guard의 동작 방식
  CMake에서 특정 파일이 중복으로 포함되는 것을 방지합니다.
  파이썬처럼 전역적으로 해당 파일의 포함 여부를 추적 및 관리합니다.


  3. Python의 import 관리와의 유사성
    파이썬에서 모듈은 한 번만 import 되며, 이후는 캐싱됩니다. include_guard(GLOBAL)는 이러한 파이썬의 import 관리 방식과 비슷합니다:


특정 CMake 파일이 여러 번 호출되어도, include_guard 덕분에 중복 처리되지 않습니다.
  파이썬의 모듈 캐싱처럼 동작하며, 불필요한 작업을 방지합니다.
    그럼 일일이 # IF def 를 안쓰도록 방지하기 위한 모던 c++ 방식인가? 자바나 파이썬과 같은 편의성을 제공하려고?
  ㄴㄴ CMake의 include_guard는 C++ 소스 코드가 아닌, CMake 빌드 스크립트 단계에서 중복 포함을 방지합니다.
  이는 C++의 #ifndef나 #pragma once와는 별개의 기능입니다.
헤더 가드를 대체하는 방식 -> #pragma once >??
  C++20에서 도입된 모듈은 헤더 파일 대신 모듈 인터페이스를 사용하여 전처리기 없이 중복 포함 문제를 해결합니다.




그러니까 x11, wayland 같은 것이 설치되어있지 안ㅇ흔 headless 환경에서도, QT 앱을 띄울 수 있다는거야? 디스플레이 장치가 하나 있으면:?
  ChatGPT said:
    네, X11이나 Wayland 같은 윈도잉 시스템이 없는 헤드리스(headless) 환경에서도 Qt 애플리케이션을 띄울 수 있습니다. 단, 디스플레이 장치가 연결되어 있고 적절한 플랫폼 플러그인(예: EGLFS, LinuxFB 등)이 지원되는 경우에 가능합니다.


  EGLFS: OpenGL ES를 활용하여 렌더링을 하며, 화면 전체를 Qt 애플리케이션이 점유합니다
  화면당 하나의 전체 화면 Qt 윈도우만 지원하며, 데스크톱 환경처럼 다중 창 관리나 크기 조정은 불가능합니다.
  디스플레이 장치가 하나라도 있다면, 애플리케이션을 전체 화면으로 띄울 수 있습니다.


Use Qt Quick instead of Qt Widgets
  With Qt Quick, it's possible to use either hardware-accelerated or software-rendered backends. For complex Uls, using Qt Widgets on embedded targets is not recommended, as it will always use a software backend.

  There are trade-offs here:
    Using the QML engine and Qt Quick comes with initial overhead.
    If your UI is very simple and repaints rarely, it may perform faster when implemented using Widgets instead of QML.
    If your UI benefits from animations, smooth scrolling,and scaling, rendering effects, or 3D you need to have GPU acceleration, and thus Qt Quick.

    

  

  Qt Widgets는 CPU 기반의 렌더링 방식을 사용하며, 비교적 정적이고 단순한 UI에 적합합니다.
    QWidget, QMainWindow 등을 사용해 UI를 구성.
    복잡한 애니메이션이나 부드러운 화면 전환에는 한계가 있음.
    하지만, 단순한 UI(예: 폼, 버튼 위주)에서는 여전히 유용하며, QML 학습 곡선을 피할 수 있음.

  QML:
    QML은 Qt Quick의 UI를 선언적으로 정의하는 언어입니다.
    JSON과 유사한 구문으로 빠르게 UI를 설계하고, JavaScript를 통해 동작을 제어할 수 있습니다.

  ➡️📰❓ Qt QML 에 대해서 연동해보고, 연동 시 intellisense 를 지원하는지 확인해 봐야 함.
    How to create a simple Qt Quick application ; https://www.youtube.com/watch?v=Bo5Og2fb1CA


https://doc.qt.io/Boot2Qt/b2qt-qsg-raspberry.html
❌ https://wiki.qt.io/Cross-Compile_Qt_6_for_Raspberry_Pi >> 커뮤니티 기반이엇음 .하.. 최신 상태가 아닐 수 있으며, 정확성과 일관성이 공식 문서보다 떨어질 수 있습니다.
❌ Boot to Qt 이미지를 SD 카드에 플래싱하면, 라즈베리 파이에 설치된 기존 운영 체제(예: 라즈비안)는 덮어쓰게 됩니다.
  


/home/wbfw109v2/toolchain/rpi_toolchain.cmake


mkdir -p ~/qt-host ~/qt-build

git clone https://github.com/qt/qt5
cd ~/qt5 && git checkout 6.8.0 && \
./init-repository --module-subset=default
❗ sudo apt install build-essential autoconf libtool
  build-essential is already the newest version (12.10ubuntu1).
  Installing:
    autoconf  libtool
cd ~/qt-build && \
  ~/qt5/configure -prefix ~/qt-host \
  -skip qtgrpc # 📰 TODO.. after grpc build
cd ~/qt-build && \
  cmake --build . --parallel



sudo apt-get install -y libsnappy-dev libvulkan-dev libicu-dev

#   
export PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig
export LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu
export LD_LIBRARY_PATH=/home/linuxbrew/.linuxbrew/Cellar/icu4c@76/76.1_1/lib:$LD_LIBRARY_PATH
export PKG_CONFIG_PATH=/home/linuxbrew/.linuxbrew/Cellar/icu4c@76/76.1_1/lib/pkgconfig:$PKG_CONFIG_PATH


export PKG_CONFIG_PATH=/usr/local/icu/lib/pkgconfig:$PKG_CONFIG_PATH
export LD_LIBRARY_PATH=/usr/local/icu/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH
export PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig:$PKG_CONFIG_PATH


icu-config --version
pkg-config --modversion icu-uc

76.1
74.2



cdcmake -GNinja \
  -DCMAKE_TOOLCHAIN_FILE=$HOME/toolchain/rpi_toolchain.cmake \
  -DCMAKE_INSTALL_PREFIX=$HOME/qt-build \
  -DQT_HOST_PATH=$HOME/qt-host \
  -DQT_BUILD_EXAMPLES=OFF \
  -DQT_BUILD_TESTS=OFF \
  $HOME/qt5

  nohup ./init-repository --module-subset=default > output.log 2>&1 &




❗ rm -rf ~/qt-build/CMakeCache.txt ~/qt-build/CMakeFiles

# Module-specific System Requirements
  ⚓ Building Qt WebEngine from Source ; https://doc.qt.io/qt-6/qtwebengine-platform-notes.html
  ⚓ Building Qt Quick 3D from Source ; https://doc.qt.io/qt-6/qtquick3d-index.html#building-from-source
  ⚓ Building Qt Multimedia from Source ; https://doc.qt.io/qt-6/qtmultimedia-building-from-source.html
  ⚓ Qt GRPC and Qt Protobuf Module Requirements ; https://doc.qt.io/qt-6/qtgrpc-index.html#module-prerequisites


  #!/usr/bin/env fish
  sudo apt install --reinstall libgrpc++-dev
  Linux, using apt or apt-get, for example:

  sudo apt install -y protobuf-compiler
  protoc --version  # Ensure compiler version is 3+



  # Script to install dependencies for Qt modules
  # Make sure to run this script with superuser privileges if required.

  # Common dependencies for building Qt
  echo "Installing common dependencies for Qt..."
  sudo apt update
  sudo apt install -y build-essential cmake ninja-build python3-pip pkg-config
  pip3 install html5lib  # Required for some modules like Qt WebEngine

  # Qt WebEngine dependencies
  echo "Installing dependencies for Qt WebEngine..."
  sudo apt install -y nodejs bison flex gperf
  sudo apt install -y libdbus-1-dev libfontconfig1-dev \
                      libdrm-dev libxcomposite-dev libxcursor-dev \
                      libxi-dev libxrandr-dev libxscrnsaver-dev libxtst-dev

  # Qt Multimedia dependencies
  echo "Installing dependencies for Qt Multimedia..."
  sudo apt install -y libavcodec-dev libavformat-dev libswscale-dev \
                      libswresample-dev libavutil-dev libpulse-dev

  # Optional: VAAPI and GStreamer support for Qt Multimedia
  echo "Installing optional dependencies for hardware acceleration in Qt Multimedia..."
  sudo apt install -y libva-dev libvdpau-dev
  sudo apt install -y libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev

  # Qt Quick 3D dependencies
  echo "Installing dependencies for Qt Quick 3D..."
  sudo apt install -y mesa-common-dev libvulkan-dev libgl1-mesa-dev

  # Qt GRPC dependencies
  echo "Installing dependencies for Qt GRPC..."
  sudo apt install -y protobuf-compiler libprotobuf-dev libgrpc-dev libssl-dev

  # Final message
  echo "All dependencies for selected Qt modules have been installed!"


============ 라즈베리파이 추가설치?
#!/usr/bin/env fish

# Script to install runtime libraries for Qt applications on the Raspberry Pi
# Make sure to run this script with superuser privileges.

echo "Updating package lists..."
sudo apt update

# Common runtime libraries for most Qt applications
echo "Installing common runtime libraries for Qt..."
sudo apt install -y libegl1-mesa libgles2-mesa libgbm1 libfontconfig1 libfreetype6

# Qt WebEngine runtime libraries
echo "Installing runtime libraries for Qt WebEngine..."
sudo apt install -y libdbus-1-3 libfontconfig1 libxcomposite1 \
                    libxcursor1 libxi6 libxrandr2 libxtst6 libnss3 libssl-dev

# Qt Multimedia runtime libraries
echo "Installing runtime libraries for Qt Multimedia..."
sudo apt install -y libavcodec58 libavformat58 libswscale5 \
                    libswresample3 libavutil56 libpulse0

# Optional: Hardware acceleration for video playback (VAAPI, VDPAU)
echo "Installing optional hardware acceleration libraries for Qt Multimedia..."
sudo apt install -y libva-drm2 libva-x11-2 libvdpau1

# Optional: GStreamer backend for Qt Multimedia
echo "Installing GStreamer libraries for Qt Multimedia..."
sudo apt install -y gstreamer1.0-plugins-base gstreamer1.0-plugins-good

# Qt Quick 3D runtime libraries
echo "Installing runtime libraries for Qt Quick 3D..."
sudo apt install -y libgl1-mesa-dri libvulkan1

# Qt GRPC runtime libraries
echo "Installing runtime libraries for Qt GRPC..."
sudo apt install -y libprotobuf23 libgrpc10 libssl-dev

# Additional common libraries for Qt applications
echo "Installing additional runtime libraries for common Qt functionalities..."
sudo apt install -y libharfbuzz0b libicu66 zlib1g libpng16-16 libjpeg8 libwebp6

echo "All runtime dependencies for Qt applications have been installed!"


📰TODO
  git clone --recurse-submodules -b v1.51.1 https://github.com/grpc/grpc
  cd grpc
  // 

➡️ /home/wbfw109v2/qt-build/config.summary



이력서 변경 필요 ==============

//////////// misc 학습한 것 파일 가져와야 함.
  > [130/136] RUN {     set -e &&     echo "Compile qtdeclarative for Raspberry Pi" &&     cd qt6/pi-build/qtdeclarative-everywhere-src-6.8.0 &&     /build/qt6/pi/bin/qt-configure-module . &&     cmake --build . --parallel 4 &&     cmake --install .; } 2>&1 | tee -a /build.log:
  ------
  Dockerfile:1206
  --------------------
  1205 |     # Compile qtdeclarative for Raspberry Pi
  1206 | >>> RUN { \
  1207 | >>>     set -e && \
  1208 | >>>     echo "Compile qtdeclarative for Raspberry Pi" && \
  1209 | >>>     cd qt6/pi-build/qtdeclarative-everywhere-src-6.8.0 && \
  1210 | >>>     /build/qt6/pi/bin/qt-configure-module . && \
  1211 | >>>     cmake --build . --parallel 4 && \
  1212 | >>>     cmake --install .; \
  1213 | >>> } 2>&1 | tee -a /build.log
  1214 |     
  --------------------
  ERROR: failed to solve: failed to prepare np9c857wt6h685v9glzj8set8 as znjnloair8q16228a41z7urjq: max depth exceeded

sshpass -p turtlebot ssh ubuntu@10.10.14.119 "bash -c 'source ~/.bashrc && source /opt/ros/noetic/setup.bash && roslaunch turtlebot3_bringup turtlebot3_robot.launch'"


rostopic lits
rqt // qt 앱..? in ROS 우분투 앱에서.. check 
  Plugins - Topics -  Topic Monitor 


export TURTLEBOT3_MODEL=burger
roslaunch turtlebot3_bringup turtlebot3_robot.launch



🧮 mpv --hwdec=vdpau 5640919-hd_1080_1920_30fps.mp4

🧮 VSCODE 좌측 하단 "Dev Container: ..." click  . -> Reopen Folder Locally
  .devcontainer/Dockerfile
    # ROS Noetic base image
    FROM ros:noetic-robot

    ARG DEBIAN_FRONTEND=noninteractive
    ARG USER=vscode


    # 1. Install sudo and create the vscode user with root privileges
    RUN apt-get update && apt-get install -y --no-install-recommends sudo \
        && useradd -m -d /home/$USER -s /bin/bash $USER \
        && usermod -aG sudo,video,dialout,plugdev,audio $USER \
        && echo "$USER ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

    # 2. Update dependencies index
    RUN apt-get update

    # 3. Switch to the vscode user
    USER $USER
    ARG HOME="/home/$USER"
    # create directories pre-emptively to avoid permission issues 📅 2025-01-07 20:03:16
    RUN mkdir -p $HOME/.config $HOME/.local
    RUN sudo chown -R $USER:$USER /home/$USER /home/$USER/.config /home/$USER/.local

    RUN echo $USER > $HOME/test.txt
    # 4. Set environment variables for pyenv and PATH
    ENV PATH="${HOME}/.local/bin:$PATH"

  .devcontainer/devcontainer.json
    "features": {
      "ghcr.io/meaningful-ooo/devcontainer-features/fish:1": {},
    }


  error: can not save history
  warning-path: Unable to locate data directory derived from $HOME: '/home/vscode/.local/share/fish'.
  warning-path: The error was 'Permission denied'.
  warning-path: Please set $HOME to a directory where you have write access.

  error: Unable to open universal variable file '/': Permission denied
  mkdir: cannot create directory ‘/home/vscode/.config/fish’: Permission denied
  mkdir: cannot create directory ‘/home/vscode/.config/fish’: Permission denied
  mkdir: cannot create directory ‘/home/vscode/.config/fish’: Permission denied
  error: Unable to open universal variable file '/': Permission denied
  warning: An error occurred while redirecting file '/home/vscode/.config/fish/config.fish'
  open: Permission denied
  error: Unable to open universal variable file '/': Permission denied
  error: Unable to open universal variable file '/': Permission denied


  >> 
  # https://stackoverflow.com/questions/69328173/fish-shell-error-unable-to-open-universal-variable-file-permission-denie

  instead,   use ..  "ghcr.io/meaningful-ooo/devcontainer-features/fish:1": {},
  근데 이건 또 문제가 fish 버전이 ubuntu 버전에 따라 낫다.. fisher loadenv 를 설치햇는데 자꾸 오류남.
    vscode@iot-04 /workspace> loadenv /etc/os-release
    loadenv: Invalid option spec 'print' at char 'r'
  >>>>>>>>
    sudo apt install -y software-properties-common
    sudo apt-add-repository -y ppa:fish-shell/release-3
    sudo apt update && sudo apt install -y fish




⚓📎 dev (userspace /dev) https://en.wikipedia.org/wiki/Udev
  udev (userspace /dev) is a device manager for the Linux kernel. ...
  udev primarily manages device nodes in the /dev directory.
  udev also handles all user space events raised when hardware devices are added into the system or removed from it, 🚣 including firmware loading as required by certain devices.


# 666
# 모든 사용자(소유자, 그룹, 기타 사용자)가 읽기/쓰기 가능.
# Docker 컨테이너는 호스트의 /dev 디렉터리에서 장치를 마운트하므로, 컨테이너 내 사용자(일반적으로 root 또는 비루트 사용자)가 호스트의 "기타 사용자" 권한으로 장치에 접근하게 됩니다.
# 따라서, Docker 컨테이너에서 장치에 접근하려면 666 (읽기/쓰기 모두 허용) 권한이 필요합니다.
echo 'SUBSYSTEM=="video4linux", GROUP="docker", MODE="0666"' | sudo tee /etc/udev/rules.d/99-docker.rules
sudo udevadm control --reload-rules
sudo udevadm trigger



  
FFmpeg의 정적 빌드(static build)는 설치가 간편하지만, 라이선스 제한으로 인해 일부 비자유(non-free) 라이브러리를 포함하지 않을 수 있습니다. 이로 인해 특정 코덱이나 기능이 지원되지 않을 수 있습니다.
  예를 들어, H.264와 같은 코덱은 특허 문제로 인해 기본 정적 빌드에 포함되지 않을 수 있습니다. 따라서 이러한 코덱을 사용하려면 소스에서 직접 컴파일하여 필요한 라이브러리를 포함시키는 것이 좋습니다. 

  ???
  예를 들어, H.264 코덱은 MPEG LA와 같은 특허 풀에 의해 관리되며, 상업적 사용 시 라이선스 비용이 부과될 수 있습니다. 그러나 비영리적 사용이나 일정 규모 이하의 사용에 대해서는 로열티가 면제되기도 합니다. 자세한 내용은 MPEG LA의 공식 웹사이트를 참고하시기 바랍니다.

    H.264는 다양한 단체가 소유 한 특허로 보호된다. H.264에 필수적인 대부분의 특허는 (전부는 아니지만) MPEG LA[1] 특허 풀에서 관리한다.
    특허 된 H.264 기술을 상업적으로 사용하려면 MPEG LA 및 기타 특허 소유자에게 로열티를 지불해야한다. H.264를 채용 한 제품을 구입 한 소비자에게 별도로 사용료를 부과 할 수는 없지만, 제품 가격에 그 비용이 포함된다.
    MPEG LA는 최종 사용자가 인터넷 비디오 스트리밍을 위한 H.264 기술 사용을 무료로 허용했다.
    Cisco Systems는 오픈 소스로 공개된 H.264 인코더 용 바이너리(OpenH264)[2] 사용자들을 대신하여 MPEG LA에 로열티를 지불한다. H.264 알고리즘에 영향을 미치거나 기술하는 특허들은 100 개가 넘는다. 그 중 일부는 특허 만료가 되었지만, 대부분은 2028년 만료 기점을 가진다.
❓❓❓❓❓❓❓❓📰 TODO:..
우분투에서 아래와 같이 apt-get으로 ffmpeg을 설치할 수 있다.$> sudo apt-get install ffmpeg하지만 위와 같이 설치할 경우 h264 코덱이 포함되지 않아서 h264 인코딩 혹은 디코딩 하는데 제약 사항이 생긴다.그래서 h264 소스를 다운받은 후 ffmpeg을 다시 빌드를 해주어야 하는데 그 방법은 아래와 같다.
  https://yujuwon.tistory.com/entry/우분투에서-ffmpeg-설치-방법 [Ju Factory:티스토리]

  https://trac.ffmpeg.org/wiki/CompilationGuide
  https://trac.ffmpeg.org/wiki/CompilationGuide/Ubuntu

  sudo apt-get update -qq && sudo apt-get -y install \
    autoconf \
    automake \
    build-essential \
    cmake \
    git-core \
    libass-dev \
    libfreetype6-dev \
    libgnutls28-dev \
    libmp3lame-dev \
    libsdl2-dev \
    libtool \
    libva-dev \
    libvdpau-dev \
    libvorbis-dev \
    libxcb1-dev \
    libxcb-shm0-dev \
    libxcb-xfixes0-dev \
    meson \
    ninja-build \
    pkg-config \
    texinfo \
    wget \
    yasm \
    zlib1g-dev
  # ❗ On Ubuntu 20.04 you may also need this command: (​note)
  sudo apt install libunistring-dev libaom-dev libdav1d-dev
  # ❗ Note: Server users can omit the ffplay and x11grab dependencies: libsdl2-dev libva-dev libvdpau-dev libxcb1-dev libxcb-shm0-dev libx cb-xfixes0-dev.
    libsdl2-dev libva-dev libvdpau-dev libxcb1-dev libxcb-shm0-dev libxcb-xfixes0-dev


. This means that even if the instructions in your Dockerfile are re-ordered later, the COPY doesn't break.





🆚
  OS 레벨 가상화는 운영 체제에서 사용자 공간을 격리하여 컨테이너를 제공하는 기술을 말합니다. Docker, LXC 등이 이에 해당합니다.
    Docker와 같은 기술은 OS 레벨 가상화로 부르는 것이 더 적절합니다.
    Docker는 하나의 커널에서 여러 격리된 사용자 공간(컨테이너)을 실행하기 때문입니다.
  커널 레벨 가상화는 운영 체제 커널 자체가 가상화의 주요 역할을 담당하는 것을 뜻하며, KVM(Linux Kernel Virtual Machine)이 이에 해당합니다.
    KVM (Kernel-based Virtual Machine)은 커널 레벨 가상화로 부르는 것이 더 적합합니다.
    KVM은 하드웨어 가상화를 활용해 전체 OS를 실행하도록 커널이 하이퍼바이저 역할을 수행합니다.

  VMware와 VirtualBox는 소프트웨어 기반 가상화 도구로, 자체적으로 하이퍼바이저 역할을 수행합니다.
    VMware와 VirtualBox는 자체 하이퍼바이저 엔진을 사용하므로 KVM과는 무관합니다.
  QEMU는 기본적으로 소프트웨어 에뮬레이터이지만, KVM을 통해 하드웨어 가속을 지원할 수 있습니다.
    QEMU는 다양한 하드웨어 아키텍처와 디바이스를 에뮬레이션할 수 있는 강력한 소프트웨어. 독보적.

  | **특징**                 | **OS 레벨 가상화**                  | **하드웨어 레벨 가상화**           |
  |---------------------------|-------------------------------------|------------------------------------|
  | **격리 수준**             | 프로세스 수준 (낮음)                | 하드웨어 수준 (높음)              |
  | **호스트 OS 의존성**      | 있음 (동일 커널 필요)               | 없음 (다른 OS 실행 가능)          |
  | **시작/중지 속도**        | 빠름 (초 단위)                      | 느림 (분 단위)                    |
  | **리소스 사용량**         | 적음                               | 많음                              |
  | **적용 사례**             | 마이크로서비스, CI/CD 환경          | 다양한 OS 테스트, 완전 격리 환경 |


  # 하드웨어 레벨 가상화의 시작/중지 속도가 느린 이유

  ## 1. 가상 머신(VM)의 시작/중지 과정
  - 하드웨어 레벨 가상화는 가상 머신(VM)이 **완전한 운영 체제와 가상 하드웨어 환경**을 실행해야 하기 때문에 느립니다.
  - **과정**:
    1. 하이퍼바이저가 가상 하드웨어를 초기화.
    2. 가상 머신 내부에서 운영 체제(OS)가 부팅 (BIOS/UEFI 실행 포함).
    3. 운영 체제 부팅 완료 후 VM이 준비 상태로 전환.

  이 과정은 실제 물리적인 하드웨어가 부팅되는 방식과 유사하기 때문에 시간이 소요됩니다.

  ---

  ## 2. 하드웨어 가상화의 작동 속도
  - VM은 하이퍼바이저를 통해 하드웨어 자원을 **간접적으로 접근**합니다.
  - 하드웨어 자원을 가상화하면서 발생하는 **오버헤드**가 작동 속도를 저하시킬 수 있습니다.
    - **예**: I/O 작업, 네트워크 호출 등에서 추가 처리 단계 필요.
  - 이로 인해 **OS-level Virtualization**보다 시작/중지 속도와 작동 속도가 느립니다.

  ---

  ## 3. OS 레벨 가상화의 빠른 속도 이유
  - 컨테이너는 호스트 OS의 커널을 공유하므로, 운영 체제를 부팅하거나 하드웨어를 가상화할 필요가 없습니다.
  - 애플리케이션과 라이브러리만 로드하면 되기 때문에:
    - **시작/중지 시간**이 빠릅니다.
    - **성능 오버헤드**가 적습니다.

  ---

  ## 요약
  | **특징**                 | **하드웨어 레벨 가상화 (VM)**          | **OS 레벨 가상화 (컨테이너)**      |
  |---------------------------|---------------------------------------|-----------------------------------|
  | **OS 부팅 필요 여부**     | 필요 (운영 체제 전체 부팅)            | 불필요 (커널 공유)               |
  | **가상 하드웨어 초기화**  | 있음                                 | 없음                            |
  | **I/O 처리 오버헤드**      | 큼                                   | 적음                            |
  | **시작/중지 속도**        | 느림                                | 빠름                            |









  ❓ A hypervisor, also known as a virtual machine monitor (VMM) or virtualizer, is a type of computer software, firmware or hardware that creates and runs virtual machines. A
    https://en.wikipedia.org/wiki/Hypervisor

    https://en.wikipedia.org/wiki/Hypervisor#Classification
      Type-1, native or bare-metal hypervisors
         ... e.g.? Hyper-V, Xen, VMware ESXi.
         사용 사례:
          대규모 데이터센터, 클라우드 서비스.
          
      Type-2 or hosted hypervisors
        호스트 OS에서 동작하는 일반 애플리케이션처럼 실행됩니다.
          예: VirtualBox, VMware Workstation.
          사용 사례:
          개발 환경, 데스크톱 가상화.


  Docker는 커널 기능을 활용하여 컨테이너를 생성 및 관리합니다:
    Namespace: 프로세스, 네트워크, 파일 시스템 등의 격리를 제공.
    cgroups(Control Groups): CPU, 메모리와 같은 자원 제한을 제공.
    하드웨어 가상화 기술(Type-1, Type-2)을 직접 사용하지 않습니다.
  Docker는 하이퍼바이저를 필요로 하지 않지만, Windows나 macOS에서 Docker Desktop을 사용할 때는 하이퍼바이저가 필요합니다.
    Windows에서 Docker는 Hyper-V 또는 WSL 2를 사용.
    macOS에서는 VirtualBox 또는 Apple의 하이퍼바이저를 사용.


  # Docker and its De pendency on Hypervisors in Windows/macOS

  ## 1. Docker's Basic Working Principle
  - Docker utilizes **Linux kernel features** (e.g., cgroups, namespaces) to provide virtualization.
  - This means Docker runs **natively on Linux** without needing a hypervisor.

  ---

  ## 2. Why Docker Needs Hypervisors on Windows and macOS

  ### (1) **Windows**
  - **Problem**: Windows does not have a Linux kernel, so Docker needs to emulate a Linux environment.
  - **Solution**:
    1. **Hyper-V**:
      - Hyper-V is used to run a Linux virtual machine (VM).
      - Docker containers run inside this Linux VM.
    2. **WSL 2 (Windows Subsystem for Linux 2)**:
      - WSL 2 is a lightweight Linux VM.
      - Docker utilizes WSL 2 to execute Linux containers.
      - **WSL 2 itself relies on Hyper-V** internally to function.

  **Conclusion**: On Windows, Docker indirectly relies on Hyper-V or WSL 2 (which uses Hyper-V) to provide a Linux kernel environment.

  ---

  ### (2) **macOS**
  - **Problem**: macOS also lacks a Linux kernel.
  - **Solution**:
    1. **Apple's Hypervisor Framework**:
      - Docker uses macOS's built-in virtualization capabilities to run a Linux VM.
    2. **VirtualBox (legacy)**:
      - Docker Desktop previously used VirtualBox to run Linux VMs but now primarily uses Apple's hypervisor framework.

  **Conclusion**: On macOS, Docker depends on hypervisors to provide a Linux environment.

  ---

  ## 3. Why Linux Doesn't Require a Hypervisor
  - Linux already includes the **native Linux kernel** that Docker directly utilizes.
  - Docker containers can run directly on the host OS without any need for additional virtualization layers.

  ---

  ## 4. Summary Table

  | **Environment** | **Hypervisor Dependency**                         | **Reason**                                                        |
  |------------------|---------------------------------------------------|--------------------------------------------------------------------|
  | **Linux**        | No                                                | Docker uses the native Linux kernel.                              |
  | **Windows**      | Yes (Hyper-V or WSL 2)                            | Docker needs a Linux kernel, provided by a Linux VM.              |
  | **macOS**        | Yes (Apple Hypervisor Framework or VirtualBox)    | Docker uses a Linux VM to emulate the Linux environment.          |

  ---

  ## Key Takeaways
  - **Linux**: Docker operates without a hypervisor because it uses the native Linux kernel.
  - **Windows**: Docker relies on Hyper-V or WSL 2 to emulate a Linux kernel.
  - **macOS**: Docker uses a hypervisor (Apple's framework) to run Linux VMs.



TODO: 📰 DOcker devcontainer 대체..  ; https://www.redhat.com/en/blog/5-reasons-choose-podman-2025
  https://code.visualstudio.com/remote/advancedcontainers/docker-options#_podman
  
  Podman은 Docker Hub를 비롯한 다양한 컨테이너 이미지 레지스트리와 호환됩니다. 이는 Podman이 OCI(Open Container Initiative) 표준을 준수하기 때문입니다. 따라서, Podman을 사용하여 Docker Hub에서 이미지를 pull하거나 push하는 것이 가능합니다. 또한, Podman의 CLI는 Docker와 유사하여, 기존 Docker 사용자들이 큰 변경 없이 Podman으로 전환할 수 있습니다. 


https://docs.docker.com/build/building/multi-stage/

// 영상 찾아보기


FPGA(Field-Programmable Gate Array)는 프로그래머가 원하는 대로 하드웨어 회로를 설계하고 수정할 수 있는 재구성 가능한 디지털 집적회로입니다. FPGA

📰 한글 깨짐
  Microsoft 365 언어 액세서리 팩 ; https://support.microsoft.com/ko-kr/office/microsoft-365-%EC%96%B8%EC%96%B4-%EC%95%A1%EC%84%B8%EC%84%9C%EB%A6%AC-%ED%8C%A9-82ee1236-0f9a-45ee-9c72-05b026ee809f

OpenCV: 얼굴 인식 및 랜드마크 추적을 위한 영상처리 구현.
MediaPipe: 얼굴 랜드마크 탐지 및 얼굴 메쉬 생성.
PySide6: GUI 기반 프로그램 설계 및 사용자 인터페이스 구현.
Flask: 로컬 서버 구축 및 카카오톡 연동 기능 제공.
ngrok: 로컬 서버에 HTTPS 접근을 위한 터널링 서비스.
카카오톡 오픈빌더: 채널 연동 및 사진 전송 챗봇 구현.


로봇 OS
  NAOqi
  OPPOS (Open Platform for Robotic Services)
  OpenRAVE
  MoveIt
  Microsoft Robotics Developer Studio (MRDS)




  cw cd ~/catkin_ws
  cs='cd ~/catkin _ws/src/

ROs echosystem
  App <-> ROS <-> Robot


  - node-based communication    
  - robot dev tools...
    cli, gazebo, rqt, rviz
ROS 동작 테스트
  turtlesim 패키지
  roscore
  rosrun turtlesim turtlesim_node
  rosrun turtlesim turtle_teleop_key
  rosrun rqt_graph rqt_graph
  //  

  VSCode ROS extension\

  Node, message
  Topic, Publisher, Subscriber
  service, Service server, Service client
  Action, Action server, Action client

  * Master 구동
    ROS 1 은 XMLRPC (XML-Remote Procedure Call) 사용함.
      마스터는 노드 정보 관리를 함.
      - %shell> roscore
  * Subscriber node 구동 (ROS_HOSTNAME -> ROS_MASTER_URL)
    - %shell> rosrun <package_name> <node_name>
  * Publisher node 구동
    - %shell> rosrun <package_name> <node_name>
  ;
    마스터는 구독자 노드에게 새로운 공급 정보를 알린다.
    구독자 노드는 공급자 노드의 TCP URI 주소와 포트번호를 전송.
    TCPROS 를 사용하여 발행자 노드와 직접 연결한다.
    발행자 노드는 구독자 노드에게 메시지를 전 송 (topic)
  
  topic 방식으로 접속을 끊지 않는 이상 지속적으로 메시지를 전송. 
  서비스는 토픽과 달리 1회에 한해 접속하고 서비스 요청 및 서비스 응답이 수행한 서로의 접속을 끓는다.? 1회성?

❔
  in ubuntu, rosrun turtlesim turtle_teleop_key
  in ubuntu, rostopic echo /turtle1/cmd_vel
  in ubuntu, rostopic echo /turtle1/pose

  rostpic list -v
  >> 방향키 움직이기. 한 번 움직이면 멈춰서, 계속 가려고 하면 우분투에서 방향키를 줘야 한다.
  // 같은 우분투에서 

  rostopic pub -1 /cmd_vel gemetry_msgs/Twist -- '[1.0, 0.0, 0.0]' '[0.0,0.0,0.0]'  


  rostopic pub -1 /cmd_vel gemetry_msgs/Twist -r 2 -- '[0.05, 0.0, 0.0]' '[0.0,0.0,0.0]'  
          
🚨 Cheese in Wayland. not works. but other x11-apps and camera streaming from opencv-python works well.
  ROS 도커 이미지 문제인지 알앗는데 일반 우분투 도커 이미지에서 동일. (kubuntu 24.10) ~

  Initializing machine ID from random generator.
  /usr/lib/tmpfiles.d/legacy.conf:13: Duplicate line for path "/run/lock", ignoring.
  /usr/lib/tmpfiles.d/systemd-network.conf:10: Failed to resolve user 'systemd-network': No such process
  /usr/lib/tmpfiles.d/systemd-network.conf:11: Failed to resolve user 'systemd-network': No such process
  /usr/lib/tmpfiles.d/systemd-network.conf:12: Failed to resolve user 'systemd-network': No such process
  /usr/lib/tmpfiles.d/systemd-network.conf:13: Failed to resolve user 'systemd-network': No such process
  /usr/lib/tmpfiles.d/systemd.conf:22: Failed to resolve group 'systemd-journal': No such process
  /usr/lib/tmpfiles.d/systemd.conf:23: Failed to resolve group 'systemd-journal': No such process
  /usr/lib/tmpfiles.d/systemd.conf:27: Failed to resolve group 'systemd-journal': No such process
  /usr/lib/tmpfiles.d/systemd.conf:28: Failed to resolve group 'systemd-journal': No such process
  /usr/lib/tmpfiles.d/systemd.conf:29: Failed to resolve group 'systemd-journal': No such process
  Creating group 'systemd-jou


  nvme0n1: Failed to write 'change' to '/sys/devices/pci0000:00/0000:00:06.0/0000:02:00.0/nvme/nvme0/nvme0n1/uevent': Read-only file system
  Created symlink '/etc/systemd/system/graphical.target.wants/udisks2.s 




  python3 -m venv myenv
  source myenv/bin/activate

  pip install --upgrade pip 

  pip install opencv-python

  python -c "import cv2; print(cv2.__version__)"


  import cv2

  # Open the default camera (usually the first camera)
  cap = cv2.VideoCapture(0) 

  if not cap.isOpened():
      print("Error: Could not open video device.")
  else:
      print("Press 'q' to quit.")

  while cap.isOpened():
      # Capture frame-by-frame
      ret, frame = cap.read()
      if not ret:
          print("Error: Failed to capture image.")
          break
  
      # Display the resulting frame
      cv2.imshow('Video Feed', frame)

      # Exit loop if 'q' is pressed
      if cv2.waitKey(1) & 0xFF == ord('q'):
          break

  # Release the capture and close windows
  cap.release()
  cv2.destr oyAllWindows() 
  

  된다. cheese 만 안되는듯. wayland 문제? ssh 터틀봇 or docker 로 접속해서도 안되늑널 보니.
  그냥 cheese 에서 자체가 device 인식을 못해. 도커 안에서뿐 아니라 ssh 에 접속해서도. 
  애초에 root 계정이야. opencv-python 에서는 잘 된다니까? cheese 명령어로만 안 돼. wayland 호환성 문제인가? cheese 의
  ㅇㅇ..



// https://wiki.ros.org/noetic/Installation/Ubuntu

: 'In order to prevent intreactive seession for 

debconf: falling back to frontend: Readline
Configuring keyboard-configuration
----------------------------------

The layout of keyboards varies per country, with some countries having multiple common layouts. Please select the country of origin
for the keyboard of this computer.
'

unzip ~/Downloads/Project_README.zip -d ~/Downloads/Project_README


https://www.saramin.co.kr/zf_user/jobs/relay/view?isMypage=no&rec_idx=49679985&recommend_ids=eJxNjrkVQ0EIA6txziEExC7E%2FXfhPezdH84TGoRGwqifUnnlG01B0AZyY7KqB%2BrCKHGLg4Sk60GkE7NrO21H5VFFFz2uWeji96%2FCqh6olD4qqJlO9K0KVuTz2NfIbU5pA%2B7INm%2FeVYLuOCpGtvDfLRC1NvtP5SOZqi%2BPekCj&view_type=mail_landing&gz=1&relayNonce=7a7a7081c508e3c9f977&immediately_apply_layer_open=n#seq=0


apt-get install sshpass
sshpass -p 'ssh접속비밀번호' ssh 'ssh접속계정'@'ssh접속주소' '명령어'
➡️ sshpass -p turtlebot ssh -XY ubuntu@10.10.14.119
NVIDIA Container Toolkit ; https://github.com/NVIDIA/nvidia-container-toolkit
  NVIDIA Container Toolkit has superseded NVIDIA Container Runtime ; https://github.com/NVIDIA/nvidia-container-runtime

  ## Installing with Apt ; https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/install-guide.html#installing-with-apt
bash -c "curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | sudo gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg \
  && curl -s -L https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list | \
    sed 's#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g' | \
    sudo tee /etc/apt/sources.list.d/nvidia-container-toolkit.list
"
sudo apt update && sudo apt install -y nvidia-container-toolkit


cuDNN (CUDA Deep Neural Network Library): 딥러닝 연산에 최적화된 GPU 가속 라이브러리로, 딥러닝 프레임워크의 성능을 향상시킵니다.


!!!❗ sudo apt install nvtop 
  # 잘 되는데? GPU 50% 까지 잘 올라감.
  docker run --rm -it --gpus all \
    -v /tmp/.X11-unix:/tmp/.X11-unix \
    -e DISPLAY=$DISPLAY \
    --runtime=nvidia \
    --gpus all \  
    ros:noetic-robot

    sudo apt install -y libgl1-mesa-glx libglu1-mesa \
      glmark2
  glmark2

  mpv --hwdec=help
  mpv 
  mpv --gpu-context=wayland --hwdec=nvdec  "https://youtu.be/ceIvN7fcoo0" --ytdl-format="bestvideo[height<=2160]+bestaudio"
  mpv --hwdec=nvdec --vo=gpu --log-file=mpv.log "https://youtu.be/ceIvN7fcoo0"

  mpv --gpu-context=xwayland --hwdec=nvdec /dev/video0

  mpv --list-options



mpv  --log-file=mpv.log --hwdec=cuda-copy --gpu-context=wayland /dev/video0




VLC 는 지연이 MPV 보다 훨씬 적은데 아직도 지연이 잇다. 하드웨어 GPU 가속 0% 인건 동일함
vlc v4l2:///dev/video0 --avcodec-hw=vaapi




ENV TZ=Asia/Seoul
  https://velog.io/@whattsup_kim/GPU-%EA%B0%9C%EB%B0%9C%ED%99%98%EA%B2%BD-%EA%B5%AC%EC%B6%95%ED%95%98%EA%B8%B0-docker%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%98%EC%97%AC-%EA%B0%9C%EB%B0%9C%ED%99%98%EA%B2%BD-%ED%95%9C-%EB%B2%88%EC%97%90-%EA%B5%AC%EC%B6%95%ED%95%98%EA%B8%B0

>> ❗ Haruna는 KDE Plasma 환경에서 Qt-based의 미디어 플레이어로, KDE와 잘 통합되어 있습니다.d
  📅 2025-01-08 21:36:05
  kamoso 는 빠르다.
  webcamoid 도 kamoso 처럼 정상적으로 실시간 스트리밍이 되어 빠르긴한데, webcamoid 는 CPU 사용률이 높은 문제가 있다.
  vlc, mpv 는 gpu 를 사용하지 않고, 지연시간이 매우 길다. 특히 mpv 는 사용 못할 정도로 길다.
  vlc, mpv가 wayland 랑 호환이 안되는 문제 같기도 함.

  sudo apt update
  sudo apt upgrade -y "gstreamer*"
  아님 이 문제엿나?

  webcamoid ; 각각의 비율은 시스템에서 할당된 CPU 코어들에 대한 비율을 나타내므로, 단순히 두 값이 합산되지 않습니다.

  Webcamoid vs kamoso
    ? libvpx VP8    to      NVIDIA NVENC av1 encoder
    kamoso flatpak 에서의 경우도 같다. ; https://flathub.org/apps/org.kde.kamoso

    Changes in version 24.12.0
  ⚠️ 본체에 직접 USB 2.0 슬롯에 GEMBIRD USB2.0 PC CAMERA 를 꽂으니까 스트리밍이 매우 느리다. 📅 2025-01-08 21:57:04
    3.0 슬롯에 꽂을 것.. webcamoid or kamoso 를 사용하자.


osrf docker vs .


내가 SSH 가 아닌 kubuntu 24 wayland 환경에서 devcontainer 를 사용햇다가,
ssh 로 kubuntu24 에 접속해서 devcontianer 로 개발하려는데, 컨테이너를 재시작하려니까
 docker container start ded8a5af1e88
Error response from daemon: invalid mount config for type "bind": bind source path does not exist: /run/user/1000/wayland-0
Error: failed to start containers: ded8a5af1e88


{
    "Type": "bind",
    "Source": "/run/user/1000/wayland-0",
    "Destination": "/tmp/vscode-wayland-882561eb-aa7e-43a1-8bee-04db2bf28bfd.sock",
    "Mode": "",
    "RW": true,
    "Propagation": "rprivate"
},    



⚠️
  TurtleBot3 SBC(TurtleBot이 실행되는 싱글보드 컴퓨터)에서 turtlebot3_robot.launch가 실행될 때
  , 내부적으로 roscore를 실행하려고 시도합니다.
  그러나 이미 Remote PC에서 roscore가 실행 중이라면 충돌이 발생할 수 있습니다. ROS는 네트워크에서 단 하나의 ROS 마스터만 허용하기 때문입니다.


  roscore는 기본 프로세스:
    ROS 네트워크의 중심으로, 모든 노드가 이를 통해 통신합니다.
    이미 roscore를 실행했다면 추가로 실행할 필요가 없습니다.  
    turtlebot3_remote.launch는 roscore를 포함:

    turtlebot3_remote.launch를 실행할 때 roscore가 실행되어 있지 않다면 자동으로 roscore를 실행합니다.
    따라서 별도로 roscore를 실행하지 않아도 됩니다.
    중복 실행 문제:

    네트워크에 두 개의 ROS 마스터(roscore)가 존재하면 노드 간 통신이 불가능하거나 충돌이 발생할 수 있습니다.      

  rosrun rviz rviz -d `rospack find turtlebot3_description`/rviz/burger.rviz


🛍️ e.g.
  https://github.com/envoyproxy/envoy/blob/main/.devcontainer/devcontainer.json




bass source /opt/ros/noetic/setup.bash

      vscode@iot-04 /workspace> which rosrun
      /opt/ros/noetic/bin/rosrun  
vscode@iot-04 /workspace> 



ss -tnlp | grep 11311

Docker 컨테이너는 기본적으로 default bridge 네트워크에서 실행됩니다.
동일한 네트워크 대역 안에 있는 컨테이너끼리는 컨테이너 이름(hostname)으로 통신이 가능합니다.


https://netsarang.atlassian.net/wiki/spaces/KRSUP/pages/1999372381/MIT-SHM+missing      

FFmpeg build
  https://trac.ffmpeg.org/wiki/CompilationGuide
https://ffmpeg.org/documentation.html







✅ FFMPEG build 
# https://trac.ffmpeg.org/wiki/CompilationGuide
  ⚓ ​Docker image with pre-compiled ffmpeg and libraries ; https://hub.docker.com/r/jrottenberg/ffmpeg/
  docker pull jrottenberg/ffmpeg:6.1.2-ubuntu2404
  # https://ffmpeg.org/
  docker run --rm -it --name ffmpeg_test --entrypoint bash jrottenberg/ffmpeg:6.1.2-ubuntu2404
  /usr/local/bin/ffmpeg
  docker cp ffmpeg_test:/opt/ffmpeg/bin/ffmpeg
  //
  6.1.2-ubuntu2404


  which ffmpeg
  ldd /usr/local/bin/ffmpeg

* 1080p30 Decode Streams
  - Grpahic Cards Performance Rank:
    H100  >  L40S >  L4  >  A100 >  A10
  H.264, HEVC 8-bit, HEVC-10bit, VP9-8bit, AV1
* 2160p30 HQ (Latency Tolerant) Encoding, 108p30 LL (Latency Sensitive) Encoding
  Single 8480 - x264 LL medium, A10 H.264 p1, A10 HEVC p1, L4 H.264 p1, L4 HEVC p1, L4 AV1 p1, L40S H.264 p1, L40S HEVC p1, L40S AV1 p1
  single 8480 x264 HQ meidum, A10 H.264 p4, A10 HEVC p4, L4 H.264 p4, L4 HEVC p4, L4 AV! p4, L40S H.265 p4, L40S HEVC p4, L40S AV1 p4
ffmpeg -i ~/Downloads/Polar_orbit.ogv.360p.webm -c:v h264_nvenc output.mp4
ffplay -hwaccel cuda output.mp4


ffmpeg -encoders

⚓ NVIDIA Video Technologies ; https://docs.nvidia.com/video-technologies/index.html


Workstation 용 CUDA 가속 앱 개발
  # 13.2.3. IDE Integration
  #  ⚓ Nsight Visual Studio Code Edition ; https://marketplace.visualstudio.com/items?itemName=NVIDIA.nsight-vscode-edition

    # 13.2.2. Install Writable Samples ; https://github.com/nvidia/cuda-samples



⚠️ wayland not use nvidira gpu driver
  https://askubuntu.com/questions/1510264/nvidia-gpu-does-not-work-with-wayland-in-ubuntu-22-04-4

  ❯ nvidia-smi
  Wed Jan  8 20:13:12 2025       
  +-----------------------------------------------------------------------------------------+
  | NVIDIA-SMI 560.35.03              Driver Version: 560.35.03      CUDA Version: 12.6     |

  # https://www.reddit.com/r/linux_gaming/comments/17ubgrl/nvidia_libnvidiaeglwayland1_do_i_need_to_install/

  https://launchpad.net/ubuntu/+source/egl-wayland

  >>> sudo apt install libnvidia-egl-wayland1 libnvidia-egl-wayland-dev


# Video Codec APIs
  💡 DirectX and Vulkan Video, on the other hand, provide low-level, hardware-agnostic APIs, and attempt to provide more precise control over resource/memory allocation, task scheduling, and work submission to video hardware engines.


GStreamer vs ffmpeg
⚓📎 GStreamer ; https://en.wikipedia.org/wiki/GStreamer
  GStreamer is a pipeline-based multimedia framework that links together a wide variety of media processing systems to complete complex workflows.

  https://gstreamer.freedesktop.org/

⚓ FFMpeg ; https://en.wikipedia.org/wiki/FFmpeg
  FFmpeg is a free and open-source software project consisting of a suite of libraries and programs for handling video, audio, and other multimedia files and streams.

MJPEG (Motion JPEG) 방식은
  MJPEG의 효율성
  MJPEG 방식은 각 프레임을 독립적인 JPEG 이미지로 저장하므로, 프레임 간의 중복을 제거하지 않고 각각을 독립적으로 압축합니다.
  단점:
  비효율적인 압축: 프레임 간 변화가 적더라도, 매 프레임마다 전체 이미지를 다시 압축하므로, 파일 크기가 커질 수 있습니다.
  압축률이 낮음: 다른 비디오 코덱들(H.264, HEVC 등)에 비해 압축 효율이 상대적으로 낮습니다.
  대역폭 소비가 많음: 비디오 스트리밍 시, 높은 대역폭을 요구합니다.

직렬화란?
  직렬화는 데이터를 바이트(byte) 형태로 변환하여 네트워크로 전송하거나 저장할 수 있게 만드는 과정입니다.
  OpenCV에서 cv2.VideoCapture로 프레임을 캡처한 후, 각 프레임을 **바이트 배열(원본 데이터)**로 변환해 전송합니다.

  장점
    단순함:
      원본 데이터를 직렬화하여 그대로 전송하므로, 별도의 인코딩/압축 과정이 필요 없음.
    빠른 개발:
      OpenCV와 Python의 직렬화 라이브러리(pickle, msgpack 등)를 활용하면 쉽게 구현 가능.
  단점
    효율성 부족:
      원본 데이터 크기가 크기 때문에, 네트워크 대역폭을 많이 소모.
    고해상도 프레임을 전송할 경우 지연(latency) 문제가 발생할 수 있음.
      실시간 전송에 부적합:
    프레임을 인코딩하지 않고 원본 데이터로 전송하므로 네트워크 부하가 커질 수 있음.


⚠️ WebRTC는 멀티미디어(오디오, 비디오) 스트리밍과 P2P 통신을 위해 설계되었습니다.
  WebRTC는 기본적으로 P2P에 최적화되어 있어, 1:N 구조를 위해 추가적인 **서버 구성(SFU)**이 필요합니다.
  WebRTC는 브라우저 간 실시간 화상 통화나 데이터 전송과 같은 애플리케이션에서 주로 사용됩니다.
  브라우저 기반 애플리케이션에서는 저지연 비디오/오디오 데이터 스트리밍이 중요한 요구 사항입니다.
  !!! 그러나 WebRTC는 드론/로봇 관제 시스템이 필요로 하는 센서 데이터, 제어 명령 처리에 특화되어 있지 않습니다.

  센서 데이터 처리에는 MAVLink 같은 프로토콜이 더 적합합니다.
    드론 통신에 특화: 센서 데이터와 제어 명령의 효율적 처리.
    비디오 스트림과는 별개로, 센서 데이터와 명령 전송을 처리하는 데 적합.
    비디오 스트리밍은 지원하지 않으므로, RTSP/RTMP와 함께 사용해야 함
  RTSP, RTMP, MQTT 등은 중앙 집중식 제어 시스템을 쉽게 구성할 수 있어 이런 요구에 적합합니다.



TODO 내일: 
  iniialiation.. about 문서 README 에 쓰기 -
  라즈베리파이 64비트 설치.
  ROS 문제 해결
    codec.. nvidia 사용못하는거같음.. gpu driver..



list of level 1 subjects
  - redaer
  
※※※※※※※※※※※※※※※※※※※※※※※※※※※※※※
⭕ pdf reader 🔪 Okular
  https://github.com/KDE/okular
  🔏 License: GPL-2.0-or-later
  Support OS: Linux, Windows, macOS
  Suuport Highlihting, Annotation
  Easy Shortcut keys
    * Menu - Bookmarks
      - Add/Remove Bookmarks; ⌨️ Ctrl + B
    * Browse; ⌨️ Ctrl + 1
    * Area Selection; ⌨️ Ctrl + 3
    * Text Selection; ⌨️ Ctrl + 4
    * Table Selection; ⌨️ Ctrl + 5
    * ...; ⌨️ 1 ~ 6 ...


ffmpeg -hwaccels
  * VDPAU (Video Decode and Presentation API for Unix)
    Linux에서 NVIDIA 또는 AMD GPU를 활용한 하드웨어 가속 디코딩 방식입니다. NVIDIA 드라이버가 설치되어 있으면 작동할 가능성이 높습니다.
    하지만 VDPAU는 구식 기술로, 최신 NVENC/NVDEC 대신 사용되는 경우가 드뭅니다.
  * VAAPI (Video Acceleration API)
    Intel과 AMD GPU에서 작동하는 Linux 기반 하드웨어 가속 방식입니다. NVIDIA GPU에서는 일반적으로 지원되지 않습니다.
  * DRM (Direct Rendering Manager)
    주로 Linux의 저수준 그래픽 API를 사용하여 하드웨어 가속을 지원합니다. 특정 환경에서만 사용됩니다.
  * Vulkan
    GPU를 사용하는 범용 하드웨어 가속 기술입니다. 그래픽 처리와 함께 하드웨어 가속 비디오 처리를 지원합니다.
    ❓ NVIDIA Vulkan 드라이버가 설치된 경우 사용할 수 있습니다.


ffmpeg -init_hw_device vulkan=vk -filter_hw_device vk -hwaccel vulkan -i mp4.mp4 -vf 'format=nv12,hwupload' -c:v h264_vulkan output.mp4


❯ ffmpeg -init_hw_device vulkan=vk -filter_hw_device vk -hwaccel vulkan -i 
>>
  Stream mapping:
    Stream #0:0 -> #0:0 (h264 (native) -> h264 (h264_vulkan))
  Output #0, mp4, to 'output.mp4':
    Stream #0:0(und): Video: h264 (High) (avc1 / 0x31637661), vulkan(tv, bt470bg/smpte170m/bt470bg, progressive), 640x360 [SAR 1:1 DAR 16:9], q=2-31, 25 fps, 12800 tbn (default)
      Metadata:
        encoder         : Lavc61.31.100 h264_vulkan    


ffplay output.mp4
ffplay -hwaccel vulkan -vcodec h264_vulkan output.mp4

echo $WAYLAND_DISPLAY

export LIBVA_DRIVER_NAME=nvidia
export VDPAU_DRIVER=nvidia


ffplay -loglevel warning -hwaccel vdpau -vcodec h264 output.mp4   
ffplay -loglevel warning -hwaccel cuda -vcodec h264_cuvid output.mp4



SDL2는 Simple DirectMedia Layer 2의 약자입니다.
  SDL2는 멀티미디어 응용 프로그램(게임, 비디오 플레이어 등)을 개발하기 위해 사용되는 크로스 플랫폼 개발 라이브러리로, 다음과 같은 기능을 제공합니다:

  SDL은 C로 짜여진 크로스플랫폼 멀티미디어 라이브러리입니다. 비디오,오디오,사용자 입력등을 추상화하여 API로 제공하며 리눅스, 윈도우, 안드로이드, iOS, 타이젠에서 사용가능하게 지원
  sdl2-config --libs
    -lSDL2

    FFplay는 FFmpeg 라이브러리를 활용하면서 비디오 렌더링은 SDL2를 통해 수행합니다.

OpenGL(Open Graphics Library) 는 실리콘 그래픽스사에서 만든 2차원/3차원 그래픽스 표준 API 규격

vkcube
>>
  Selected WSI platform: xcb
  Selected GPU 0: NVIDIA GeForce RTX 4070 SUPER, type: DiscreteGpu
// WSI(Windows System Integration): Vulkan이 사용하는 창 관리 시스템(Windowing System Integration)
glmark2
=======================================================
    OpenGL Information
    GL_VENDOR:      Mesa
    GL_RENDERER:    llvmpipe (LLVM 19.1.0, 256 bits)

glxinfo | grep "OpenGL renderer"
  >> OpenGL renderer string: llvmpipe (LLVM 19.1.0, 256 bits)

export LIBGL_ALWAYS_INDIRECT=1
glxinfo | grep "OpenGL renderer"
  glxinfo | grep "OpenGL renderer"
  >> 
  OpenGL renderer string: NVIDIA GeForce GTX 1080 Ti/PCIe/SSE2
  X Error of failed request:  GLXBadCurrentWindow
    Major opcode of failed request:  149 (GLX)
    Minor opcode of failed request:  5 (X_GLXMakeCurrent)
    Serial number of failed request:  56
    Current serial number in output stream:  56

❓ SSH로 접속 중인 경우, 기본적으로 X11 포워딩은 원격 GPU 가속을 지원하지 않습니다. 이 때문에 glxinfo나 GPU 관련 프로그램 실행 시 llvmpipe(CPU 기반 소프트웨어 렌더러)가 사용됩니다. 원격 GPU 가속을 활성화하려면 몇 가지 설정을 추가해야 합니다.
  OpenGL GPU 렌더링 강제 설정: 환경 변수 LIBGL_ALWAYS_INDIRECT를 설정합니다:
  export LIBGL_ALWAYS_INDIRECT=0
  export LLVM_ENABLE_ASSERTIONS=0
  
  GLX는 OpenGL과 X11 사이의 통신을 담당하는 계층입니다. SSH X11 포워딩 환경에서는 GLX가 GPU 하드웨어 가속을 제대로 활용하지 못할 수 있습니다.

LLVM은 **"Low Level Virtual Machine"**의 약자입니다. 처음에는 컴파일러를 위한 저수준 가상 머신을 목표로 설계되었지만, 현재는 다양한 컴파일러 및 언어 지원 도구를 포함하는 유연하고 강력한 컴파일러 인프라 및 툴체인으로 발전했습니다
**LLVM IR(Intermediate Representation)**은 하드웨어 독립적인 중간 코드 형식으로, 최적화 및 분석에 매우 효율적입니다.


https://askubuntu.com/questions/855945/what-exactly-does-gcc-multilib-mean-on-ubuntu


⚓ List of software package management systems ; https://en.wikipedia.org/wiki/List_of_software_package_management_systems
In free and open-source software (FOSS) development communities, a forge is a web-based collaborative software platform for both developing and sharing computer applications.

면접
  ❓ 🆚 Unicast, Multicast, Broadcast
    프로토콜 예	HTTP, TCP/IPC         mDNS, IGMPIPC     ARP, DHCP
      유니캐스트: 하나의 장치에 데이터를 전송하는 가장 일반적인 방식. (1:1)
      멀티캐스트: 특정 그룹에 데이터를 전송하여 네트워크 효율성을 높임. (1:다)
      브로드캐스트: 모든 장치에 데이터를 전송, 네트워크 부하가 클 수 있음. (1:전체)
        ARP는 IP 주소를 MAC 주소로 변환하는 프로토콜입니다.
          네트워크 상의 통신은 IP 주소를 사용하지만, 실제로 데이터는 **MAC 주소(하드웨어 주소)**를 기반으로 전송됩니다.
          IP 주소와 MAC 주소 간의 매핑을 수행하기 위해 ARP가 사용됩니다.
        DHCP는 네트워크 장치에 IP 주소를 자동으로 할당하는 프로토콜입니다
          네트워크 관리자는 DHCP를 통해 IP 주소, 서브넷 마스크, 게이트웨이, DNS 서버 등을 자동으로 배포할 수 있습니다.
    Avahi, mDNS
    #️⃣📍 Packet structure ; https://en.wikipedia.org/wiki/Multicast_DNS#Packet_structure
      IPv4 address 224.0.0.251 or IPv6 address ff02::fb
      UDP port 5353
    ⚓ IETF RFC 6762 🔪 Multicast DNS ; https://datatracker.ietf.org/doc/html/rfc6762 



Project
  Project name
    고객을 대신해 택배를 옮겨주는 스마트 Automated Guided Vehicle (AGV)
  
  
  배경
    3세대 아파트부터 지상에 주차장이 없다? 부지도 좁고..
    저상탑차?
    CJ사건 - 
    >> 정문에 택배보관소를 운영하느 곳이 많아졋다.
      수치포인트.
    

    정문 수취점  /  터틀봇  /  엘레베이터 / 월패드/핸드폰

    핸드폰 - "택배 배송받기" 를 눌러야 함.
    정문 쉬취점 -> 터틀봇 -> 엘레베이터와 통신 -        
    터틀봇: 사진 찍어야지.


    라즈베리파이 4B 서버
      STM (정문 택배함)
      AGv (터틀봇)
      문&엘베 (2)



namp  
Nmap scan report for 10.10.14.185
Host is up (0.00046s latency).
MAC Address: ... (Nvidia)


git log --graph --oneline --decorate --all
git remote add upstream https://github.com/opmaksim/Project_SignalMaster.git
git fetch upstream
git merge upstream/main

sudo apt install iftop
sudo iftop -i eno1 -n -F 10.10.14.0/24

jsnano @ nano123

git log --oneline --graph --all


마크다운 문서
.. 미디어파이프.. overview 작성

    ## Reference
    (**Mediapipe** [Face Detection](https://ai.google.dev/edge/mediapipe/solutions/vision/face_detector), [Face landmark detection](https://ai.google.dev/edge/mediapipe/solutions/vision/face_landmarker))

선풍기ㅣ.. FSM 을 앞으로 가져오기..

Project 구조.. 맞나?
    - [FSM (Finite State Machine)](#fsm-finite-state-machine)
      - [🎛️ Inputs (Button Definitions)](#️-inputs-button-definitions)
      - [📊 Diagram](#-diagram)
      이거 overview 의 가장 위로 옮기기.


- [Kernel Timer Mini Project](#kernel-timer-mini-project)
  - [Project Introduction](#project-introduction)
    - [Features](#features)
- [LED Timer and Button Interaction](#led-timer-and-button-interaction)
  - [동작 흐름](#동작-흐름)
    - [1. 초기 LED 반전 시작](#1-초기-led-반전-시작)
    - [2. 버튼 동작에 따른 LED/타이머 제어](#2-버튼-동작에-따른-led타이머-제어)
    - [3. 애플리케이션 종료](#3-애플리케이션-종료)
  - [🎯 Project Purposes](#-project-purposes)
  - [🖼️ Hardware Setup](#️-hardware-setup)
    - [Notes](#notes)
    - [Using Devices](#using-devices)
    - [GPIO Pinout Table](#gpio-pinout-table)
  - [🎥 Kernel Timer Demo](#-kernel-timer-demo)
  - [🖼️ Software Setup](#️-software-setup)
  - [🌐 Project Overview](#-project-overview)
    - [🛠️ Tools](#️-tools)
      - [\[🧑‍💻 Software\]](#-software)
      - [\[🖥️ Hardware\]](#️-hardware)
    - [📁 Directory Structure](#-directory-structure)
    - [FSM (Finite State Machine)](#fsm-finite-state-machine)
      - [🎛️ Inputs (Button Definitions)](#️-inputs-button-definitions)
      - [📊 Diagram](#-diagram)
  - [Retrospective](#retrospective)
    - [📌 Key Learnings and Improvements](#-key-learnings-and-improvements)



- [Fan Project](#fan-project) 
  - [Project Introduction](#project-introduction)
    - [Features](#features)
    - [🎯 Purposes](#-purposes)
    - [🖼️ Hardware Setup](#️-hardware-setup)
      - [Breadboard Setup](#breadboard-setup)
    - [🎥 Fan Machine Demo](#-fan-machine-demo)
  - [🌐 Project Overview](#-project-overview)
    - [🛠️ Tools](#️-tools) 
      - [\[🧑‍💻 Software\]](#-software)
      - [\[🖥️ Hardware\]](#️-hardware)
    - [📁 Directory Structure](#-directory-structure)
    - [📖 Design Patterns and Benefits](#-design-patterns-and-benefits)
      - [Layer Overview](#layer-overview)
      - [Applied Design Pattern](#applied-design-pattern)
      - [❗ Benefits of the MVP + Service Pattern](#-benefits-of-the-mvp--service-pattern)
    - [FSM (Finite State Machine)](#fsm-finite-state-machine)
      - [🎛️ Inputs (Button Definitions)](#️-inputs-button-definitions)
      - [📊 Diagram](#-diagram)
  - [Retrospective](#retrospective)
    - [📌 Key Learnings and Improvements](#-key-learnings-and-improvements)

## Project Introduction

https://m.blog.naver.com/pareko/223026064543    


https://download.qt.io/static/mirrorlist/

pi19@pi ~> sudo apt update && sudo apt upgrade -y


사용자 공간이 64비트인지 32비트인지 // 그리고 현재 커널 모드가 32비트인지 64비트인지 어떻게 확인하더라? 명령어로
dpkg --archiecture ? 어떻게 보더라 명령어로..




http://www.yz.yamagata-u.ac.jp/ 
http://jaist.ac.jp/

systemctl status systemd-resolved
sudo systemctl restart systemd-resolved



20099] Done
[1620099] perform qt.tools.qtcreator operation: Settings
[1620099]       - arguments: path=/home/pi19/Qt//Tools/sdktool/share/qtcreator/QtProject/QtCreator.ini, method=add_array_value, key=Plugins/ForceEnabled, value=UpdateInfo
[1620111] Done
[1620116] Installing component Qt License LGPL
[1620116] backup qt.license.lgpl operation: License
[1620116]       - arguments:
[1620116] Done
[1620117] perform qt.license.lgpl operation: License
[1620117]       - arguments:
[1620119] Done
[1620123] Installing component Qt 6.8.1 Documentation
[1620123] backup qt.qt6.681.doc operation: Settings
[1620123]       - arguments: path=/home/pi19/Qt//Tools/sdktool/share/qtcreator/QtProject/QtCreator.ini, method=add_array_value, key=Help/InstalledDocumentation, value=/home/pi19/Qt/Docs/Qt-6.8.1/
[1620123] Done
[1620124] perform qt.qt6.681.doc operation: Settings
[1620124]       - arguments: path=/home/pi19/Qt//Tools/sdktool/share/qtcreator/QtProject/QtCreator.ini, method=add_array_value, key=Help/InstalledDocumentation, value=/home/pi19/Qt/Docs/Qt-6.8.1/
[1620139] Done
[1620141] Installing component Qt 6.8.1 Examples
[1620142] backup qt.qt6.681.examples operation: Settings
[1620142]       - arguments: path=/home/pi19/Qt//Tools/sdktool/share/qtcreator/QtProject/QtCreator.ini, method=add_array_value, key=Help/InstalledExamples, value=Qt6 6.8.1|/home/pi19/Qt/Docs/Qt-6.8.1|/home/pi19/Qt/Examples/Qt-6.8.1/
[1620142] Done
[1620142] perform qt.qt6.681.examples operation: Settings
[1620142]       - arguments: path=/home/pi19/Qt//Tools/sdktool/share/qtcreator/QtProject/QtCreator.ini, method=add_array_value, key=Help/InstalledExamples, value=Qt6 6.8.1|/home/pi19/Qt/Docs/Qt-6.8.1|/home/pi19/Qt/Examples/Qt-6.8.1/
[1620186] Done
[1620189] Installing component Desktop
[1620189] backup qt.qt6.681.linux_gcc_arm64 operation: ConsumeOutput
[1620189]       - arguments: qt.qt6.681.linux_gcc_arm64_qmakeoutput, /home/pi19/Qt/6.8.1/gcc_arm64/bin/qmake, -query
[1620189] Done
[1620190] perform qt.qt6.681.linux_gcc_arm64 operation: ConsumeOutput
[1620190]       - arguments: qt.qt6.681.linux_gcc_arm64_qmakeoutput, /home/pi19/Qt/6.8.1/gcc_arm64/bin/qmake, -query
[1620466] Warning: /home/pi19/Qt/6.8.1/ /bin/qmake" QList("-query") crashed with exi  t code 11 standard output:  "" error output:  "
[1620467] Done
[1620467] Operation \"ConsumeOutput\" with arguments \"qt.qt6.681.linux_gcc_arm64_qmakeoutput; /home/pi19/Qt/6.8.1/gcc_arm64/bin/qmake; -query\" failed: Failed to run command: \"/home/pi19/Qt/6.8.1/gcc_arm64/bin/qmake\": Process crashed
[1620467] installationErrorWithCancel : Installer Error : Error during installation process (qt.qt6.681.linux_gcc_arm64):
Failed to run command: "/home/pi19/Qt/6.8.1/gcc_arm64/bin/qmake": Process crashed Retry|Ignore|Cancel
[1620467] Answer: "Cancel"
[1620495] undo qt.qt6.681.linux_gcc_arm64 operation: ConsumeOutput
[1620495]       - arguments: qt.qt6.681.linux_gcc_arm64_qmakeoutput, /home/pi19/Qt/6.8.1/gcc_arm64/bin/qmake, -query
[1620495] Done
[1620496] undo qt.qt6.681.examples operation: Settings
[1620496]       - arguments: path=/home/pi19/Qt//Tools/sdktool/share/qtcreator/QtProject/QtCreator.ini, method=add_array_value, key=Help/InstalledExamples, value=Qt6 6.8.1|/home/pi19/Qt/Docs/Qt-6.8.1|/home/pi19/Qt/Examples/Qt-6.8.1/
[1620508] Done
[1620509] undo qt.qt6.681.doc operation: Settings
[1620509]       - arguments: path=/home/pi19/Qt//Tools/sdktool/share/qtcreator/QtProject/QtCreator.ini, method=add_array_value, key=Help/InstalledDocumentation, value=/home/pi19/Qt/Docs/Qt-6.8.1/
[1620635] Done
[1620636] undo qt.license.lgpl operation: License
[1620636]       - arguments: /home/pi19/Qt/Licenses
[1620637] Done
[1620641] undo qt.tools.qtcreator operation: Settings
[1620641]       - arguments: path=/home/pi19/Qt//Tools/sdktool/share/qtcreator/QtProject/QtCreator.ini, method=add_array_value, key=Plugins/ForceEnabled, value=UpdateInfo
[1620654] Done
[1620654] undo qt.tools.qtcreator operation: Settings
[1620654]       - arguments: path=/home/pi19/Qt//Tools/sdktool/share/qtcreator/QtProject/QtCreator.ini, method=set, key=Updater/MaintenanceTool, value=/home/pi19/Qt/MaintenanceTool
[1620666] Done
[1620666] undo qt.qt6.681.doc.qtlottie operation: E
https://www.qt-dev.com/board.php?board=qnaboard&command=body&no=1019
https://forum.qt.io/topic/159564/qt-creator-installer-setup-fails-on-linux-arm-process-crashed



sudo nano /etc/dphys-swapfile

  # set size to absolute value, leaving empty (default) then uses computed va>
  #   you most likely don't want this, unless you have an special disk situat>
  CONF_SWAPSIZE=2048

  pi19@pi ~> sudo dphys-swapfile setup
            sudo dphys-swapfile swapon
  want /var/swap=2048MByte, checking existing: deleting wrong size file (536870912), generating swapfile ... of 2048MBytes
  

sudo apt install -y qt6-base-dev
ln -s /usr/lib/qt6/bin/qmake ~/Qt/6.8.1/gcc_arm64/bin/qmake


1. 음.. 내가 adds-on 모듈은 필요한데.. 그 우분투에서 qt 앱을 라즈베리파이 타겟으로 크로스컴파일하고 라즈베리파이 타겟 내에서 생성된 앱을 실행할 때 저 binary 는 필요가 없나?

2. 내가 일단 adds-on 모듈이 모두 있는 최소단위를 설치하려고 하거든?
qt6.8.0-full	
essential module libraries
essential module headers
essential module private headers
essential module runtime tools
essential module development tools
add-on module libraries
add-on module headers
add-on module private headers
add-on module runtime tools
add-on module development tools
sources
//
그리고 내가 실제로 크로스컴파일할때 사욯아던 CMAkePresets.json 이야.

    {
      "name": "Qt-6.8.0-clang-arm32v7-raspberrypi4-bookworm",
      "generator": "Ninja Multi-Config",
      "binaryDir": "${sourceDir}/build/arm32v7-raspberrypi4",
      "description": "Cross-compile for Raspberry Pi (ARM32v7)",
      "environment": {
        "PATH": "/home/linuxbrew/.linuxbrew/bin:/bin:/usr/bin"
      },
      "cacheVariables": {
        "CMAKE_CXX_COMPILER": "clang++",
        "CMAKE_MAKE_PROGRAM": "ninja",
        "CMAKE_EXE_LINKER_FLAGS": "-fuse-ld=lld",
        "CMAKE_CXX_STANDARD": "23",
        "CMAKE_CXX_STANDARD_REQUIRED": "ON",
        "CMAKE_EXPORT_COMPILE_COMMANDS": "ON",
        "CMAKE_PREFIX_PATH": "$env{HOME}/qt-platforms/qt6.8.0-arm32v7-bookworm",
        "QT_HOST_PATH": "$env{HOME}/Qt/6.8.0/gcc_64",
        "Qt6_DIR": "$env{HOME}/qt-platforms/qt6.8.0-arm32v7-bookworm/lib/cmake/Qt6"
      },
      "toolchainFile": "${sourceDir}/cmake-qt-6.8.0-clang-arm32v7-raspberrypi4-toolchain.cmake"
    }

//
그러면 linux_gcc_arm64 skip component 해도 되나?
ls /home/wbfw109v2/Downloads/qt6.8.0-arm32v7-bookworm-dev_env/bin
qmake*  qmake6*  qml*  qmleasing*  qmlpreview*  qmlscene*  qt-cmake*  qt-cmake-create*  qt-configure-module*  qtpaths*  qtpaths6*  target_qt.conf

다 qt 앱 실행과는 상관없는거지?


결론
크로스 컴파일 환경:

라즈베리파이 타겟용 바이너리(qmake, qt-cmake, qt-configure-module 등)는 우분투 크로스 컴파일 환경에서는 필요하지 않음.
우분투 크로스 컴파일 환경에서는 우분투 호스트용 바이너리(gcc_64 등)만 필요.
크로스 컴파일 시, 타겟용 라이브러리와 헤더가 필요하며, 이들은 sysroot에 포함.
라즈베리파이 타겟:

라즈베리파이 타겟에서 Qt 앱 실행만 할 경우, 타겟 시스템에서 개발 도구 바이너리(예: qmake, qt-cmake)는 필요하지 않음.
타겟에서 실행 시 필요한 것은 타겟용 Qt 런타임 라이브러리(예: libQt6Core.so, libQt6Gui.so)뿐.
라즈베리파이용 바이너리가 필요하지 않은 이유
1. 크로스 컴파일 환경에서의 역할
크로스 컴파일 환경에서는 라즈베리파이용 헤더 파일 및 라이브러리를 사용해 타겟 바이너리를 생성합니다.
qmake, qt-cmake와 같은 개발 도구 바이너리는 호스트 환경(우분투)에서 실행되며, 타겟용 바이너리는 단순히 빌드된 앱에서 사용하는 런타임 구성 요소를 제공합니다.
2. 타겟에서의 역할
라즈베리파이에서 Qt 앱을 실행할 때는 qmake나 qt-cmake와 같은 바이너리가 필요하지 않습니다.
대신 앱이 동작하기 위해 필요한 런타임 라이브러리만 설치되면 충분합니다.
크로스 컴파일 시 필요한 구성
1. 우분투 호스트
크로스 컴파일 환경에서 필요한 구성 요소:
Qt Host Tools (gcc_64): qmake, qt-cmake, qt-configure-module 등.
타겟용 헤더 및 라이브러리:
타겟 플랫폼(arm32v7)에 맞는 헤더 및 라이브러리 (libQt6*.so).
2. 라즈베리파이 타겟
실행 시 필요한 구성 요소:
타겟 플랫폼에 맞는 Qt 런타임 라이브러리.
libQt6Core.so, libQt6Gui.so, libQt6Widgets.so 등.   


qt.qt6.681.linux_gcc_arm64
--skipComponent qt.qt6.681.linux_gcc_arm64

Issues
      https://forum.qt. io/post/818693




SOLVED:
After getting the dialog error Error during installation process (qt.qt6.680.linux_gcc_arm64): Failed to run command: "/home/user/Qt/6.8.0/gcc_arm64/bin/qmake": Process crashed in the QT Creator installer setup, remove the file under "Qt/6.8.0/gcc_arm64/bin/qmake" (without closing the dialog) and create a symlink that points to the "/usr/lib/qt6/bin/qmake" binary ("ln -s /usr/lib/qmake6/bin/qmake ~/Qt/6.8.0/gcc_arm64/bin/qmake") that might be installed with "apt install qmake6 " and click retry. It should complete the installation. Hope this is fixed.

Y
Yu Chen
replied to zeros0 on 20 Nov 2024, 00:11
last edited by
#1
@zeros0 It works, thanks!

0
Z
zenon
replied to zeros0 on 29 Nov 2024, 10:40
last edited by zenon
#2
@zeros0

I did your trick it allows the install to finish but it's unusable with qtcreator which refuse this version of qmake.
I can't install on ubuntu 22.04 mac vmware . The process aborts with the above listed messages. The installed binaries succeed to download but are unusable.

But with an upper version of ubuntu (24.04) the online installer works normally on arm64 virtualized

Il don't understand why it is not possible to upgrade from 6.7 to 6.8 ? It's annoying

Have you another idea ?


sudo apt install qmake6


=======================
❗❗❗❗ qmake 심볼릭링크로 바꿔봣는데 안됫다 이거 설치하고 혹시몰라서 재부팅하고 나서 다시설치하니까 저 솔루션이 통햇음. 
# https://wiki.qt.io/Cross-Compile_Qt_6_for_Raspberry_Pi
🧪 오류 뜨는이유가.. 디펜던시.. 나오지 않아서 알 수 없지만.. 설치를 안해줘서 그런건가
set -U fish_greeting "✈️  [Raspberry Pi]"
sudo apt install -y libboost-all-dev libudev-dev libinput-dev libts-dev libmtdev-dev libjpeg-dev libfontconfig1-dev libssl-dev libdbus-1-dev libglib2.0-dev libxkbcommon-dev libegl1-mesa-dev libgbm-dev libgles2-mesa-dev mesa-common-dev libasound2-dev libpulse-dev gstreamer1.0-omx-generic libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev  gstreamer1.0-alsa libvpx-dev libsrtp2-dev libsnappy-dev libnss3-dev "^libxcb.*" flex bison libxslt-dev ruby gperf libbz2-dev libcups2-dev libatkmm-1.6-dev libxi6 libxcomposite1 libfreetype6-dev libicu-dev libsqlite3-dev libxslt1-dev
sudo apt install -y libavcodec-dev libavformat-dev libswscale-dev libx11-dev freetds-dev libpq-dev libiodbc2-dev firebird-dev libxext-dev libxcb1 libxcb1-dev libx11-xcb1 libx11-xcb-dev libxcb-keysyms1 libxcb-keysyms1-dev libxcb-image0 libxcb-image0-dev libxcb-shm0 libxcb-shm0-dev libxcb-icccm4 libxcb-icccm4-dev libxcb-sync1 libxcb-sync-dev libxcb-render-util0 libxcb-render-util0-dev libxcb-xfixes0-dev libxrender-dev libxcb-shape0-dev libxcb-randr0-dev libxcb-glx0-dev libxi-dev libdrm-dev libxcb-xinerama0 libxcb-xinerama0-dev libatspi2.0-dev libxcursor-dev libxcomposite-dev libxdamage-dev libxss-dev libxtst-dev libpci-dev libcap-dev libxrandr-dev libdirectfb-dev libaudio-dev libxkbcommon-x11-dev
☑️ The package name should be gstreamer1.0-tools instead of gstreamer-1.0-tools
  https://forums.developer.nvidia.com/t/gstreamer-installation-error/277826
☑️ E: Unable to locate package gstreamer1.0-omx
  > apt-cache policy gstreamer1.0-omx
    gstreamer1.0-omx-generic: ...
    gstreamer1.0-omx-generic-config: ...
    gstreamer1.0-omx-bellagio-config: ...

☑️ E: Unable to locate package gstreamer1.0-omx
  The libgst-dev package was only in bullseye.
  https://forums.raspberrypi.com/viewtopic.php?t=361663
🆗 📅 2025-01-14 02:27:59
  SOLVED:
  After getting the dialog error Error during installation process (qt.qt6.680.linux_gcc_arm64): Failed to run command: "/home/user/Qt/6.8.0/gcc_arm64/bin/qmake"
  : Process crashed in the QT Creator installer setup, 1️2️⃣ remove the file under "Qt/6.8.0/gcc_arm64/bin/qmake" (❗ without closing the dialog)
  , and create a symlink that points to the "/usr/lib/qt6/bin/qmake" binary ("3️⃣ ln -s /usr/lib/qmake6/bin/qmake ~/Qt/6.8.0/gcc_arm64/bin/qmake") that might be installed with 1️⃣ "apt install qmake6 " and 4️⃣ click retry.
  It should complete the installation. Hope this is fixed.


  When output during installation process
    >> 
      2499023] Operation \"ConsumeOutput\" with arguments \"qt.qt6.681.linux_gcc_arm64_qmakeoutput; /home/pi19/Qt/6.8.1/gcc_arm64/bin/qmake; -query\" failed: Failed to run command: \"/home/pi19/Qt/6.8.1/gcc_arm64/bin/qmake\": Process crashed
      [2499023] installationErrorWithCancel : Installer Error : Error during installation process (qt.qt6.681.linux_gcc_arm64):
      Failed to run command: "/home/pi19/Qt/6.8.1/gcc_arm64/bin/qmake": Process crashed Retry|Ignore|Cancel
      ldd ~/Qt/6.8.1/gcc_arm64/bin/qmake
  in other terminal, 🧮 %shell>
    sudo apt install -y qmake6
    sudo ln -sf /usr/bin/qmake6 /usr/bin/qmake

    rm ~/Qt/6.8.1/gcc_arm64/bin/qmake
    ln -s /usr/bin/qmake ~/Qt/6.8.1/gcc_arm64/bin/qmake

  [2182788] Operation \"QtPatch\" with arguments \"linux; /home/pi19/Qt/6.8.1/gcc_arm64; qt5-no-bin-patch; QmakeOutputInstallerKey=qt.qt6.681.linux_gcc_arm64_qmakeoutput\" failed: Could not find the required QmakeOutputInstallerKey(qt.qt6.681.linux_gcc_arm64_qmakeoutput) value on the installer object. The ConsumeOutput operation on the valid qmake needs to be called first.
  [2182788] installationErrorWithCancel : Installer Error : Error during installation process (qt.qt6.681.linux_gcc_arm64):
  Could not find the required QmakeOutputInstallerKey(qt.qt6.681.linux_gcc_arm64_qmakeoutput) value on the installer object. The ConsumeOutput operation on the valid qmake needs to be called first. Retry|Ignore|Cancel
  Retry
  [2201353] perform qt  .qt6.681.linux_gcc_arm64 operation: QtPatch
  [2201353]       - arguments: linux, /home/pi19/Qt/6.8.1/gcc_arm64, qt5-no-bin-patch, QmakeOutputInstallerKey=qt.qt6.681.linux_gcc_arm64_qmakeoutput
  [2201419] Done
  [2201420] Operation \"QtPatch\" with arguments \"linux; /home/pi19/Qt/6.8.1/gcc_arm64; qt5-no-bin-patch; QmakeOutputInstallerKey=qt.qt6.681.linux_gcc_arm64_qmakeoutput\" failed: Could not find the required QmakeOutputInstallerKey(qt.qt6.681.linux_gcc_arm64_qmakeoutput) value on the installer object. The ConsumeOutput operation on the valid qmake needs to be called first.
  [2201420] installationErrorWithCancel : Installer Error : Error during installation process (qt.qt6.681.linux_gcc_arm64):
  Could not find the required QmakeOutputInstallerKey(qt.qt6.681.linux_gcc_arm64_qmakeoutput) value on the installer object. The ConsumeO
  >>>>>>>>> // Ingore;;; 한 줄 복사 붙여넣기 반복..












============
  Joint, Velocity, Bone의 의미:
    Joint (관절 정보):

    인체의 주요 관절(예: 어깨, 팔꿈치, 무릎 등)의 절대적인 위치 좌표를 사용합니다. 이는 특정 순간의 신체 상태를 나타냅니다.
    Velocity (속도 정보):

    관절의 시간에 따른 변화량을 측정하며, 움직임의 속도를 의미합니다.
    이는 동작의 빠르기나 가속도를 포착해 특정 활동의 다이내믹을 구별하는 데 유용합니다.
    Bone (뼈 정보):

    인접한 두 관절 사이의 벡터를 나타내며, 신체의 포즈나 관절 간 관계를 파악합니다.
    이는 움직임의 구조적 특징을 추출하는 데 사용됩니다

  PoseC3D는 3D-CNN 기반으로, 기존 GCN 기반 접근과 달리 그래프 구조 대신 3D 히트맵 볼륨을 사용해 스켈레톤 데이터를 처리합니다​
    - GCN과 차별화된 점:
      - 노이즈 강인성: 포즈 추정 시 발생하는 오류에 덜 민감하며, 다중 인물 추적에서도 추가 비용 없이 동작합니다.
      - 확장성: RGB 데이터와 쉽게 통합할 수 있어 다양한 모달리티 결합에 유리합니다.
      - 스켈레톤 행동 인식의 효율성 개선: 시간적, 공간적 패턴 학습에 유리한 구조를 가집니다​
    - 한 줄 요약:
      - PoseC3D는 3D-CNN을 활용하여 GCN의 한계를 극복하고, 더 높은 정확도와 유연성을 제공하는 최신 스켈레톤 행동 인식 모델입니다.


  - X3D는 경량화된 3D-CNN 아키텍처로, 동작 인식에서 높은 성능과 효율성을 제공하기 위해 설계되었습니다.
    - 채널 수와 네트워크 깊이를 최소화하여, FLOPs(연산량)과 파라미터 수를 크게 줄이는 것이 특징입니다.
    - 이러한 특성 덕분에, 임베디드 시스템과 같은 제한된 자원 환경에서도 실시간 성능을 제공합니다.
    - PoseC3D와 같은 스켈레톤 기반 모델의 백본으로 활용되어, 동작 인식의 정확도를 높이는 데 기여합니다

  3D-CNN(3D Convolutional Neural Network)은 시간과 공간 축을 함께 처리하는 합성곱 계층을 통해, 동영상이나 시계열 데이터에서 시간적 및 공간적 패턴을 동시에 학습하는 네트워크입니다.


  >> 전체 파이프라인 필요할듯

  골격 기반(Skeleton-based) 모델: 관절 포인트(keypoints) 데이터를 활용한 액션 인식에 최적화됨.
  경량화된 아키텍처: X3D-s 백본은 총 241K 파라미터와 0.6GFLOPs만 사용하여 높은 효율성 제공.
  노이즈 강인성(Noise Robustness): 다양한 자세 변형과 외부 환경 노이즈에도 안정적인 성능 제공.
  실시간 처리 가능성: FLOPs가 낮아 임베디드 시스템이나 제한된 자원에서의 실시간 처리에 유리.
  정확도: NTU60-XSub 데이터셋에서 92.3% 정확도를 달성, 최적의 경량 모델로 인정.
  확장성: 다른 X3D 변형들과 마찬가지로 더 깊고 넓은 네트워크로 확장 가능하지만, 이 경우 성능과 자원 간의 균형 고려 필요.

  
  # PoseC3D와 GCN의 문제점 및 해결 방안 정리

  ## 1. GCN(Graph Convolutional Network)의 문제점
  GCN 기반 접근법은 스켈레톤 데이터를 그래프로 처리하며 액션 인식을 수행하지만 여러 단점이 존재합니다:

  - **포즈 추정 모델 의존성**:  
    GCN은 관절 데이터를 그래프 노드로 사용하므로, 정확한 포즈 추정이 중요합니다. 그러나 포즈 추정 과정에서 발생하는 작은 오류나 노이즈에 매우 민감해 인식 성능이 저하될 수 있습니다.

  - **시공간적 정보 처리의 한계**:  
    GCN은 그래프의 공간적 구조에는 강하지만 시간적 변화(temporal dynamics)를 효과적으로 처리하는 데 제한이 있습니다. 이로 인해 복잡한 움직임 인식에 어려움이 있습니다.

  - **연산 복잡도의 선형 증가**:  
    GCN에서는 스켈레톤의 각 관절이 노드로 표현되며, 관절의 수와 프레임이 증가함에 따라 연산 복잡도가 선형적으로 늘어납니다. 이는 특히 실시간 처리 시스템에서 성능 저하를 초래할 수 있습니다.

  - **확장성 문제**:  
    GCN 기반 모델은 주로 스켈레톤 데이터에 최적화되어 있어, RGB와 같은 다중 모달리티 데이터를 함께 처리하기 어렵습니다.

  ## 2. PoseC3D와 X3D 백본의 해결 방안
  PoseC3D는 위의 문제를 해결하기 위해 **3D-CNN** 기반의 접근을 도입합니다. 이 모델은 **3D 열 지도(heatmap volume)**로 스켈레톤 데이터를 처리해 보다 강인한 시공간 정보 학습을 가능하게 합니다:

  - **노이즈 강인성(Noise Robustness)**:  
    3D-CNN은 포즈 추정 과정에서 발생하는 작은 오류에 더 강하며, 스켈레톤 시퀀스의 시공간적 변화를 잘 포착합니다.

  - **효율적인 연산 및 경량화**:  
    X3D와 같은 백본을 사용해 경량화된 네트워크로 설계되어, 241K 파라미터와 0.6GFLOPs로 실시간 처리가 가능합니다. 이는 Jetson Nano와 같은 임베디드 시스템에서도 높은 효율을 제공합니다.

  - **다양한 모달리티와의 호환성**:  
    PoseC3D는 스켈레톤뿐 아니라 RGB 데이터와의 결합도 가능하여 확장성과 유연성을 제공합니다.

  ## 3. 결론
  PoseC3D는 GCN의 단점을 해결하면서도 효율성을 극대화한 모델로, **임베디드 시스템 및 실시간 액션 인식**에 적합한 솔루션입니다. X3D 백본을 활용한 가벼운 설계는 연산 자원을 줄이면서도 높은 성능을 제공합니다. 이 모델은 특히 **교통 신호 인식**과 같은 정확한 동작 인식이 필요한 응용에 유리합니다.
  더 깊이 있는 내용은 논문의 [원문](https://arxiv.org/pdf/2104.13586)에서 확인할 수 있습니다.

  


https://doc.qt.io/qt-6/supported-platforms.html


OpenMAX(Open Media Acceleration)는 Khronos Group에서 개발한 표준 API로, 비디오, 오디오 및 이미지 처리와 같은 멀티미디어 작업의 하드웨어 가속을 지원하기 위한 플랫폼 간 인터페이스입니다. 이를 통해  개발자는 다양한 하드웨어 플랫폼에서 멀티미디어 애플리케이션을 효율적으로 실행할 수 있습니다.


>>>>>>>>>> qt 파일에 대한 validatino 기능은 없다.. 재설치해야함.
pi19@pi ~> ldd ~/Qt/6.8.1/gcc_arm64/bin/qmake
    linux-vdso.so.1 (0x0000007f998ec000)
    libQt6Core.so.6 => /home/pi19/Qt/6.8.1/gcc_arm64/bin/../lib/libQt6Core.so.6 (0x0000007f99050000)


🆚 Vcsrv vs x410? 이엇나.. 정리 필요.
  x410 은 유료.
  Vcsrv 무료. 고급 옵션 지원. 단, 명령어 옵션 구성을 잘 알아야 함.



ros 1 wiki twist


rosservice list
rosservice info /bot3_gpio

resolvectl

❗ rqt - Service -> Service -> Service name settnigs. Request에 메시지를 써서 디버깅을 쉽게 할 수 있다. > Response  

❓      
  cat /etc/systemd/resolved.conf
  resolvectl status




https://docs.docker.com/get-started/docker-concepts/running-containers/publishing-ports/#publishing-all-ports
  When creating a container image, the EXPOSE instruction is used to indicate the packaged application will use the specified port. These ports aren't published by default.
  📝 Meta Info

  🪱 IPAM은 IP Address Management의 약자입니다 ; https://docs.docker.com/reference/compose-file/networks/#ipam
    https://en.wikipedia.org/wiki/IP_address_management
    



# 7. Export LD_PRELOAD for dynamic linking
RUN echo 'export LD_PRELOAD=/usr/lib/aarch64-linux-gnu/libgomp.so.1:$LD_PRELOAD' >> ~/.bashrc
  libgomp는 **GNU OpenMP(Runtime)**의 공유 라이브러리입니다. OpenMP는 다중 스레드 병렬 프로그래밍을 위한 API 표준으로, libgomp는 OpenMP 명령어를 처리하고 실행하는 데 필요한 런타임 지원을 제공합니다.



📦 How to automatically overwrite the output file when running `gpg` (i.e. without being prompted)? [closed]
  https://stackoverflow.com/questions/7519375/how-to-automatically-overwrite-the-output-file-when-running-gpg-i-e-without
    Adding --batch --yes
  ?? 어디에너 ㅎ어야.. 

📰 Docker Rootless mode...
  https://docs.docker.com/engine/security/rootless/
    GPU를 효율적으로 사용해야 하거나, 단일 사용자 환경에서 루트 권한 사용이 허용되는 경우.
  https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/latest/install-guide.html#rootless-mode
    보안이 중요한 다중 사용자 환경에서 Docker를 실행해야 하는 경우
    
✅ (how-to); set ":"when empty in Fish shell
  ..  ?근데 이거 띄어쓰기로 선언하나, 그냥 선언하나 같은건가 그럼? echo 해보면 애초에 ":" 가 안나오는데.. 나중에 해보고...
  이거 fish shell 에서 띄어쓰기로 하면 잘 등록되는데, ":" 으로 하면 변수값이 없는 경우 등록이 안 돼. 사람들으 ㄴ어떻게 이 문제를 해결하고 잇지?

  set -gx LDFLAGS $LDFLAGS -L/home/linuxbrew/.linuxbrew/opt/e2fsprogs/lib
  set -gx CPPFLAGS $CPPFLAGS -I/home/linuxbrew/.linuxbrew/opt/e2fsprogs/include
  set -gx PKG_CONFIG_PATH $PKG_CONFIG_PATH:/home/linuxbrew/.linuxbrew/opt/e2fsprogs/lib/pkgconfig

  ChatGPT said:
    ChatGPT
    Fish shell에서 set 명령어는 Bash와 다르게 빈 변수의 경우 동작 방식이 조금 다릅니다. 특히 :으로 경로를 구분할 때 문제가 생길 수 있습니다. 이 문제를 해결하는 방법은 변수 값이 비어 있는 경우를 명시적으로 처리하는 것입니다.

  문제의 원인
  set 명령어에서 기존 변수($LDFLAGS, $PKG_CONFIG_PATH 등)가 비어 있으면, Fish는 결과적으로 잘못된 값이나 구문 오류를 만들 수 있습니다.
  예: set -gx PKG_CONFIG_PATH $PKG_CONFIG_PATH:/new/path에서 $PKG_CONFIG_PATH가 비어 있으면 :/new/path만 남게 됩니다.
  해결 방법
  1. 빈 변수 처리
  빈 변수를 처리하기 위해 조건부 설정을 추가합니다:

  fish
  Copy code
  # Ensure the variable is not empty before appending
  set -q LDFLAGS; or set LDFLAGS ""
  set -gx LDFLAGS $LDFLAGS -L/home/linuxbrew/.linuxbrew/opt/e2fsprogs/lib

  set -q CPPFLAGS; or set CPPFLAGS ""
  set -gx CPPFLAGS $CPPFLAGS -I/home/linuxbrew/.linuxbrew/opt/e2fsprogs/include

  set -q PKG_CONFIG_PATH; or set PKG_CONFIG_PATH ""
  set -gx PKG_CONFIG_PATH $PKG_CONFIG_PATH:/home/linuxbrew/.linuxbrew/opt/e2fsprogs/lib/pkgconfig
  set -q <변수>: 변수가 이미 존재하는지 확인합니다.


❗ 
  tty 옵션은 Docker에서 컨테이너 실행 시 **가상 터미널(TTY, Teletypewriter)**을 할당할지 여부를 결정하는 설정입니다. 이 옵션은 대화형 세션을 지원하거나, 터미널 기반 애플리케이션과 상호 작용할 때 유용합니다.
    tty 옵션을 사용할 때의 주의점
    컨테이너 유지:

    tty: true는 컨테이너가 계속 실행 중인 상태를 유지하도록 도움.
    기본 명령이 없거나 종료되면 컨테이너도 종료되므로, 이를 방지하려면 command: tail -f /dev/null처럼 무한 대기 명령을 사용해야 할 수 있음.
    비대화형 컨테이너:

    대화형 작업이 필요 없는 컨테이너에서는 tty: true가 불필요할 수 있음. 예를 들어, 백그라운드에서 단순히 작업을 실행하는 컨테이너에서는 tty를 생략 가능.

면접: 🆚
  Hard float, Soft float

  하드 플로트는 **하드웨어의 부동소수점 연산기(FPU, Floating Point Unit)**를 사용해 부동소수점 연산을 처리합니다.
    CPU에 내장된 전용 FPU가 부동소수점 계산을 수행하므로, 속도가 빠르고 효율적입니다.

  소프트 플로트는 하드웨어 FPU가 없거나 사용하지 않는 환경에서, 소프트웨어로 부동소수점 연산을 수행하는 방식입니다.
    부동소수점 연산은 CPU가 소프트웨어 루틴을 통해 처리합니다.
❓ 면접: Meta Package..
❓ 면접.. 파일 디스크립터.  ulimit -Sn, -Hn,..
  xml rpc(Remote Procedure call) server?
  파일 디스크립터는 프로세스의 파일 테이블에서 파일 핸들을 가리키는 정수 값입니다.
    자체적으로는 4바이트(32비트 시스템) 또는 **8바이  트(64비트 시스템)**를 차지합니다.
  네, 장치 간 통신에서 **ioctl(Input/Output Control)**은 파일 디스크립터를 통해 이루어집니다.

  파일 디스크립터가 적용되는 대상
    표준 입출력: stdin, stdout, stderr와 같은 표준 스트림도 디스크립터를 사용.
    파이프: 익명 파이프 및 명명된 파이프(named pipe).

    파일: 일반 파일, 로그 파일 등.
    소켓: 네트워크 소켓(TCP/UDP).
    기타 IPC(프로세스 간 통신) 리소스: 공유 메모리, 메시지 큐 등.

ls l /mnt/lect_nfs/bot3_kccistc_service

터틀봇 패키지 설치하기!!!
  근데 터틀봇3 <----> ROS node 
  통신할 때 터틀봇3에서 실제 프로그램을 "빌드"해야해? 
  아니면 ROS node 에서 크로스컴파일해서 실행파일만 터틀봇에 올려?
  실제 업무 2024년 에서는 추세가 어떻게 되나?
자기소개서 쓰기 !!


OpenCR1.0 ; https://emanual.robotis.com/docs/en/platform/turtlebot3/appendix_opencr1_0/
LDS-01; https://emanual.robotis.com/docs/en/platform/turtlebot3/appendix_lds_01/

https://wiki.ros.org/hls_lfcd_lds_driver

rostopic info /scan



ROS 메시지 통신 방식중 Publisher 와 Subscriber 의 노드의 Topic 메시지를 사용하여 Lidar 센서의 데이터를 송/수신 하는 ROS 프로그램을 작성하시오.
Publisher 코드: hlds_laser_ublisher.cppmsg type: sensor_msgs/LaserScan message
catkin_ws$ rosrun ros_topic_lidar lidar_subscriber


touch hlds_laser_subscriber.cpp 작성하기


ubuntu@bot19:~$ cat ~/.profile
  # ~/.profile: executed by the command interpreter for login shells.
  # This file is not read by bash(1), if ~/.bash_profile or ~/.bash_login
  # exists.
  # see /usr/share/doc/bash/examples/startup-files for examples.
  # the files are located in the bash-doc package.

  # the default umask is set in /etc/profile; for setting the umask
  # for ssh logins, install and configure the libpam-umask package.
  #umask 022

  # if running bash
  if [ -n "$BASH_VERSION" ]; then
      # include .bashrc if it exists
      if [ -f "$HOME/.bashrc" ]; then
          . "$HOME/.bashrc"
      fi
  fi    

  # set PATH so it includes user's private bin if it exists
  if [ -d "$HOME/bin" ] ; then
      PATH="$HOME/bin:$PATH"
  fi

  # set PATH so it includes user's private bin if it exists
  if [ -d "$HOME/.local/bin" ] ; then
      PATH="$HOME/.local/bin:$PATH"
  fi

  비로그인 설정.

  /etc/profile	  ✅	  ❌	시스템 전체 설정. 로그인 셸에서 항상 실행됨.
  ~/.bash_profile	✅	  ❌	사용자별 설정. ~/.bashrc 호출용으로 많이 사용.
  ~/.bash_login	  ✅	  ❌	~/.bash_profile 대체용. 잘 사용되지 않음.
  ~/.profile	    ✅	  ❌	기본 설정 파일. 다른 셸에서도 사용 가능.
  ~/.bashrc	      ❌	  ✅	비로그인 셸 설정. 상호작용 셸에서 alias, 프롬프트 등 정의.

  /etc/profile:
    시스템 전역 설정 파일.
    항상 로드됩니다.
  ~/.bash_profile:
    사용자의 로그인 셸 초기화 설정.
    존재하면 로드하고, 이후 파일은 무시합니다.
  ~/.bash_login:
    ~/.bash_profile이 없을 경우 대신 로드됩니다.
    존재하면 로드하고, 이후 파일은 무시합니다.
  ~/.profile:
    ~/.bash_profile과 ~/.bash_login이 모두 없을 경우 로드됩니다.


.... 🚨 not works: ssh ubuntu@10.10.14.119 'source $HOME/.bashrc && wbitbakehich roslaunch'
  ....
  # ~/.bashrc: executed by bash(1) for non-login shells. see /usr/share/doc/bash/examples/startup-files (in the package bash-doc) 
  # for examples

  # If not running interactively, don't do anything
  case $- in
      *i*) ;;
        *) return;;
  esac

EtherCAT.... jepg
오피전력기술

https://www.aidinrobotics.co.kr/robotic-picking-solution-for-logistics
  https://aidinrobotics.oopy.io/

  
https://shields.io/
  https://simpleicons.org/
lickable Badges


💯 마지막 정리. 

**** check booting partition
df -h | grep boot
pi19@pi ~> df -h | grep boot

/dev/mmcblk0p1    510M   67M  444M  14% /boot/firmware

pi19@pi ~> uname -m
aarch64

Image.gz

  mkdir -p /nfs/kernel/raspberry_pi
  cp arch/arm64/boot/Image.gz /nfs/kernel/raspberry_pi/kernel8.img
  ssh r-pi.local "sudo cp /mnt/host/kernel/raspberry_pi/kernel8.img /boot/firmware/kernel8.img"
  sudo reboot

cd /sys/class/
  .. d

cp arch/arm/boot/zImage /nfs/kernels/pi/kernel7l.img
cp arch/arm64/boot/Image.gz /nfs//boot/firmware/kernel8.img

라즈베리파이의 부팅 동작은 /boot/firmware 내의 파일 구성과 config.txt 설정에 따라 달라집니다. 기본적으로, 64비트 커널은 기본값으로 활성화되어 있으며, kernel8.img가 존재하면 이를 사용합니다.

  1. 기본 동작
  32비트 모드 (arm_64bit=0):
  기본적으로 kernel7l.img 파일을 로드.
  arm_64bit=0으로 설정되면 32비트 커널만 사용.
  64비트 모드 (arm_64bit=1):
  기본적으로 kernel8.img 파일을 로드.
  arm_64bit=1이거나, kernel8.img가 존재하면 이를 자동으로 사용.

  // 혹은 수동으로 명시할 수 있다.
    /boot/firmware/config.txt
      kernel=kernel8.img


한글파일. png, jpg, jpeg, gif, bmp 만 삽입 가능..
  그림 넣기는 1개씩 만 삽입 가능. 동시 드래그 업로드 불가능

커널 타이머



  Image와 Image.gz의 차이
    특성	zImage	Image.gz
    압축 방식	gzip 포함 + 부트스트랩 코드	단순 gzip
    사용 환경	32비트 ARM	64비트 ARM
    부트로더 필요	부트스트랩이 필요함	부트로더에서 gzip 처리 지원 필요
    크기	더 작음	약간 더 큼 (압축 효율은 유사)


  modules_install은 커널 모듈을 시스템 디렉토리(예: /lib/modules/<kernel_version>)로 설치하는 과정으로, 수동으로 insmod를 사용해 모듈을 올리는 경우에는 반드시 필요하지 않습니다.



라즈베리파이 공식디스플레이
  DISPLAY=:0 xrandr --output DSI-1 --rotate left


cat /boot/config.txt | grep -E 'dtoverlay=vc4'

  현재 dtoverlay=vc4-kms-v3d가 활성화되어 있는 상태입니다. 이는 Raspberry Pi의 "Full KMS" 그래픽 드라이버를 사용 중임을 의미합니다. 이 경우:

  display_rotate 옵션은 작동하지 않습니다.
  dtoverlay=vc4-kms-v3d가 활성화된 상태에서는 구형 display_rotate 설정이 지원되지 않으므로, 이를 통해 화면 회전을 수행할 수 없습니다.

  권장 회전 방법은 xrandr 명령 또는 커널 커맨드라인 옵션을 사용하는 것입니다.
  다만, SSH를 통해 연결하는 경우에는 X11 디스플레이 세션을 명확히 지정하거나, SSH 세션이 아닌 물리적 키보드/마우스를 통해 직접 Raspberry Pi에서 명령을 실행해야 할 수 있습니다.

  pi19@pi ~>  xrandr

Screen 0: minimum 16 x 16, current 1920 x 1080, maximum 32767 x 32767
HDMI-A-1 connected primary 1920x1080+0+0 (normal left inverted right x axis y axis) 521mm x 293mm
   1920x1080     59.96*+
   1440x1080     59.99  
   1400x1050     59.98  
   1280x1024     59.89  
   1280x960      59.94  
   1152x864      59.96  
   1024x768      59.92  
   800x600       59.86  
   640x480       59.38  
   320x240       59.52  
   1680x1050     59.95  
   1440x900      59.89  
   1280x800      59.81  
   1152x720      59.97  
   960x600       59.63  
   928x580       59.88  
   800x500       59.50  
   768x480       59.90  
   720x480       59.71  
   640x400       59.95  
   320x200       58.96  
   1600x900      59.95  
   1368x768      59.88  
   1280x720      59.86  
   1024x576      59.90  
   864x486       59.92  
   720x400       59.55  
   640x350       59.77  

   xrandr --output HDMI-A-1 --rotate inverted

Re: Raspberry Pi 4 - screen rotation
Mon Sep 21, 2020 11:35 am

Yes, the config.txt rotations are deprecated when using FKMS - they are incompatible.

You can set rotation on the kernel command line.

https://www.raspberrypi.org/documentati ... ine-txt.md


https://www.raspberrypi.com/documentation/computers/configuration.html#displays


video=HDMI-A-1:1920x1080M@60,rotate=90  

🧮 xrandr --listmonitors

HDMI-A-1 connected primary 1920x1080+0+0 (normal left inverted right x axis y axis) 521mm x 293mm
   1920x1080     59.96*+
   1440x1080     59.99  
   1400x1050     59.98  
   1280x1024     59.89  
   1280x960      59.94  
   1152x864      59.96  
   1024x768      59.92  
   800x600       59.86  
   640x480       59.38  
   320x240       59.52  
   1680x1050     59.95  
   1440x900      59.89  
   1280x800      59.81  
   1152x720      59.97  
   960x600       59.63  
   928x580       59.88  
   800x500       59.50  
   768x480       59.90  
   720x480       59.71  
   640x400       59.95  
   320x200       58.96  
   1600x900      59.95  
   1368x768      59.88  
   1280x720      59.86  
   1024x576      59.90  
   864x486       59.92  
   720x400       59.55  
   640x350       59.77  


[    1.937844] [drm] Initialized v3d 1.0.0 20180419 for fec00000.v3d on minor 0
[    3.791642] systemd[1]: Starting modprobe@drm.service - Load Kernel Module drm...
[    3.843971] systemd[1]: modprobe@drm.service: Deactivated successfully.
[    3.844405] systemd[1]: Finished modprobe@drm.service - Load Kernel Module drm.
[    5.728356] vc4-drm gpu: bound fe400000.hvs (ops vc4_hvs_ops [vc4])
[    5.738361] vc4-drm gpu: bound fef00700.hdmi (ops vc4_hdmi_ops [vc4])
[    5.748582] vc4-drm gpu: bound fef05700.hdmi (ops vc4_hdmi_ops [vc4])
[    5.749090] vc4-drm gpu: bound fe700000.dsi (ops vc4_dsi_ops [vc4])
[    5.749264] vc4-drm gpu: bound fe004000.txp (ops vc4_txp_ops [vc4])
[    5.749377] vc4-drm gpu: bound fe206000.pixelvalve (ops vc4_crtc_ops [vc4])
[    5.749486] vc4-drm gpu: bound fe207000.pixelvalve (ops vc4_crtc_ops [vc4])
[    5.749593] vc4-drm gpu: bound fe20a000.pixelvalve (ops vc4_crtc_ops [vc4])
[    5.749667] vc4-drm gpu: bound fe216000.pixelvalve (ops vc4_crtc_ops [vc4])
[    5.749780] vc4-drm gpu: bound fec12000.pixelvalve (ops vc4_crtc_ops [vc4])
[    5.752102] [drm] Initialized vc4 0.0.0 20140616 for gpu on minor 1
[    6.171880] vc4-drm gpu: [drm] fb0: vc4drmfb frame buffer devices


[cm5]
dtoverlay=dwc2,dr_mode=host

[all]



vc4-fkms-v3d (Fake KMS):
  이 설정은 Fake KMS 모드로, 프레임버퍼를 사용하여 그래픽을 처리합니다. 이 모드는 더 낮은 레벨에서 그래픽을 처리하지만, 일부 그래픽 하드웨어나 구형 모니터에서 호환성이 좋을 수 있습니다.
vc4-kms-v3d (KMS):
  이 설정은 Kernel Mode Setting (KMS) 모드로, 그래픽 하드웨어가 커널 차원에서 직접 관리됩니다. 이 모드는 더 현대적인 방식이지만, 일부 드라이버나 설정에 따라 호환성 문제가 발생할 수 있습니다.


dtoverlay=dwc2
to
vc4-fkms-v3d
vc4-kms-v3d

lcd_rotate=2




display_auto_detect=1
lcd_rotate=2
display_rotate=2
auto_initramfs=1


[all]
lcd_rotate=2
enable_uart=1



  GNU nano 7.2                                    /boot/firmware/cmdline.txt *                                            
console=serial0,115200 console=tty1 root=PARTUUID=7560c0b2-02 rootfstype=ext4 fsck.repair=yes rootwait quiet splash plymouth.ignore-serial-consoles cfg80211.ieee80211_regdom=GB

console=serial0,115200 console=tty0 root=PARTUUID=7560c0b2-02 rootfstype=ext4 fsck.repair=yes rootwait



# https://stackoverflow.com/questions/12244979/build-kernel-module-into-a-specific-directory


  $(wildcard)의 반환 동작
  1. 현재 디렉토리에서 실행
    makefile
    Copy
    Edit
    SOURCES := $(wildcard *.c)
    *.c는 현재 디렉토리(module/)에서 .c 파일을 검색합니다.
    src/kernel_timer_dev.c는 module/src/ 디렉토리에 있지만, *.c 패턴은 현재 탐색중인 디렉토리 내의 파일만 검색합니다.
    결과: kernel_timer_de
    

If you're seeing a blank screen on your Raspberry Pi 64-bit with a connected LCD when using "dtoverlay=vc4-kms-v3d" in your /boot/config.txt, it likely means the KMS (Kernel Mode Setting) overlay isn't working properly with your setup, and you might need to switch to "dtoverlay=vc4-fkms-v3d" instead, which uses a "fake KMS" that can often resolve display issues on 64-bit systems with LCDs. 
Key points to understand:
KMS vs. Fake KMS: "vc4-kms-v3d" utilizes the full KMS functionality, while "vc4-fkms-v3d" uses a simplified version that might be more compatible with certain LCD setups, especially on 64-bit Raspberry Pi OS. 
How to fix:
Edit config.txt: Open the /boot/config.txt file on your Raspberry Pi using a text editor. 
Change the overlay: Replace the line "dtoverlay=vc4-kms-v3d" with "dtoverlay=vc4-fkms-v3d". 
Reboot: Save the changes and reboot your Raspberry Pi. 
Other things to check:
LCD wiring: Double-check that your LCD is correctly wired to the Raspberry Pi GPIO pins according to the LCD's documentation.
LCD compatibility: Ensure your LCD is compatible with the Raspberry Pi and that you are using the correct driver settings. 
Power supply: Make sure your Raspberry Pi is powered with a sufficient power supply. 

https://github.com/raspberrypi/linux/issues/5195#:~:text=Describe%20the%20bug,fkms%2Dv3d%20works%20as%20intended.
https://forums.raspberrypi.com/viewtopic.php?t=367734#:~:text=txt%20(to%20enable%20cgroups)%20are,real%20HDMI%20monitor%2C%20same%20thing.&text=Tried%20all%20the%20usual%20things,for%20all%20Pis%20again%20identical.&text=dtoverlay=vc4%2Dfkms%2Dv3d,Thanks!
https://forum.argon40.com/t/argon-one-doesnt-work-with-ubuntu/846#:~:text=Booted%20the%20raspi%20with%20Manjaro,sd%20card%20into%20the%20raspi

dtoverlay
>>
  arm_64bit=1
  kernel=kernel8.img.

  kernel=kernel8.img
  arm_64bit=1
  enable_gic=1  

  hdmi_force_hotplug=1

make ARCH=arm64 mrproper


pi19@pi ~> cat /boot/firmware/config.txt

# For more options and information see
# http://rptl.io/configtxt
# Some settings may impact device functionality. See link above for details

# Uncomment some or all of these to enable the optional hardware interfaces
#dtparam=i2c_arm=on
#dtparam=i2s=on
#dtparam=spi=on

# Enable audio (loads snd_bcm2835)
dtparam=audio=on

# Additional overlays and parameters are documented
# /boot/firmware/overlays/README

# Automatically load overlays for detected cameras
camera_auto_detect=1

# Automatically load overlays for detected DSI displays
display_auto_detect=1

# Automatically load initramfs files, if found
auto_initramfs=1

# Enable DRM VC4 V3D driver
dtoverlay=vc4-kms-v3d
max_framebuffers=2

# Don't have the firmware create an initial video= setting in cmdline.txt.
# Use the kernel's default instead. ⚙️ 1->0
disable_fw_kms_setup=1

# Run in 64-bit mode
arm_64bit=1

# Disable compensation for displays with overscan
disable_overscan=1

# Run as fast as firmware / board allows
arm_boost=1

[cm4]
# Enable host mode on the 2711 built-in XHCI USB controller.
# This line should be removed if the legacy DWC2 controller is required
# (e.g. for USB device mode) or if USB support is not required.
otg_mode=1

[cm5]
dtoverlay=dwc2,dr_mode=host

[all]

======================
Project


Fish shell Built-in : math


📰 근데 AI 처리를 위한 고성능 임베디드 기기 <-> PC 로 영상 전송할떄, 보통 어떻게 전송해? 데이터를? 방법이 아니라, 어떤 형식? 형태로 데이터를 전달하는지 모르겟어



🪱 userland ; https://en.wiktionary.org/wiki/userland
🪱 Device tree ; https://en.wikipedia.org/wiki/Devicetree
https://www.devicetree.org/

TODO: 내일 해볼 것
  ## Run nohup with multiple commands in background process 📅 2025-01-19 00:47:43
  
  Netlink ???
    ledkey_netlink 같은 Netlink 기반 인터페이스는 다수의 사용자 애플리케이션과 커널 모듈이 데이터를 주고받아야 하는 상황 또는 비동기적 이벤트 통지가 필요한 경우에 유용합니다. 이를 활용하는 상황과 프로젝트의 예시는 아래와 같습니다.

Misc 기반

❯ brew uses --installed dtc
qemu


⚓ https://git.kernel.org/pub/scm/utils/dtc/dtc.git


🌟 아 커널 모듈중에서 장치를 제어하면 그게 디바이스 드라이버인가?

Clang은 일반적으로 GCC보다 더 빠르게 컴파일을 수행합니다. 특히, 대규모 프로젝트에서 컴파일 시간을 단축하는 데 유리합니다

Clang은 에러 메시지가 매우 명확하고 직관적입니다. 특히 디버깅 정보를 제공할 때, 오류 발생 지점과 관련된 구체적인 코드 및 설명을 잘 제공합니다.

Clang은 LLVM의 최적화 기법을 활용하여 더 나은 코드 최적화를 제공할 수 있습니다. 특히 **프로파일 기반 최적화(PGO, Profile-Guided Optimization)**나 LTO(Link Time Optimization) 같은 고급 최적화 기능이 Clang에서 잘 구현되어 있습니다.





Mounting proc-sys-fs-binfmt_misc.mou…trary Executable File Formats File System...
[FAILED] Failed to mount proc-sys-fs-binfmt_m…bitrary Executable File Formats File System.
See 'systemctl status proc-sys-fs-binfmt_misc.mount' for details.
[FAILED] Failed to start systemd-binfmt.service - Set Up Additional Binary Formats.
See 'systemctl status systemd-binfmt.service' for details.

[*     ] (1 of 3) Job plymouth-quit-wait.service/start running (1min 28s / no limit)
[   ***] (2 of 3) Job dev-dri-card0.device/start running (1min 26s / 1min 30s)
[ ***  ] (3 of 3) Job dev-dri-renderD128.device/start running (1min 23s / 1min 30s)

plymouth-quit-wait.service 
dev-dri-card0.device 
dev-dri-renderD128 


# sudo cp kernel8-kernel_timer_config.img
 /boot/firmware/kernel8-kernel_timer_config.img


 ??? 이거? https://inblog.ai/isehyeon258/22417?utm_source


커널과 모듈 일치:

커널 이미지와 lib/modules/<커널 버전>의 모듈 버전이 일치해야 합니다.
커널 이미지만 변경했는데 기존 모듈이 불일치하면 부팅 문제 또는 장치 초기화 실패가 발생할 수 있습니다.

디바이스 트리(DTB)는 기본적으로 커널에 종속되지 않으며, 모듈은 커널에 종속됩니다. 하지만, 디바이스 트리는 커널과의 호환성을 고려해야 할 때가 있습니다. 아래에서 이를 자세히 설명하겠습니다


set -gx CONFIG_LOCALVERSION -v8-synergy_hub
이 문제


https://inblog.ai/isehyeon258/22417
Android
  🪱 Toast message 

➡️  OPIC



ㅁㅁ
  # Get the original file ownership and permissions
  set OWNER (stat --format='%u:%g' $CONFIG_FILE)
  set PERMISSIONS (stat --format='%a' $CONFIG_FILE)

  
  # Apply the original ownership and permissions to the temporary file
  sudo chown $OWNER $TMP_FILE
  sudo chmod $PERMISSIONS $TMP_FILE



lcd_rotate=2
추가 만 하면.. 부팅 할떄만 돌아가고, 부팅 후에는 돌아간 화면이 안나옴.
  vc4-fkms-v3d (Fake KMS):  >> 이거 사용하게 바꿔야 함.
    이 설정은 Fake KMS 모드로, 프레임버퍼를 사용하여 그래픽을 처리합니다. 이 모드는 더 낮은 레벨에서 그래픽을 처리하지만, 일부 그래픽 하드웨어나 구형 모니터에서 호환성이 좋을 수 있습니다.
  vc4-kms-v3d (KMS):
    이 설정은 Kernel Mode Setting (KMS) 모드로, 그래픽 하드웨어가 커널 차원에서 직접 관리됩니다. 이 모드는 더 현대적인 방식이지만, 일부 드라이버나 설정에 따라 호환성 문제가 발생할 수 있습니다.


??????? 그라운드가 제대로 연결이 안되면, 임의의 버튼을 눌럿을 때 해당 버튼의 입력이 아니고 여러 버튼 입력이 된다.. 랜덤임.. 플로팅 상태.ㄴ

🪱 No. https://en.wiktionary.org/wiki/No.#English
  Abbreviation of number. 


64bit..
❯ cat .config  | grep CONFIG_HZ
  CONFIG_HZ_250=y
  CONFIG_HZ=250
for 32bit defaul value is 100.


🚣 https://docs.kernel.org/core-api/printk-basics.html

ssh-copy-id
  복사되는 파일 이름은 원격 서버에서 authorized_keys라는 파일 하나에 모두 합쳐집니다. 즉, 원격 서버에서 authorized_keys 파일은 다수의 공개 키를 하나의 파일에 저장하게 됩니다. 파일 이름이 다르더라도, 공개 키는 다수의 항목으로 추가되기 때문에, 여러 호스트에서 동일한 공개 키를 복사해도 충돌하지 않습니다.

  https://docs.github.com/ko/enterprise-cloud@latest/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent
  echo "복사한 공개 키 내용" >> ~/.ssh/authorized_keys
  chmod 600 ~/.ssh/authorized_keys

ssh-keygen -t rsa -b 4096 -C "wbfw109v2@gmail.com" -f ~/.ssh/id_rsa-raspberry_pi_1
ssh-keygen -t rsa -b 4096 -C "wbfw109v2@gmail.com" -f ~/.ssh/id_rsa-raspberry_pi_2
ssh-keygen -t rsa -b 4096 -C "wbfw109v2@gmail.com" -f ~/.ssh/id_rsa-jetson_nano_1


## ssh-keygen --help > /tmp/txt 2>&1

서버에 설정
📦 
  openssh ; https://formulae.brew.sh/formula/openssh#default
  ssh-copy-id ; https://formulae.brew.sh/formula/ssh-copy-id#default

  %shell> ssh -V
  >> OpenSSH_9.9p1, OpenSSL 3.4.0 22 Oct 2024ps aux | grep ssh-agent

~/.gnupg/private-keys.v1

ssh-agent는 메모리에서만 키를 관리하기 때문에, 해당 키는 현재 세션에서만 유효합니다.

       ssh-add -T pubkey ...

synergy-hub on  main [!] is 📦 v0.1.0 via 🐍 v3.13.1 
❯ ssh-add -d ~/.ssh/id_rsa-raspberry_pi_1
Identity removed: /home/wbfw109v2/.ssh/id_rsa-raspberry_pi_1 RSA (wbfw109v2@gmail.com)


synergy-hub on  main [!] is 📦 v0.1.0 via 🐍 v3.13.1 
❯ ssh-add -D
All identities removed.

❯ ssh-add -l
4096 SHA256:VVYmdeO3P+6WGdDBKvLcNp74eCd/OpTCL9mY0tlnZ1I wbfw109v2@gmail.com (RSA)


GPG 에이전트가 ~/.gnupg/sshcontrol 파일에 SSH 키를 관리하도록 설정되어 있으면, GPG는 SSH 인증 요청을 **gpg-agent**에 전달합니다. 기본적으로 gpg-agent는 SSH 인증을 담당하는 설정을 갖추고 있어서, ssh-agent와 겹치게 됩니다.



🚨 GPG agent doesn't remove my SSH key from the keyring ; https://unix.stackexchange.com/questions/185393/gpg-agent-doesnt-remove-my-ssh-key-from-the-keyring
  gpg-connect-agent
  KEYINFO --ssh-list --ssh-fpr
  DELETE_KEY <key_id>
  BYE

  gpg-agent vs ssh agent
  https://jadaptive.com/java-ssh-library/ssh-key-management-best-practices-and-tools/


🆚 ssh-agent vs gpg-agent
  gpg-agent 가 추세?
  https://jadaptive.com/java-ssh-library/ssh-key-management-best-practices-and-tools/
  https://dev.to/ehuelsmann/ssh-with-gpg-agent-on-systemd-5ddf


💡 현대자동차 그룹 softeer HSAT  --> 자격인증 Lv.3 를 획득한 사람은 코딩테스트 면제.

gpg-connect-agent /bye

https://manpages.ubuntu.com/manpages/xenial/man1/gpg-agent.1.html
       The agent is automatically started on demand by gpg, gpgsm, gpgconf, or gpg-connect-agent.
       Thus there is no reason to start it manually.  In case you want to use the included Secure
       Shell Agent you may start the agent using:

         gpg-connect-agent /bye

    It  is  important to set the GPG_TTY environment variable in your login shell, for example
       in the ‘~/.bashrc’ init script:

           export GPG_TTY=$(tty)

       If you enabled the Ssh Agent Support, you also need to tell ssh about it by adding this to
       your init script:

         unset SSH_AGENT_PID
         if [ "${gnupg_SSH_AUTH_SOCK_by:-0}" -ne $$ ]; then
           export SSH_AUTH_SOCK="${HOME}/.gnupg/S.gpg-agent.ssh"
         fi


export GPG_TTY=(tty)

mkdir -p ~/.gnupg
echo 'enable-ssh-support
extra-socket $HOME/.gnupg/S.gpg-agent.ssh
' | tee ~/.gnupg/gpg-agent.conf >/dev/null


. unset SSH_AGENT_PID
  역할:
  기존 ssh-agent의 PID 값을 비우는 역할을 합니다.

  이유:
  ssh-agent가 실행 중일 경우, 해당 프로세스가 SSH 키 인증을 처리하려고 할 수 있습니다. 그러나 우리는 gpg-agent를 SSH 에이전트로 사용하려 하므로 SSH_AGENT_PID를 해제해야 합니다.

   pgrep -a ssh-agent


systemctl --user edit gpg-agent

    GNU nano 8.1                            /home/wbfw109v2/.config/systemd/user/gpg-agent.service.d/.#override.confbd25bdcface1c185                                     
  ### Editing /home/wbfw109v2/.config/systemd/user/gpg-agent.service.d/override.conf
  ### Anything between here and the comment below will become the contents of the drop-in file

  [Service]
  Environment=SSH_AUTH_SOCK=%h/.gnupg/S.gpg-agent.ssh
  ExecStart=
  ExecStart=/usr/bin/gpg-agent --supervised --enable-ssh-support --extra-socket %h/.gnupg/S.gpg-agent.ssh


systemctl --user cat gpg-agent


gpg-agent가 systemd에 의해 관리되고 있어, 직접 시작하거나 설정 파일(~/.gnupg/gpg-agent.conf) 변경만으로는 원하는 SSH 소켓 설정이 적용되지 않을 수 있습니다.
따라서 systemd의 gpg-agent 관련 설정을 수정해야 합니다.
https://askubuntu.com/questions/777900/how-to-configure-gnupgs-s-gpg-agent-socket-location
❗ https://www.procustodibus.com/blog/2023/02/gpg-2-4-on-ubuntu-22-04/

gpg --version
bfw109v2 in 🌐 iot-04 in synergy-hub on  main [!] is 📦 v0.1.0 via 🐍 v3.13.1 
❯ which gpg
/home/linuxbrew/.linuxbrew/bin/gpg


https://wiki.gnupg.org/AgentForwarding
### SSH Configuration
Note: With GnuPG >= 2.1.13 the location of the agents socket changed. To find out the name of the local socket, always use:
❯ gpgconf --list-dir agent-extra-socket
/run/user/1000/gnupg/S.gpg-agent.extra

this is the name of the extra socket on the local box. On the server the standard socket needs to be configured. Find this one out with

❯ gpgconf --list-dir agent-socket
/run/user/1000/gnupg/S.gpg-agent

음... 이게 무슨소리야?

일단 내가 원하는건 Host (Ubuntu) -> Raspberry Pi 로 접근할 때 ssh key 로 접근하는건데, passphrase 를 입력해놔서 매 번 입력하는 것이 불필요해.
그래서 gpg 를 사용해서 이를 터미널 셰션간 공유하려고 하는건데..
그거랑 관련이 있는거야?

❯ gpgconf --list-options gpg-agent
pinentry-curses

gpgconf --kill gpg-agent
gpgconf --launch gpg-agent



============
흠.. gpg 이거 homebrew 로 설치해서 그런가?
❯ ssh-add -v ~/.ssh/id_ed25519-raspberry_pi_1

Enter passphrase for /home/wbfw109v2/.ssh/id_ed25519-raspberry_pi_1: 
Could not add identity "/home/wbfw109v2/.ssh/id_ed25519-raspberry_pi_1": agent refused operation




Optionally, you may want to pre-specify the keys to be used for SSH so you won't have to use ssh-add to load the keys. To do this, specify the keys in the ~/.gnupg/sshcontrol file. The entries in this file are keygrips—internal identifiers gpg-agent uses to refer to keys. Unlike a key hash, a keygrip refers to both the public and private key. To find the keygrip, use gpg2 -K --with-keygrip, as shown below. Then add that line to the sshcontrol file.



ssh-keygen -t ed25519 -C "wbfw109v2@gmail.com" -f ~/.ssh/id_ed25519-raspberry_pi_1
  ❯ gpg --expert --edit-key ~/.ssh/id_ed25519-raspberry_pi_1.pub

  gpg (GnuPG) 2.4.7; Copyright (C) 2024 g10 Code GmbH
  This is free software: you are free to change and redistribute it.
  There is NO WARRANTY, to the extent permitted by law.

  gpg: key




GnuPG needs to construct a user ID to identify your key.

Real name: 

id_ed25519-raspberry_pi_1
# https://serverfault.com/questions/691120/how-to-generate-gpg-key-without-user-interaction
echo "%echo Generating a new GPG key
Key-Type: 1
Key-Usage: sign
Key-Length: 255
Subkey-Type: 1
Subkey-Usage: encrypt
Subkey-Length: 255
Name-Real: id_ed25519-raspberry_pi_1
Name-Email: wbfw109v2@gmail.com
Expire-Date: 0
%commit
%echo done" > batch_key.txt

gpg --batch --generate-key batch_key.txt


cat >keydetails <<EOF
    %echo Generating a basic OpenPGP key
    Key-Type: RSA
    Key-Length: 2048
    Subkey-Type: RSA
    Subkey-Length: 2048
    Name-Real: User 1
    Name-Comment: User 1
    Name-Email: user@1.com
    Expire-Date: 0
    %no-ask-passphrase
    %no-protection
    %pubring pubring.kbx
    %secring trustdb.gpg
    # Do a commit here, so that we can later print "done" :-)
    %commit
    %echo done
EOF


echo "%echo Generating a new GPG key
Key-Type: default
Subkey-Type: default
Name-Real: id_ed25519-raspberry_pi_1
Name-Email: wbfw109v2@gmail.com
Expire-Date: 0
Passphrase: rpi
%commit
%echo done" | gpg --batch --generate-key

echo "%echo Generating a new GPG key
Key-Type: default
Key-Curve: Ed25519
Subkey-Type: default
Subkey-Curve: Ed25519
Name-Real: id_ed25519-raspberry_pi_1
Name-Email: wbfw109v2@gmail.com
Expire-Date: 0
Passphrase: your_passphrase_here
%commit
%echo done" | gpg --batch --generate-key


gpg: Generating a new GPG key
gpg: WARNING: server 'gpg-agent' is older than us (2.4.4 < 2.4.7)
gpg: Note: Outdated servers may lack important security fixes.
gpg: Note: Use the command "gpgconf --kill all" to restart them.
gpg: revocation certificate stored as '/home/wbfw109v2/.gnupg/openpgp-revocs.d/07944583F150CA9B92FA890EACD8D001FF60DD2C.rev'
gpg: done


gpg: revocation certificate stored as '/home/wbfw109v2/.gnupg/openpgp-revocs.d/D25A6DD3C9C4C92EB759A05E193BE4FC228E2D5D.rev

☑️ Issue; https://dev.gnupg.org/T5444
  When 
      %shell> 
        echo "%echo Generating a new GPG key
        Key-Type: default
        Subkey-Type: default
        Name-Real: id_ed25519-raspberry_pi_1
        Name-Email: wbfw109v2@gmail.com
        Expire-Date: 0
        Passphrase: your_passphrase_here
        %commit
        %echo done" | gpg --batch --generate-key
  >>
    gpg: Generating a new GPG key
    gpg: key generation failed: Unknown elliptic curve
    gpg: done

  >> add
    Key-Curve: Ed25519
    Subkey-Curve: Ed25519

📦 gpg; gnupg
    https://repology.org/project/gnupg/versions
    https://formulae.brew.sh/formula/gnupg#default

    It seems that it is harcorded to use path "/usr/bin/gpg-agent". 📅 2025-01-21 02:29:57
    ? 근데 상관없을거같기도.. 명령어 사용할떄는 저 경로 참조 안하니까? path 가장 온쪽부터 binary 부터 찾아서...

      %shell> 
        echo "%echo Generating a new GPG key
        Key-Type: default
        Key-Curve: Ed25519
        Subkey-Type: default
        Subkey-Curve: Ed25519
        Name-Real: id_ed25519-raspberry_pi_1
        Name-Email: wbfw109v2@gmail.com
        Expire-Date: 0
        Passphrase: your_passphrase_here
        %commit
        %echo done" | gpg --batch --generate-key
      >>
        gpg: Generating a new GPG key
        gpg: WARNING: server \'gpg-agent\' is older than us (2.4.4 < 2.4.7)
        gpg: Note: Outdated servers may lack important security fixes.
        gpg: Note: Use the command "gpgconf --kill all" to restart them.
        gpg: revocation certificate stored as \'/home/wbfw109v2/.gnupg/openpgp-revocs.d/07944583F150CA9B92FA890EACD8D001FF60DD2C.rev\'
        gpg: done

      근데 spam 이 너무 심함;; 삭제하자.

❗  https://opensource.com/article/19/4/gpg-subkeys-ssh
  https://www.gnupg.org/documentation/
  https://www.gnupg.org/documentation/manuals.html
    GnuPG manual
    https://www.gnupg.org/documentation/manuals/gnupg/
    HTML, PDF
    Libgcrypt manual
    HTML, PDF.
    Libksba manual
    HTML, PDF.
    Libassuan manual
    HTML, PDF.
    GPGME manual
    HTML, PDF.
    Scute manual
    HTML, PDF.
    Man pages extracted from
  https://www.gnupg.org/documentation/manpage.html
  https://www.gnupg.org/documentation/manuals/gnupg24/gpg.1.html
    #❗ Unattended key generation

🧮 awk "~",🆚 "="
  정규식 매칭 vs  정확한 문자열 비교
🧪📵 Test Fail ... gpg key with ssh...  음.. 이거 너무 문서가 없어.. gpg key 를 ssh 로 사용하는 경우는 드문가..
  fish config
    # 현재 터미널 정보를 GPG_TTY에 설정
    set -x GPG_TTY (tty)

    # 기존 ssh-agent의 PID를 해제
    set -e SSH_AGENT_PID

    # GPG 에이전트의 SSH 소켓을 SSH_AUTH_SOCK에 설정
    if test "$gnupg_SSH_AUTH_SOCK_by" != "$fish_pid"
        set -x SSH_AUTH_SOCK (gpgconf --list-dirs agent-ssh-socket)
    end
    # set -gx XDG_RUNTIME_DIR /run/user/(id -u)

    gpgconf --launch gpg-agent

  echo "%echo Generating an SSH-compatible GPG key
  Key-Type: eddsa
  Key-Curve: Ed25519
  Key-Usage: sign,auth
  Subkey-Type: ecdh
  Subkey-Curve: Curve25519
  Subkey-Usage: encrypt
  Name-Real: id_ed25519-raspberry_pi_1
  Name-Email: wbfw109v2@gmail.com
  Expire-Date: 0
  Passphrase: rpi
  %commit
  %echo done" | gpg --batch --generate-key


  >> 
    gpg: Generating an SSH-compatible GPG key
    gpg: WARNING: server 'gpg-agent' is older than us (2.4.4 < 2.4.7)
    gpg: Note: Outdated servers may lack important security fixes.
    gpg: Note: Use the command "gpgconf --kill all" to restart them.
    gpg: revocation certificate stored as '/home/wbfw109v2/.gnupg/openpgp-revocs.d/D25A6DD3C9C4C92EB759A05E193BE4FC228E2D5D.rev'
    gpg: done

  gpgconf --kill all
  gpgconf --launch gpg-agent

  gpg --list-secret-keys

  echo "enable-ssh-support" | tee ~/.gnupg/gpg-agent.conf

  gpg -K --with-keygrip 
  # sec (Secret Key)
  # uid (User ID)
  # ssb (Subkey)
  # keygrip: unique identifier for GPG key

  # Search for the ssb section in the GPG output, then extract the Keygrip that follows and immediately exit
  set keygrip (gpg --list-secret-keys --with-keygrip | awk '/ssb/ {while(getline) if($1 == "Keygrip") {print $3; exit}}')
    1. 주 키 또는 서브키 선택
      SSH 인증에 사용할 키를 선택하려면 주 키(Primary Key) 또는 서브키(Subkey) 중 하나를 선택해야 합니다.
      일반적으로 주 키는 서명 및 인증을 위한 기본 키로 사용되며, 서브키는 암호화나 서명을 위한 보조적인 역할을 합니다.

    2. keygrip 선택
      keygrip이 여러 개 나올 때, SSH 인증용으로 사용할 키에 해당하는 keygrip을 선택해야 합니다.
      SSH 인증에 주로 사용되는 키는 ssb 항목으로 나타나는 서브키입니다. 따라서 서브키의 keygrip을 사용하여 sshcontrol 파일에 추가할 수 있습니다.

  # Search for the ssb section in the GPG output, then extract the Keygrip that follows and immediately exit
  set keygrip (gpg --list-secret-keys --with-keygrip | awk '/ssb/ {while(getline) if($1 == "Keygrip") {print $3; exit}}')
  # DE768498810614C4CA2F91ECA722774023EF7FB9
  echo $keygrip | tee -a ~/.gnupg/sshcontrol

  gpg --list-public-keys
    >> D25A6DD3C9C4C92EB759A05E193BE4FC228E2D5D

  ❯ gpg --export-ssh-key
  usage: gpg [options] --export-ssh-key <user-id>

  gpg --export-ssh-key id_ed25519-raspberry_pi_1 > ~/.ssh/id_ed25519-raspberry_pi_1.pub
    >> ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIHKjKpyn2VRHYN0O5B0l7X1Rb4GazdDGT76rK/j6n/TO openpgp:0x228E2D5D
  ssh-copy-id -f -i ~/.ssh/id_ed25519-raspberry_pi_1.pub pi19@pi.local



  # gpgp --delete-key



  gpg --export-ssh-key DE768498810614C4CA2F91ECA722774023EF7FB9 > ~/.ssh/id_ed25519-raspberry_pi_1.pub

  gpg --edit-key wbfw109v2@gmail.com
    >>  usage: SC .. 서명 및 인증용..


  ❓ GPG 키를 사용할 경우, SSH 설정 파일에서 IdentityFile을 지정하지 않아야 합니다. 대신, SSH 클라이언트가 GPG 에이전트를 통해 키를 자동으로 가져오게 설정합니다. ~/.ssh/config 파일을 아래와 같이 수정하세요:

  https://gist.github.com/mcattarinussi/834fc4b641ff4572018d0c665e5a94d3


  현재 ssh-agent를 시작한 상태에서 ssh-add -L 명령이 "The agent has no identities"라고 표시되는 것은 gpg-agent와 ssh-agent가 서로 다른 에이전트를 사용하고 있다는 점이 문제일 수 있습니다. 아
➡️ Do not add passphrase.. 
  IdentityFile ~/.ssh/id_ed25519-raspberry_pi_1 >> phrase 입력 요구
  AddKeysToAgent yes  >> 비밀번호 입력 요구..

## https://docs.redhat.com/ko/documentation/red_hat_enterprise_linux/8/html/configuring_basic_system_settings/connecting-to-remote-machines-with-ssh-keys-using-ssh-agent_assembly_using-secure-communications-between-two-systems-with-openssh#connecting-to-remote-machines-with-ssh-keys-using-ssh-agent_assembly_using-secure-communications-between-two-systems-with-openssh

🪱 platform ; https://en.wiktionary.org/wiki/platform
  (computing) Ellipsis of computing platform: a particular type of operating system or environment such as a database or other specific software, and/or a particular type of computer or microprocessor, used to describe a particular environment for running other software.

https://en.wikipedia.org/wiki/Extended_Display_Identification_Data

 │&nbsp;&nbsp;&nbsp;&nbsp;├── [Issues.md](prototypes/_lab/tech_stack/hardware_and_os/Issues.md)  

 HTML, CSS, Numpy, Pandas

Pandas, Numpy

HTML5, CSS

Javascript, Apache, Numpy, Pandas, Pytorch, Tensorflow

https://developer.mozilla.org/en-US/docs/Web/CSS

Apache	Apache	![Apache](https://img.shields.io/badge/apache-%23D42029.svg?style=for-the-badge&logo=apache&logoColor=white)

nVIDIA	nVIDIA	![nVIDIA](https://img.shields.io/badge/nVIDIA-%2376B900.svg?style=for-the-badge&logo=nVIDIA&logoColor=white)
  prototypes/_initialization/ubuntu/init_in_fish_semi_automatic-vision.fish

LaTeX	LaTeX	![LaTeX](https://img.shields.io/badge/latex-%23008080.svg?style=for-the-badge&logo=latex&logoColor=white)

HTML5	HTML5	![HTML5](https://img.shields.io/badge/html5-%23E34F26.svg?style=for-the-badge&logo=html5&logoColor=white)
JavaScript	JavaScript	![JavaScript](https://img.shields.io/badge/javascript-%23323330.svg?style=for-the-badge&logo=javascript&logoColor=%23F7DF1E)

NumPy	NumPy	![NumPy](https://img.shields.io/badge/numpy-%23013243.svg?style=for-the-badge&logo=numpy&logoColor=white)
Pandas	Pandas	![Pandas](https://img.shields.io/badge/pandas-%23150458.svg?style=for-the-badge&logo=pandas&logoColor=white)
PyTorch	PyTorch	![PyTorch](https://img.shields.io/badge/PyTorch-%23EE4C2C.svg?style=for-the-badge&logo=PyTorch&logoColor=white)
TensorFlow	TensorFlow	![TensorFlow](https://img.shields.io/badge/TensorFlow-%23FF6F00.svg?style=for-the-badge&logo=TensorFlow&logoColor=white)


FastAPI	FastAPI	![FastAPI](https://img.shields.io/badge/FastAPI-005571?style=for-the-badge&logo=fastapi)
JWT/JSON Web Token	JWT	![JWT](https://img.shields.io/badge/JWT-black?style=for-the-badge&logo=JSON%20web%20tokens)

OpenGL	OpenGL	![OpenGL](https://img.shields.io/badge/OpenGL-%23FFFFFF.svg?style=for-the-badge&logo=opengl)
Pytest	Pytest	![Pytest](https://img.shields.io/badge/pytest-%23ffffff.svg?style=for-the-badge&logo=pytest&logoColor=2f9fe3)
Github Pages	GithubPages	![Github Pages](https://img.shields.io/badge/github%20pages-121013?style=for-the-badge&logo=github&logoColor=white)

Markdown	Markdown	![Markdown](https://img.shields.io/badge/markdown-%23000000.svg?style=for-the-badge&logo=markdown&logoColor=white)
TypeScript	TypeScript	![TypeScript](https://img.shields.io/badge/typescript-%23007ACC.svg?style=for-the-badge&logo=typescript&logoColor=white)


scikit-learn	scikit-learn	![scikit-learn](https://img.shields.io/badge/scikit--learn-%23F7931E.svg?style=for-the-badge&logo=scikit-learn&logoColor=white)
SciPy	Scipy	![SciPy](https://img.shields.io/badge/SciPy-%230C55A5.svg?style=for-the-badge&logo=scipy&logoColor=%white)

Keras	Keras	![Keras](https://img.shields.io/badge/Keras-%23D00000.svg?style=for-the-badge&logo=Keras&logoColor=white)
Matplotlib	Matplotlib	![Matplotlib](https://img.shields.io/badge/Matplotlib-%23ffffff.svg?style=for-the-badge&logo=Matplotlib&logoColor=black)


Hibernate	Hibernate	![Hibernate](https://img.shields.io/badge/Hibernate-59666C?style=for-the-badge&logo=Hibernate&logoColor=white)

ESLint	ESLint	![ESLint](https://img.shields.io/badge/ESLint-4B3263?style=for-the-badge&logo=eslint&logoColor=white)
FFmpeg	FFmpeg	![FFmpeg](https://shields.io/badge/FFmpeg-%23171717.svg?logo=ffmpeg&style=for-the-badge&labelColor=171717&logoColor=5cb85c)

Kubernetes	Kubernetes	![Kubernetes](https://img.shields.io/badge/kubernetes-%23326ce5.svg?style=for-the-badge&logo=kubernetes&logoColor=white)
OpenAPI Specification	OpenAPI Specification	![openapi initiative](https://img.shields.io/badge/openapiinitiative-%23000000.svg?style=for-the-badge&logo=openapiinitiative&logoColor=white)
Prettier	Prettier	![Prettier](https://img.shields.io/badge/prettier-%23F7B93E.svg?style=for-the-badge&logo=prettier&logoColor=black)
PyPi	PyPi	![PyPi](https://img.shields.io/badge/pypi-%23ececec.svg?style=for-the-badge&logo=pypi&logoColor=1f73b7)
Swagger	Swagger	![Swagger](https://img.shields.io/badge/-Swagger-%23Clojure?style=for-the-badge&logo=swagger&logoColor=white)
Zigbee	Zigbee	![Zigbee](https://img.shields.io/badge/zigbee-%23EB0443.svg?style=for-the-badge&logo=zigbee&logoColor=white)


Gunicorn	Gunicorn	![Gunicorn](https://img.shields.io/badge/gunicorn-%298729.svg?style=for-the-badge&logo=gunicorn&logoColor=white)
Jenkins	Jenkins	![Jenkins](https://img.shields.io/badge/jenkins-%232C5263.svg?style=for-the-badge&logo=jenkins&logoColor=white)
Apache Tomcat	Apache Tomcat	![Apache Tomcat](https://img.shields.io/badge/apache%20tomcat-%23F8DC75.svg?style=for-the-badge&logo=apache-tomcat&logoColor=black)

GitHub	GitHub	![GitHub](https://img.shields.io/badge/github-%23121011.svg?style=for-the-badge&logo=github&logoColor=white)



-==========
### conan 🔪 [\[package\] pulseaudio/14.2 : I'm using clang 18 but error; Compiler does not support -std=gnu11](https://github.com/conan-io/conan-center-index/issues/25075)

Checked on 📅 2025-01-02 16:04:18

---


### [Cross-compiling Qt for a 32-bit Raspberry Pi does not work well](https://github.com/PhysicsX/QTonRaspberryPi/issues/21)

=========
❗ Android Layout 종류?
https://gnss.eseoul.go.kr/system_sub1_01  

📰📰📰📰📰📰📰📰📰📰📰📰📰📰>> 이투비비 ..명함만 받아오기.
  Rust 개발.. >> 거기 지원서 하나 넣기..
  
  꾸미기 + 양복.
  + IDE   

Layout gravity

Ctrl + Shift + U 우분투 특수문자 입력

아래꺼 curl -fsSL ~ 부분 자동화 스크립트 작성 팔요 ===
✅ (how-to); settings for Embedded development 📅 2024-10-11 14:17:51
  - install PlatformIO Extension in VSCode
  - install udev ; https://docs.platformio.org/en/latest/core/installation/udev-rules.html
    | https://en.wikipedia.org/wiki/Udev
    🚣 Linux users have to install udev rules for PlatformIO supported boards/devices.
    %shell>
      # udb: user device or userspace/dev
      # https://raw.githubusercontent.com/platformio/platformio-core/develop/platformio/assets/system/99-platformio-udev.rules
      curl -fsSL https://raw.githubusercontent.com/platformio/platformio-core/develop/platformio/assets/system/99-platformio-udev.rules | sudo tee /etc/udev/rules.d/99-platformio-udev.rules
      # udevadm: udev administator
      sudo udevadm control --reload-rules
      sudo udevadm trigger
  - %vscode> PlatformIO: PlatformIO Home
    Quick Access - New Project
      - Project Wizard
        - Name: signal-master
        - Board: Arduino Uno
        - Framework: Arudino
        - Location: <project_root>
  ##  https://docs.platformio.org/en/latest/tutorials/espressif32/arduino_debugging_unit_testing.html ~
  # Compiling and Uploading the Firmware: Compile, Upload, Minitor
  # 📰 Adding Bluetooth LE features

  - check conneted device
    %shell> udevadm info --query=property --name=/dev/ttyACM0 | grep --extended-regexp 'ID_VENDOR_FROM_DATABASE|ID_MODEL_FROM_DATABASE'


udev
  

project template readme 잣겅.


📰▶️ 다원시스!! 준비

https://shields.io/badges

  uery Parameters
  style string
  Possible values: [flat, flat-square, plastic, for-the-badge, social]

  If not specified, the default style for this badge is "flat".

  Example: flat
    https://itmustbecode.com/pcf-control-generate-shields-io-badges-in-the-powerplatform/


TCP MSS is 1460 bytes ; https://en.wikipedia.org/wiki/Maximum_segment_size
  https://velog.io/@leesfact/%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-TCPIP-4%EA%B3%84%EC%B8%B5-MTU-MSSPMTUD

Network
 3계층은 "어디로 보낼지", **4계층은 "어떻게 전달할지"**에 초점
 2계층 프레임은 데이터를 캡슐화한 구조로, 물리 계층에서 실제 전송되는 데이터입니다.

- Wireless-networking standard: IEEE 802.11n ; https://en.wikipedia.org/wiki/IEEE_802.11n-2009
  > Data rates up to 600 Mbit/s are achieved only with the maximum of four spatial streams using one 40 MHz-wide channel.
  
- Maximum transmission unit (MTU) ; https://en.wikipedia.org/wiki/Maximum_transmission_unit
  > Media for IP transport    Maximum transmission unit (bytes)   Notes
    Ethernet                  1500                                Nearly all IP over Ethernet implementations use the Ethernet II frame format."

https://zserge.com/jsmn/
✅ (how-to) Optimize... packaet...전송 단위.. 1460 초과 안되도록... network.. 2025-01-22 01:44:41
  Ethernet Frame Structure and TCP MSS (Maximum Segment Size) Calculation
  for determining the optimal maximum size of application data (payload).

  Ethernet Frame Components:
    Component            Size         Description
    Ethernet Header      14 bytes     Contains MAC addresses and Ethernet layer information
    IP Header            20 bytes     Contains source and destination IP addresses
    TCP Header           20 bytes     Contains port information and TCP layer details
    Payload (Data)       1460 bytes   Application data
    FCS (Footer)         4 bytes      Frame Check Sequence for error detection

  Calculation:
    Ethernet MTU (Maximum Transmission Unit) = 1500 bytes
      - This refers to the maximum size of the payload that can be carried by Ethernet.
      - Includes the IP Header, TCP Header, and Application Data (Payload).

    Ethernet Frame Total Size = 1518 bytes
      - Ethernet MTU (1500 bytes)
      + Ethernet Header (14 bytes)
      + FCS (Footer) (4 bytes)            // Frame Check Sequence
      --------------------------------------
      Total = 1518 bytes (Maximum Ethernet Frame Size)

    TCP MSS (Maximum Segment Size) = 1460 bytes
      - Ethernet MTU (1500 bytes)
      - IP Header (20 bytes)
      - TCP Header (20 bytes)
      --------------------------------------
      TCP MSS = 1460 bytes (Maximum Application Data Size)

  Optimization:
    Application data (payload) should be kept within 1460 bytes
    to avoid fragmentation at the network layer, ensuring efficient
    and reliable transmission.

❓ 직렬화란.. bytes형태로..
  https://en.wikipedia.org/wiki/Serialization



TODO: ⚓ Synchronization 🔪 implementation ; https://en.wikipedia.org/wiki/Synchronization_(computer_science)#Implementation
  Synchronization Primitives


=======
..Media.. CUDA programming.. open mesa?.. 이걸 뭐 작성할떄 쓰지.. 작성할일이잇나.. 우분투에서..
>>>>>>> refs/remotes/origin/main


https://www.raspberrypi.com/documentation/


  https://www.raspberrypi.com/documentation/computers/raspberry-pi.html
  https://www.raspberrypi.com/documentation/computers/processors.html#bcm2711
    https://datasheets.raspberrypi.com/bcm2711/bcm2711-peripherals.pdf
  https://datasheets.raspberrypi.com/bcm2711/bcm2711-peripherals.pdf


  https://www.raspberrypi.com/documentation/computers/raspberry-pi.html#raspberry-pi-4-model-b
    https://datasheets.raspberrypi.com/rpi4/raspberry-pi-4-reduced-schematics.pdf

  https://en.wikipedia.org/wiki/OrCAD

  https://en.wikipedia.org/wiki/OrCAD#OrCAD_PSpice
    OrCAD EE PSpice is a SPICE circuit simulator application for the simulation 

  ❗ Ground symbol ; https://en.wikipedia.org/wiki/Ground_(electricity)#Electronics


폴 캐스터

https://www.actfl.org/assessments/postsecondary-assessments/oral-proficiency-interview-computer-opic

conan - 
Kubuntu 클립보드 -> ctrl+; 단축키
ROS, QT 


⚓ noanPB ; https://jpa.kapsi.fi/nanopb/
  Nanopb is a plain-C implementation of Google's Protocol Buffers data format. It is targeted at 32 bit microcontrollers, but is also fit for other embedded systems with tight (<10 kB ROM, <1 kB RAM) memory constraints.
  https://jpa.kapsi.fi/nanopb/
  https://jpa.kapsi.fi/nanopb/docs/

  Generator는 Python 스크립트(nanopb_generator.py) 또는 사전 빌드된 실행 파일(nanopb_generator)로 제공됩니다. 


https://github.com/protocolbuffers/protobuf/?tab=readme-ov-file#protocol-buffers---googles-data-interchange-format

🪱 **직렬화(Serialization)**는 데이터를 연속된 바이트(stream) 형태로 변환하여, 파일, 메모리, 네트워크 등을 통해 전송하거나 저장할 수 있도록 만드는 것.
  반대로, **역직렬화(Deserialization)**는 이 바이트 데이터를 원래의 데이터 구조나 객체로 복원하는 과정입니다.


RPC는 IPC를 사용해 네트워크와 로컬 시스템의 경계를 추상화하고, 프로세스 간 호출을 마치 로컬 함수처럼 보이도록 구현합니다.


⚓ IPC ; https://en.wikipedia.org/wiki/Inter-process_communication



⭕ Blender ; https://en.wikipedia.org/wiki/Blender_(software)..
  Clip stuido 보다?.. 더 좋다고하는듰? 📅 2025-01-23 13:14:57




C4Context
  title System Context diagr  am for Internet Banking System
    Enterprise_Boundary(b0, "BankBoundary0") {
    Person(customerA, "Banking Customer A", "A customer of the bank, with personal bank accounts.")
    Person(customerB, "Banking Customer B")
    Person_Ext(customerC, "Banking Customer C", "desc")

    Person(customerD, "Banking Customer D", "A customer of the bank, <br/> with personal bank accounts.")

    System(SystemAA, "Internet Banking System", "Allows customers to view information about their bank accounts, and make payments.")

    Enterprise_Boundary(b1, "BankBoundary") {
      SystemDb_Ext(SystemE, "Mainframe Banking System", "Stores all of the core banking information about customers, accounts, transactions, etc.")

      System_Boundary(b2, "BankBoundary2") {
        System(SystemA, "Banking System A")
        System(SystemB, "Banking System B", "A system of the bank, with personal bank accounts. next line.")
      }

      System_Ext(SystemC, "E-mail system", "The internal Microsoft Exchange e-mail system.")
      SystemDb(SystemD, "Banking System D Database", "A system of the bank, with personal bank accounts.")

      Boundary(b3, "BankBoundary3", "boundary") {
      SystemQueue(SystemF, "Banking System F Queue", "A system of the bank.")
      SystemQueue_Ext(SystemG, "Banking System G Queue", "A system of the bank, with personal bank accounts.")
      }
    }
  }

  BiRel(customerA, SystemAA, "Uses")
  BiRel(SystemAA, SystemE, "Uses")
  Rel(SystemAA, SystemC, "Sends e-mails", "SMTP")
  Rel(SystemC, customerA, "Sends e-mails to")

  UpdateElementStyle(customerA, $fontColor="red", $bgColor="grey", $borderColor="red")
  UpdateRelStyle(customerA, SystemAA, $textColor="blue", $lineColor="blue", $offsetX="5")
  UpdateRelStyle(SystemAA, SystemE, $textColor="blue", $lineColor="blue", $offsetY="-10")
  UpdateRelStyle(SystemAA, SystemC, $textColor="blue", $lineColor="blue", $offsetY="-40", $offsetX="-50")
  UpdateRelStyle(SystemC, customerA, $textColor="red", $lineColor="red", $offsetX="-50", $offsetY="20")

  UpdateLayoutConfig($c4ShapeInRow="3", $c4BoundaryInRow="1")


https://en.wikipedia.org/wiki/AUTOSAR



현대 모비스는
  응용 프로그램.. 쪽.. tier 1
현대 오토에버
  BSW 를 개발하는 업체 오토사 사양을 보고 개발.
  소프트웨어 요구사항 ~ 아키텍처 ~ 단위 설계
  개발 안에 검증도 있고 테스트도 잇다.

  매트랩처럼 그림을 그리는 것은 ASW 에서 모델 기반으로 그려서..?.. 한다.. 이 부문에서 주로 사용하지 않는다.

  ASW, BSW?
  SDV? 차량의 안정성을 위해..
  클래식 플랫폼: 표준 MCU 사양에 맞춰서 개발.
  AP 플랫폼 (C++): 고사양의 어댑티브 플랫폼에 대해서 개발?


  다양한 하드웨어 기능을 받는거를 올려서 M8?
  
  AI 

  ChatGPT -> HChat 대신 사용한다는듯.

  클라우드 사업부 따로 있음.

  MPU <->AP

/////  ❗ 자조서 이름 변경
  mcu/IOT/DEVICE 개발자

🪱 SDX (Software-Defined Everything)


NanoPB 통신 테스트/protobuf docs 조사.
gRPC
  배달 로봇, 엘리베이터 같은 노드가 임베디드 장비라면 gRPC의 HTTP/2 스택은 리소스 낭비가 될 수 있습니다. 
  ??? STM32를 사용하는 환경에서는 경량화와 자원 최적화가 특히 중요합니다. 이 경우, 소켓 통신 + nanoPB 방식이 가장 적합할 것으로 보입니다. gRPC는 STM32 환경에서 과도한 리소스를 요구하기 때문에 적합하지 않을 가능성이 높습니다.


CMOS 이미지 센서란?
  CMOS 이미지 센서는 들어오는 빛을 디지털 이미지로 변환하도록 설계된 CMOS(Complementary Metal Oxide Semiconductor) 기술이 적용된 반도체 장치입니다


http://nc-recruit.com/kr/index.php
http://nc-recruit.com/kr/index.php


🪱 LDC ; Lens Distortion Correction


Rear view Camera
CI(Color Interpolation)는 ISP의 근본적인 기술로서 영상의 화질을 결정하는 요소입니다.



https://marketplace.visualstudio.com/items?itemName=yzane.markdown-pdf



... 어도비 컨버터는 이상하게 줌. 글자 깨지고..  https://www.online-convert.com/result#j=2dff2635-8fe2-48e3-92a8-152b0185cfac


Windows Powershel settings..
  Privacy & security
    ...

다음 팟 플레이어는
  설치 과정에 
    OpenCodec Files
    FFmpeg Files
    Intel H.264 MVC Decoder
  코덱 설치 과정이 포함되어있다.


?📰 TCP/IP 소켓에서 nanoPB 를 사용해서 이미지 메타데이터와, 이미지 를 나눠 전송해야 한다..?   
  어떻게..
  이미지 전송 시작 플래그, 해제 플래그가 있어야 함.

  

일단은 통신부터.

  typedef enum {
      TYPE_IMAGE = 1,
      TYPE_VIDEO,
      TYPE_AUDIO,
      TYPE_TEXT
  } DataType;

  typedef enum {
      STATUS_START = 1,
      STATUS_IN_PROGRESS,
      STATUS_END
  } DataStatus;

플래그 전송 구조
  typedef struct {
      DataType type;      // 데이터 유형
      DataStatus status;  // 데이터 전송 상태
      uint32_t size;      // 데이터 크기 (옵션)
  } DataFlag;

NanoPB를 사용할 경우, .proto 파일로 정의:
  syntax = "proto3";

  message DataFlag {
    enum DataType {
      TYPE_PROTOBUF = 1;  // NanoPB 메시지
      TYPE_TEXT = 2;      // 텍스트 데이터
      TYPE_AUDIO = 3;     // 오디오 데이터 (스트림)
      TYPE_IMAGE = 4;     // 이미지 데이터 (스트림)
      TYPE_VIDEO = 5;     // 비디오 데이터 (스트림)
    }

    enum DataStatus {
      STATUS_START = 1;
      STATUS_IN_PROGRESS = 2;
      STATUS_END = 3;
    }

    DataType type = 1;       // 데이터 유형
    DataStatus status = 2;   // 데이터 상태
    uint32 size = 3;         // 데이터 크기 (옵션)
}


음.. 데이터 플래그를 설정해서 소켓에서 다양한 유형의 포맷으로 TCP 통신하는게 일반적인 practice 야?
  네, 데이터 플래그를 설정하여 다양한 데이터 유형(예: 이미지, 영상, 오디오 등)을 TCP 통신으로 처리하는 방식은 일반적인 실무 관행입니다. 특히, 프로토콜 설계가 필요한 커스텀 TCP 통신에서 데이터의 유형과 상태를 명확히 구분하는 것이 중요합니다. 이는 유연성, 확장성, 디버깅 용이성을 제공하기 때문입니다.


  네, 데이터 플래그를 설정하여 다양한 데이터 유형(예: 이미지, 영상, 오디오 등)을 TCP 통신으로 처리하는 방식은 일반적인 실무 관행입니다. 특히, 프로토콜 설계가 필요한 커스텀 TCP 통신에서 데이터의 유형과 상태를 명확히 구분하는 것이 중요합니다. 이는 유연성, 확장성, 디버깅 용이성을 제공하기 때문입니다.
  1. 데이터 플래그를 사용하는 이유
  (1) TCP는 데이터의 경계를 구분하지 않음
    TCP는 스트림 기반 프로토콜로, 데이터를 바이트 스트림으로 전달합니다.
    이는 전송 데이터가 하나의 흐름으로 전달되기 때문에, 데이터의 경계를 명확히 알 수 없습니다.
    데이터를 구분하려면 애플리케이션 레벨에서 추가 정보를 정의해야 합니다(예: 데이터 유형, 크기, 상태 등).
  (2) 다양한 데이터 유형의 처리
    실무에서는 한 연결에서 여러 유형의 데이터를 처리해야 할 수 있습니다(예: 명령 메시지, 이미지 데이터, 영상 데이터 등).
    데이터를 구분하기 위해 메타데이터와 데이터 유형을 함께 전송하여 데이터를 명확히 식별합니다.
  (3) 확장성과 유지보수성
    enum을 통해 데이터 유형과 상태를 체계적으로 관리하면 새로운 데이터 유형(예: 텍스트, 센서 데이터 등)을 추가할 때도 쉽게 확장 가능합니다.
    문자열 기반 구분("START_IMAGE", "END_IMAGE")보다 오타나 일관성 문제를 줄여 유지보수가 쉽습니다.

  2. 실무에서 데이터 플래그 사용 사례
  (1) 멀티미디어 데이터 전송
    예: 스트리밍 서비스(Netflix, YouTube 등)는 하나의 TCP 연결에서 메타데이터와 영상 데이터를 동시에 전송합니다.
    메타데이터: 영상의 해상도, 길이, 포맷, 청크 크기 등.
    플래그: 데이터 유형(영상, 오디오 등)과 전송 상태(시작, 종료)를 명시.
  (2) IoT 기기 데이터 통신
    예: 센서 데이터를 클라우드 서버로 전송할 때, 한 연결에서 다양한 센서 데이터를 전송.
    플래그: 센서 유형(온도, 습도, 압력 등)과 데이터 상태를 구분.
  (3) 커스텀 프로토콜
    예: 금융 서비스에서 클라이언트와 서버 간 커스텀 프로토콜로 데이터를 송수신.
    플래그: 명령(조회, 업데이트 등), 데이터 유형(거래 기록, 사용자 정보 등)을 구분.

3. 데이터 플래그를 활용한 설계의 일반적인 패턴
(1) 메타데이터와 데이터 플래그 설계
  데이터 플래그(DataFlag)를 통해 다음 정보를 명시합니다:
  데이터 유형: 이미지, 영상, 오디오 등.
  전송 상태: 시작, 진행 중, 종료.
  데이터 크기: 수신자가 정확히 데이터를 처리하기 위해 필요.
(2) 전송 구조
  메타데이터 전송:
    데이터 유형과 상태를 나타내는 플래그를 먼저 전송.
    수신자는 이를 해석하여 이후 데이터를 어떻게 처리할지 결정.
  데이터 본문 전송:
    메타데이터 뒤에 실제 데이터를 전송.
    데이터가 크다면 청크 단위로 나눠 전송.
  완료 플래그 전송:
    데이터 전송이 완료되었음을 알리기 위해 종료 플래그를 전송.

❓ 근데 궁금한게 이렇게 플래그로 구문하되, 청크로 안나누고 한 번에 보내면 단점이 있나? 내아 알기로는 어차피 프레임크기가 일정 바이트 이상 벗어나면 자동으로 나눠서 전송되는거로 아는데.. 이거랑 다른 개념인가?  중간 데이터 손실 시 알수가 없어? 

1. TCP에서 데이터 전송 방식
  TCP는 스트림 기반 프로토콜로, 데이터가 프레임 단위로 전송됩니다. 그러나 애플리케이션에서 데이터를 보내는 단위와 TCP가 실제로 네트워크로 나누어 보내는 단위는 다릅니다.

  (1) 애플리케이션 레벨: 데이터 전송
    애플리케이션에서 send() 또는 write()를 호출할 때, 데이터가 한 번에 송신됩니다.
    이 데이터가 크더라도 TCP가 내부적으로 나눠서 처리하기 때문에 애플리케이션은 데이터 크기를 신경 쓰지 않아도 됩니다.
  (2) TCP 레벨: 데이터 프레임 분할
    TCP는 **MTU(Maximum Transmission Unit)**와 같은 네트워크 제한을 기준으로 데이터를 작은 청크(프레임)로 분할하여 전송합니다.
    Ethernet의 MTU는 일반적으로 1500바이트이며, TCP/IP 헤더(40바이트)를 제외하면 약 1460바이트의 데이터를 한 번에 보낼 수 있습니다.
    이보다 큰 데이터는 TCP가 자동으로 분할하고, 수신 측에서 다시 조립합니다.
  (3) TCP의 데이터 손실 처리
    TCP는 패킷 손실이 발생하면 해당 패킷만 재전송하여 데이터의 무결성을 보장합니다.
    따라서, 중간 데이터 손실 시 애플리케이션은 알지 못하며, TCP가 이를 투명하게 처리합니다.

2. 청크로 나누지 않고 한 번에 전송하는 경우의 단점
  (1) 데이터 경계 관리 문제
    TCP는 스트림 기반이기 때문에, 수신 측에서 데이터를 받을 때 데이터 경계를 보장하지 않습니다.
    예: send()로 두 번 나눠 보낸 데이터를 recv()로 한 번에 받거나, 반대로 한 번에 보낸 데이터를 여러 번에 나눠 받을 수 있습니다.
      해결책:
        데이터의 경계를 명확히 하기 위해 데이터 크기를 먼저 전송하거나 플래그를 사용하는 방식이 필요합니다.
  (2) 메모리 사용량 문제
    데이터를 한 번에 전송하려면 송신 측과 수신 측 모두에서 데이터를 한꺼번에 처리할 메모리가 필요합니다.
    데이터가 매우 크면(예: 수백 MB 또는 GB) 메모리 부족 문제가 발생할 수 있습니다.
    해결책:
      데이터를 청크 단위로 나눠 처리하면 메모리 사용량을 효율적으로 관리할 수 있습니다.
  (3) 네트워크 대역폭 및 속도 문제
    네트워크가 불안정한 환경(예: IoT 장치, 무선 네트워크)에서는 대규모 데이터를 한 번에 전송할 경우 패킷 손실 가능성이 높아집니다.
    TCP는 손실된 패킷만 재전송하지만, 손실된 패킷이 많아지면 전송 속도가 크게 저하될 수 있습니다.
    해결책:
      작은 청크로 나눠 전송하면 패킷 손실로 인한 재전송 부담을 줄일 수 있습니다.
  (4) 데이터 손실 시 복구 문제
    TCP는 데이터 손실 시 패킷을 재전송하지만, 만약 연결 자체가 끊어지는 경우(예: 소켓 타임아웃), 이미 전송된 데이터는 모두 손실됩니다.
    청크 단위로 데이터를 나눠 전송하면 부분적으로 전송된 데이터를 저장하여 재시도할 수 있지만, 한 번에 전송하면 전체 데이터를 다시 보내야 합니다.
    해결책:
      청크 전송 방식은 실패한 부분만 재전송할 수 있도록 설계가 가능합니다.
    
ok . 고마워. 일단 이미지, 오디오, 비디오에 대해서는 이렇게 하는 게 일반적인 관행이란거지?

서버 예시?

  #include <stdio.h>
  #include <stdlib.h>
  #include <string.h>
  #include <unistd.h>
  #include "pb_decode.h"
  #include "data_flag.pb.h"

  #define BUF_SIZE 1024

  void error_handling(const char *message) {
      perror(message);
      exit(1);
  }

  // 데이터 플래그 수신 및 처리
  void receive_data_flag(int sock, DataType *type, DataStatus *status, uint32_t *size) {
      uint8_t buffer[128];
      pb_istream_t stream;
      DataFlag flag = DataFlag_init_zero;

      // 데이터 플래그 수신
      read(sock, buffer, sizeof(buffer));
      stream = pb_istream_from_buffer(buffer, sizeof(buffer));

      // NanoPB 역직렬화
      if (!pb_decode(&stream, DataFlag_fields, &flag)) {
          fprintf(stderr, "Failed to decode DataFlag: %s\n", PB_GET_ERROR(&stream));
          exit(1);
      }

      // 플래그 데이터 반환
      *type = flag.type;
      *status = flag.status;
      *size = flag.size;
  }

  // 데이터 유형에 따라 처리
  void handle_data(int sock, DataType type, uint32_t size) {
      char buffer[BUF_SIZE];

      switch (type) {
          case TYPE_PROTOBUF:
              // NanoPB 데이터 처리
              read(sock, buffer, size);
              printf("Received Protobuf message (%u bytes): %s\n", size, buffer);
              // 추가적으로 역직렬화 처리 가능
              break;

          case TYPE_TEXT:
              // 텍스트 데이터 처리
              read(sock, buffer, size);
              buffer[size] = '\0'; // 널 종결 추가
              printf("Received Text: %s\n", buffer);
              break;

          case TYPE_AUDIO:
              // 오디오 스트림 처리
              printf("Receiving Audio Stream (%u bytes)...\n", size);
              while (size > 0) {
                  ssize_t bytes_read = read(sock, buffer, BUF_SIZE);
                  size -= bytes_read;
                  printf("Processing %zd bytes of audio data...\n", bytes_read);
                  // 오디오 데이터 처리 (예: 저장)
              }
              printf("Audio stream completed.\n");
              break;

          case TYPE_IMAGE:
              // 이미지 스트림 처리
              printf("Receiving Image Stream (%u bytes)...\n", size);
              FILE *image_file = fopen("received_image.jpg", "wb");
              if (!image_file) {
                  perror("Failed to open image file");
                  exit(1);
              }
              while (size > 0) {
                  ssize_t bytes_read = read(sock, buffer, BUF_SIZE);
                  size -= bytes_read;
                  fwrite(buffer, 1, bytes_read, image_file);
                  printf("Writing %zd bytes of image data...\n", bytes_read);
              }
              fclose(image_file);
              printf("Image stream completed and saved to received_image.jpg.\n");
              break;

          case TYPE_VIDEO:
              // 비디오 스트림 처리
              printf("Receiving Video Stream (%u bytes)...\n", size);
              FILE *video_file = fopen("received_video.mp4", "wb");
              if (!video_file) {
                  perror("Failed to open video file");
                  exit(1);
              }
              while (size > 0) {
                  ssize_t bytes_read = read(sock, buffer, BUF_SIZE);
                  size -= bytes_read;
                  fwrite(buffer, 1, bytes_read, video_file);
                  printf("Writing %zd bytes of video data...\n", bytes_read);
              }
              fclose(video_file);
              printf("Video stream completed and saved to received_video.mp4.\n");
              break;

          default:
              fprintf(stderr, "Unknown data type received: %d\n", type);
              break;
      }
  }

  int main(int argc, char *argv[]) {
      if (argc != 2) {
          printf("Usage: %s <Port>\n", argv[0]);
          exit(1);
      }

      int serv_sock, clnt_sock;
      struct sockaddr_in serv_addr, clnt_addr;
      socklen_t clnt_addr_size;

      // 소켓 생성
      serv_sock = socket(PF_INET, SOCK_STREAM, 0);
      if (serv_sock == -1)
          error_handling("socket() error");

      // 서버 주소 설정
      memset(&serv_addr, 0, sizeof(serv_addr));
      serv_addr.sin_family = AF_INET;
      serv_addr.sin_addr.s_addr = htonl(INADDR_ANY);
      serv_addr.sin_port = htons(atoi(argv[1]));

      // 바인드와 리슨
      if (bind(serv_sock, (struct sockaddr *)&serv_addr, sizeof(serv_addr)) == -1)
          error_handling("bind() error");
      if (listen(serv_sock, 5) == -1)
          error_handling("listen() error");

      // 클라이언트 연결 수락
      clnt_addr_size = sizeof(clnt_addr);
      clnt_sock = accept(serv_sock, (struct sockaddr *)&clnt_addr, &clnt_addr_size);
      if (clnt_sock == -1)
          error_handling("accept() error");

      while (1) {
          DataType type;
          DataStatus status;
          uint32_t size;

          // 데이터 플래그 수신
          receive_data_flag(clnt_sock, &type, &status, &size);

          // 상태에 따라 처리
          if (status == STATUS_START) {
              printf("Starting data transfer (type: %d, size: %u bytes)\n", type, size);
              handle_data(clnt_sock, type, size);
          } else if (status == STATUS_END) {
              printf("Data transfer completed (type: %d)\n", type);
          } else if (status == STATUS_IN_PROGRESS) {
              printf("Data transfer in progress...\n");
          } else {
              printf("Unknown status received: %d\n", status);
          }
      }

      close(clnt_sock);
      close(serv_sock);
      return 0;
  }


oneof
enum
message



4. GraphQL의 구조를 소켓 통신에 적용할 때의 장점    // overpatching, underpatching 을 막음.
유연한 데이터 요청:

클라이언트가 필요한 데이터만 요청할 수 있어, 불필요한 데이터 전송을 줄일 수 있음.
구조화된 데이터:

요청과 응답이 명확히 정의되어 있어, 유지보수와 디버깅이 쉬움.
실시간 처리:

Subscription처럼 실시간 이벤트를 관리할 수 있는 구조를 소켓 통신에 쉽게 적용 가능.



담당할 터틀봇/엘레베이터.. id 받는 쿼리도 있어야 함.
https://graphql.org/learn/schema/#the-query-mutation-and-subscription-types
  schema {
    query: MyQueryType
    mutation: MyMutationType
    subscription: MySubscriptionType
  }


graphQL은 쿼리를 통해 요청하므로 POST로만 요청을 보낼 수 있다. URL을 통한 정보를 표현하는 방식은 REST 방식이므로 사용되지 않
  그러면 등록, 수정, 삭제, 조회는 어떻게 구분해서 요청을 해야할까? 이 부분은 body를 통해 구분하게 된다.

  조회 : query
  등록/수정/삭제 : mutation
  구독 : subscription

  Fragment
  UnionType 


https://fastapi.tiangolo.com/how-to/graphql/
  not nullable


  조건을 통해 포함, 생략 여부를 지정해줄 수 있다. 필드값에도 가능하고, 객체에도 가능하다.

    @include(if: T/F) : 포함여부
    @skip(if: T/F) : 생략여부

 스칼라 타입이 아닌 객체 타입을 전달할 수 도 있다.
    참고로 스칼라 타입이 아닌 객체 타입을 전달할 수 도 있다. 이를 input object type 이라고 한다. 아래와 같이 만들 수 있고, 기존의 type 대신 input을 사용하여 생성한다.

    input ReviewInput {
      stars: Int!
      commentary: String
    }

Subscription
  일반적인 REST API에서는 상상도 못했던 기능으로 WebSocket을 이용해 실시간 통신을 하는 것처럼 실시간 데이터 변경을 받을 수 있도록 하는 기능이다.
  페이스북에서 만든 API 인 만큼 실제 페이스북에서 사용되는 것을 기반으로 만들어졌는데 바로 실시간 좋아요 수 반영이다. 실제 적용된 사례로 모든 클라이언트가 "좋아요" 이벤트를 구독하게 하고 실시간으로 "좋아요"수가 새로고침 없이 없데이트 되는 것을 볼 수 있도록 만들었다.

Introspection
  인트로스펙션은 GraphQL에서 제공하는 강력한 기능인데 이를 사용하면 현재 API 스키마의 세부 사항에 관한 쿼리를 작성할 수 있다. 이를 통해 GraphQL 플레이그라운드 인터페이스에서 GraphQL 문서를 보여주는 것이다.

    

    REST API에서 Swagger 문서를 통해 확인하던 API 문서를 API 자체에서 기능으로 제공하고 있는 것이다.

    

    전체 스키마에 대한 인트로스펙션 조회

    query {
      __schema {
        types {
          name
          description
        }
      }
    }


  GraphQL은 주로 HTTP 기반 요청-응답 패턴에 적합하며, 실시간 기능(예: Subscriptions)은 추가 구현(WebSocket)과 설정이 필요합니다.




맞습니다! **select**와 **epoll**은 둘 다 소켓 기반 비동기 I/O를 처리하기 위한 기술이며, **epoll**은 **select**의 단점을 개선한 고성능 대안입니다. 아래에서 두 가지를 비교하며 설명하겠습니다.

1. select란?
  **select**는 다중 소켓(파일 디스크립터, FD)을 감시하여 읽기(read), 쓰기(write), 또는 예외(exception) 상태를 확인할 수 있게 해주는 함수입니다.
  비동기 통신에서 클라이언트와의 소켓 상태를 효율적으로 확인할 수 있습니다.
  select의 기본 동작
  select는 모든 소켓에 대해 폴링 방식으로 동작:
  감시할 소켓 목록을 준비.
  select 호출 후 상태 변화가 있는 소켓을 확인.
  변경된 소켓에 대해 작업 수행.

FD 개수 제한:
  대부분의 시스템에서 파일 디스크립터의 개수가 1024로 제한되어 있음 (FD_SETSIZE).
  많은 연결(수천~수만 개)을 처리하기 어렵다.
  비효율적인 처리:

  모든 소켓을 매번 선형 탐색하므로, FD가 많아질수록 성능이 급격히 저하됨.
  처리 시간이 O(N)으로 비효율적.
  변경된 전체 FD를 복사:

  select는 호출 시마다 FD 집합을 사용자 공간에서 커널 공간으로 복사. 오버헤드가 크다.


➡️ Trends: select -> epoll



1. 현재 코드(Server.c)의 특징
  1) 멀티스레드 기반 설계
  클라이언트가 연결되면 새로운 스레드(pthread_create)를 생성하여 해당 클라이언트를 처리합니다.
  각 스레드는 클라이언트 소켓을 전용으로 사용하며, 데이터를 수신하고 처리합니다.
  2) 장점
  구조가 간단하며, 소규모 연결에서 효율적으로 동작.
  클라이언트가 적을 때 스레드 간 병렬 처리로 성능이 충분히 보장.
  3) 단점
  스레드 오버헤드:

  클라이언트 수가 많아질수록 스레드 생성 및 관리 오버헤드가 증가.
  각 스레드는 메모리를 점유하므로 메모리 사용량이 급격히 증가.
  스케일링 한계:

  수천~수만 개의 클라이언트를 처리하기 어렵다.
  각 스레드는 하나의 클라이언트만 처리하므로, 비효율적일 수 있음.
  컨텍스트 스위칭 비용:

  운영체제가 다수의 스레드를 전환(Context Switching)하는 데 큰 비용이 발생.
  적합한 경우
  클라이언트 수가 100~500명 이하의 소규모 시스템.
  간단한 구현이 필요할 때.



라운드 로빈 방식으로 해보자.
  새로운 클라이언트 연결은 라운드 로빈 방식으로 쓰레드에 분배.


  https://community.st.com/t5/stm32cubemx-mcus/how-to-configure-stm32cubemx-to-support-c-development/td-p/109965

STm32 with c++
  (2) 성능 차이가 생길 수 있는 경우
    런타임 오버헤드:

    예외 처리(try-catch), RTTI(런타임 타입 정보)를 활성화하면 약간의 런타임 오버헤드가 추가될 수 있습니다.
    STM32와 같은 제한된 자원 환경에서는 -fno-exceptions, -fno-rtti 플래그를 사용하는 것이 일반적.
    STL 사용:

    STL은 동적 메모리 할당(new, delete)을 자주 사용하기 때문에 임베디드 시스템에서는 성능과 메모리 사용량에 영향을 줄 수 있습니다.
    따라서 STL 사용은 제한적으로 하거나, 임베디드 환경에 적합한 대체 라이브러리(예: ❓ ETL: Embedded Template Library)를 사용하는 것이 좋습니다.
    메모리 사용량 증가:

    C++의 객체지향 설계(OOP)와 클래스 사용으로 인해, 구조체(C)보다 메모리를 약간 더 소모할 수 있습니다.
    특히, 가상 함수(virtual function)는 **가상 함수 테이블(vtable)**로 인해 추가 메모리를 사용합니다.


0. try-catch 문은 사용안하고 return type 에 따라 처리하면 되는거고.  맞지? 그러면 성능저하없는거.
1. -fno-exceptions, -fno-rtti 플래그 가 뭐야?
2. Embedded Template Library 가 뭐야? STL 은 c++ 내장 라이브러리엿는데.. 
3. 메모리 사용량 증가
'메모리 사용량 증가:

C++의 객체지향 설계(OOP)와 클래스 사용으로 인해, 구조체(C)보다 메모리를 약간 더 소모할 수 있습니다.
특히, 가상 함수(virtual function)는 **가상 함수 테이블(vtable)**로 인해 추가 메모리를 사용합니다.' 이 부분이 그렇게 커? 차이가 느껴지나?


1. -fno-exceptions와 -fno-rtti 플래그
이 두 플래그는 임베디드 환경에서 C++의 런타임 오버헤드를 줄이기 위해 사용되는 GCC 컴파일러 옵션입니다.

(1) -fno-exceptions
  역할
    C++의 예외 처리(try-catch, throw) 기능을 비활성화합니다.
  효과:
    예외 처리를 위한 메모리 테이블과 런타임 스택 언와인딩(unwinding) 코드가 제거되어 바이너리 크기가 감소합니다.
  주의:
    예외를 사용할 수 없으므로 모든 오류 처리는 반환값을 통해 이루어져야 합니다.

(2) -fno-rtti
  역할:
    C++의 런타임 타입 정보(Runtime Type Information, RTTI)를 비활성화합니다.
    RTTI는 동적 캐스팅(dynamic_cast)과 타입 정보를 확인하는 typeid 연산자에 필요합니다.
  효과:
    가상 함수 테이블(vtable)에서 RTTI 관련 데이터가 제거되어 메모리 사용량이 감소합니다.
  임베디드에서 필요성:
    RTTI는 보통 고성능 PC에서 동적 객체 모델링에 사용되며, 임베디드 환경에서는 거의 사용되지 않으므로 불필요한 기능으로 간주됩니다.


(4) ETL vs STL
  기능	                STL	                      ETL
  메모리 할당 방식	    동적 메모리(new, delete)	  정적 메모리
  메모리 단편화	발생    가능	                      없음
  임베디드 최적화	      X	O
  런타임 오버헤드	있음	최소화

  ⚓ 1. ETL 은 따로 설치해야하는거야? https://github.com/ETLCPP/etl
    https://www.etlcpp.com/
2. 동적 메모리 사용은 안하면 되는거고. 가상 함수의 경우
    실제 메모리 오버헤드가 어느 정도인가?
    작은 클래스:

    가상 함수가 없는 경우, 구조체(C)와 거의 동일한 메모리 사용량.
      예: 10KB 이하의 작은 클래스라면, OOP로 인한 오버헤드는 수십 바이트 수준.
    가상 함수와 다형성 사용:
      vtable과 vptr로 인해 객체당 4~8바이트(32/64비트 시스템)가 추가됩니다.
      예: 1000개의 객체가 있다면 4~8KB의 추가 메모리가 필요.
    허용 범위
      STM32와 같은 임베디드 시스템에서 RAM이 20512KB로 제한되므로, **추가 메모리 소비가 1020KB 이상 발생**하는 경우 주의가 필요합니다.
      객체 수가 적거나, 가상 함수를 최소화하면 문제가 되지 않습니다.

      1. 메모리 오버헤드 계산
        가정
        100개의 객체를 사용.
        각 클래스가 가상 함수 4개를 포함.
        시스템이 32비트 환경(vptr 크기 = 4바이트).
        오버헤드 계산
        vptr로 인한 메모리 증가:

        각 객체마다 4바이트 추가(vptr).
        100개 × 4바이트 = 400바이트.
        vtable 크기:

        가상 함수 4개 × 4바이트(32비트 포인터) = 16바이트.
        각 클래스마다 1개의 vtable이 생성되며, 이는 전역 메모리에 저장되므로 객체 수와 무관.
        총 메모리 사용량 증가:
        vptr(400바이트) + vtable(16바이트) ≈ 416바이트.
Temp
  - Protobuf는 메시지를 메모리에 한 번에 로드하고, 객체 그래프보다 크지 않은 데이터 크기를 가정합니다.
    수 메가바이트(MB)를 초과하는 데이터에서 Protobuf를 사용할 경우, 직렬화된 데이터를 처리하면서 여러 복사본이 생성될 수 있어 메모리 사용량이 급증할 수 있습니다.
  - 대안: 스트리밍 프로토콜(예: Apache Avro)이나 데이터베이스 기반 솔루션을 고려.
  

🪱 AMCL은 Particle Filter를 통해 위치를 파악(측위, Localization)하는 알고리즘 

TODO: Multithreaded Server in c++ using Epoll ; https://unscriptedcoding.medium.com/multithreaded-server-in-c-using-epoll-baadad32224c
TODO: Protobuf c++ ; https://protobuf.dev/getting-started/cpptutorial/
TODO: + ROS 어떻게 통신할것인지.. 프로토버프.. nanoPB..
TODO: graphql 과 비슷한 방식으로 protobuf 를 사용하고, + message type 까지 함꼐 보내려는 경우... 메시지 구성..
Turtlebot 3 <--> ROS matser node <---> socket server 와 통신을 어떻게? 무엇으로 구현?.. 동기화가 필요한데

https://en.wikipedia.org/wiki/Autoconf

📰 GPT 바꾸기?? 근데 웹 검색 기능은 gpt 만 제공하는듯.
  현재 사용 중이신 ChatGPT는 월 정액제로 일정 시간 동안 토큰 한도를 초과하면 일정 시간 후에 다시 사용 가능한 방식으로 운영되고 있습니다. 이와 유사하게, Google의 Gemini Advanced도 월 구독 모델을 채택하고 있습니다. Gemini Advanced는 월 $19.99의 요금으로 제공되며, 첫 한 달은 무료로 체험하실 수 있습니다. 
  GEMINI.GOOGLE

  Gemini Advanced를 구독하시면 Google의 차세대 AI 모델인 Gemini 1.5 Pro에 접근할 수 있으며, 이는 향상된 논리적 추론과 분석 능력을 제공합니다. 또한, 최대 1,500페이지에 달하는 대용량 문서를 효율적으로 탐색하고 분석할 수 있는 100만 개의 토큰 컨텍스트 윈도우를 지원합니다. 추가로, Google Docs, Sheets, Gmail 등과의 통합 기능과 2TB의 Google One 스토리지도 포함되어 있습니다. 
  GEMINI.GOOGLE

  따라서, ChatGPT와 마찬가지로 Gemini Advanced도 월 구독료를 지불하고 일정 한도 내에서 서비스를 이용하는 방식입니다. 각 서비스의 기능과 요금제를 비교하여 사용 목적과 필요에 맞는 서비스를 선택하시는 것이 좋을 것 같습니다.
https://abseil.io/


**Arena Allocation(아레나 할당)**이란?
  메모리 할당을 최적화하는 기술로, 여러 개의 메시지를 하나의 "아레나" 메모리 풀에 할당
  보통 new 연산자로 개별적으로 할당하면 메모리 단편화(fragmentation)가 발생할 수 있음
  Arena를 사용하면 메모리 재사용이 가능하고 속도가 향상됨
  예제

https://medium.com/@forrestallison/my-problems-with-ros2-and-why-im-going-my-own-way-and-salty-about-it-4802146eca89
  ⚓ protobuf + NATS ; https://en.wikipedia.org/wiki/NATS_Messaging
  1️⃣ What is NATS?
    NATS is a lightweight publish-subscribe messaging system.
    Unlike ROS 2, it is language-agnostic and portable across OS platforms.
  2️⃣ Why Use Protobuf Instead of ROS Messages?
    ✅ Protobuf is language-neutral → Works with C++, Python, Rust, Go, Java, etc.
    ✅ More efficient → Protobuf is binary-based, making it faster and smaller than ROS 2 messages.
    ✅ Easier to version → Backward-compatible by design (optional and default fields).

  3️⃣ How Protobuf + NATS Works
    Protobuf defines the message structure.
    NATS handles the publish-subscribe communication.
    Nodes (sensors, actuators, controllers) publish & listen to messages, just like ROS 2.
    Works across Linux, Windows, macOS, Raspberry Pi, and any cloud service.
  

ROS의 기본 메시지 전달 방식도 발행/구독 패턴을 사용하지만, ROS 2의 경우 **DDS(Data Distribution Service)**를 기반으로 합니다. 따라서, NATS는 ROS 2의 기본 통신 시스템과는 별개의 메시징 시스템입니다. Action 방식은 양측 노드의 코드를 수정하여 구현할 수 있지만, 이는 서비스 호출과 피드백 메커니즘을 포함하는 별도의 통신 패턴입니다.


2025 년 2월.
  https://fosdem.org/2025/schedule/event/fosdem-2025-6548-programming-ros-2-with-rust/
  https://github.com/ros2-rust/ros2_rust
https://docs.ros.org/en/dashing/Concepts/About-ROS-2-Client-Libraries.html
  JVM and Android
  Objective C and iOS
  C#
  Swift
  Node.js
  Ada
  _.NET Core, UWP and C#
  Rust
또한, ROS 2의 구조는 rcl(ROS Client Library)이라는 C 언어 기반의 공통 인터페이스를 사용하여 다양한 언어로의 확장을 용이하게 합니다. 이를 통해 C++, Python 외에도 Java, C#, Swift, Node.js, Ada 등 여러 언어로의 클라이언트 라이브러리 개발이 가능해졌습니다.



❓ 메시지 로스를 막기 위해 QoS 설정이 필요 (ROS 2의 DDS에서 해결 가능)

🔹:small_blue_diamond: 결론: 필요한 방식대로 쓰면 된다!
  실시간 센서 데이터, 제어 신호, 이벤트 기반 통신 → Pub/Sub 모델 (ROS 2, Protobuf + NATS)
  저장된 데이터 조회, 클라이언트 요청-응답 패턴 → Query 모델 (REST API, gRPC, DB Query 등)

NATS (Pub/Sub)
NATS (Request-Reply)
소켓 (TCP/UDP)


Bazel은 Hermetic Build(의존성을 완전히 격리한 빌드)를 지원해서 일관된 결과를 보장함.. 여러 언어가 필요한 대규모 프로젝트에서 사용..
  https://bazel.build/basics/hermeticity
2025년 기준, ROS 2와 외부 시스템(소켓 서버) 간의 통신 방법
  표준 TCP/UDP 소켓 사용 (가장 일반적인 방식)
    ✅ 간단한 요청-응답 통신을 처리할 때 가장 적합
    ✅ ROS 2 이외의 시스템과 직접적인 네트워크 연결 가능
    ❌ ROS 2의 메시징 시스템(DDS)과는 별개로 동작
  Rosbridge 사용 (WebSocket 기반)
    ✅ 비 ROS 시스템(웹 브라우저, 클라우드)과 쉽게 연결 가능
    ✅ JSON 메시지를 사용하여 다양한 언어와 호환
    ❌ 성능이 높은 방식은 아님 (WebSocket의 특성상 TCP 기반 통신 속도가 느릴 수 있음)
  FastDDS 또는 RTPS 게이트웨이 사용 (DDS-RTP/TCP 변환)
    ✅ 고성능 데이터 공유 가능 (특히 산업용 로봇, 자율 주행 시스템에서 활용)
    ❌ 설정이 복잡하고 일반적인 사용 사례는 아님
  MQTT 사용 (클라우드 또는 IoT 연결)
    ✅ 클라우드 연결에 적합 (AWS IoT, Google Cloud IoT 등과 연결 가능)
    ✅ 로봇 데이터를 외부 시스템으로 스트리밍할 때 유용
    ❌ 실시간성이 필요할 경우 적합하지 않음 (MQTT는 기본적으로 비동기 처리)
  NATS 또는 ZeroMQ 같은 메시징 시스템 사용
    ✅ 고성능 네트워크 메시징 (특히 대용량 데이터 스트리밍 시 유용)
    ❌ 기본 ROS 2 DDS 시스템과 별도로 관리해야 함


1. Protobuf와 ROS 2의 상호 운용성

  proto2ros와 같은 도구를 사용하면 Protobuf 메시지 정의를 ROS 2 메시지로 변환하고, 양방향 변환 API를 생성할 수 있습니다. 이를 통해 ROS 2 노드와 Protobuf를 사용하는 외부 시스템 간의 원활한 데이터 교환이 가능합니다
  https://github.com/bdaiinstitute/proto2ros

2. Protobuf를 통한 TCP 소켓 통신 예제

  protobuf-over-tcpsocket-example 프로젝트는 TCP 소켓을 통해 Protobuf 메시지를 전송하는 예제를 제공합니다. 이 예제는 ROS 2 노드와 외부 소켓 서버 간의 통신에 적용할 수 있으며, C++로 작성되어 있습니다. 
  
https://docs.freedomrobotics.ai/docs/connect-with-protobuf

➡️ 음.. 이거 모두 2023  버전인가는 테스트 안된거같은데  protobuf.
그리고 내 말은 음.. ros master<-> 외부 소켓서버와 통신할떄에는 protobuf 든, 텍스트방식이든 json 이든 뭘 해도 되지만 ros master 와 다른 ros 와 통신할 떄에는 어쩔 수 없이 변환 과정이 필요한거겟지? 
  ✅ ROS Master ↔ 외부 소켓 서버: JSON, Protobuf, YAML, 또는 단순 텍스트 등 원하는 방식 사용 가능
  ✅ ROS Master ↔ 다른 ROS 노드: ROS 2의 DDS 기반 메시지 시스템을 따라야 함 (즉, ROS 메시지 형식으로 변환 필요)

 
🔹 DDS란?
  DDS (Data Distribution Service) 는 ROS 2의 기본 통신 프로토콜입니다.
  즉, ROS 2 노드들이 서로 통신할 때 사용하는 메시징 미들웨어입니다.
  ROS 1은 TCP/UDP를 직접 사용했지만, ROS 2는 DDS를 사용하여 더 확장성과 성능을 높였습니다.

  ✅ 중앙 서버(Master) 없이 노드 간 직접 통신 가능
  ✅ 네트워크 자동 탐색(Discovery) 지원 (노드들이 자동으로 서로 찾음)
  ✅ TCP/UDP 기반에서 동작하며, 실시간 QoS 기능 제공

  💡 쉽게 말해, DDS는 ROS 2에서 "노드 간 메시지를 주고받게 해주는 핵심 시스템"

1.내가 지금, ROS 1 을 사용하고 있는데 그럴 경우에는..? 메시지 방식에 대한 구현 예시를 줘.
2. 그리고 내가 궁금한건 단순히 프로토콜 버퍼는 메시지 컴파일/파싱 용도 아니야? 그러면 이 컴파일 후 직렬화한 바이너리 값을 ros1 메시지방식에 메시지 부분에만 끼워넣으면 사용할 수 있는거 아니야?? 통합이 쉬울 거라고 보는데.. 아닌가? 아직 안써봐서 모르겟어


2. 정리: 보편 참조를 사용할 때 L-value와 R-value의 타입 결정
  전달된 값	                           T의 타입         T&&의 타입
  std::string s = "Hello"; func(s);	  std::string&	  std::string& (L-value 유지)
  func(std::string("Hello"));	        std::string	    std::string&& (R-value 유지)

L-value를 넘기면 L-value 참조(T&)가 되고,
R-value를 넘기면 R-value 참조(T&&)가 된다.





https://gcc.gnu.org/onlinedocs/

대체 툴..
  https://www.reddit.com/r/rust/comments/i1abpg/comment/g070nty/?utm_source=share&utm_medium=web3x&utm_name=web3xcss&utm_term=1&utm_content=share_button


면접.. 📰 rPath
  ELF는 Executable and Linkable Format의 약자로, 리눅스 및 유닉스 계열 운영체제에서 실행 파일, 오브젝트 파일, 공유 라이브러리, 코어 덤프 등을 위한 표준 파일 형식입니다.


Core dump
  https://en.wikipedia.org/wiki/Core_dump

📰 https://grpc.io/docs/protoc-installation/#binary-install 에 포함된대로.. rpath 등록해야 함!!





wbfw109v2 in 🌐 iot-04 in synergy-hub on  main [!] is 📦 v0.1.0 via 🐍 v3.13.1 (central-server-py3.13) 
❯ brew edit protobuf
Warning: edit is a developer command, so Homebrew's
developer mode has been automatically turned on.
To turn developer mode off, run:
  brew developer off

Editing /home/linuxbrew/.linuxbrew/opt/protobuf/.brew/protobuf.rb
Warning: Using code because no editor was set in the environment.
This may change in the future, so we recommend setting EDITOR
or HOMEBREW_EDITOR to your preferred text editor.
Command is only available in WSL or inside a Visual Studio Code terminal.


/home/linuxbrew/.linuxbrew/opt/protobuf/.brew/protobuf.r

https://github.com/orgs/Homebrew/discussions/4672
  Why put static and dynamic libraries in the same directory? #4672

However, this is a HUGE pain when using clang and especially Xcode. clang's cli (or rather ld) will always link the dynamic library when specified via -lfmt as long as both live in the same directory.
Why put static and dynamic libraries in the same directory? #4672



📰 patchelf  >> 명령어...


https://cmake.org/cmake/help/latest/command/if.html


Nanopb doesn’t have a stable ABI (application binary interface) between versions, so using it as a shared library (.so / .dll) requires extra care.

https://jpa.kapsi.fi/nanopb/download/
curl -LO https://jpa.kapsi.fi/nanopb/download/nanopb-0.4.9.1-linux-x86.tar.gz
mkdir -p nanopb
tar -xvf nanopb-0.4.9.1-linux-x86.tar.gz -C nanopb --strip-component=1
cd nanopb

https://jpa.kapsi.fi/nanopb/docs/
pb.h
pb_common.h pb_common.c pb_decode.h pb_decode.c pb_encode.h pb_encode.c



CFLAGS 초기화: .. clangd 디버깅 정보에도 추가하기!! TODO: 📰

  -ansi
  : ANSI C 표준을 준수하도록 컴파일합니다.
  -Wall
  : 모든 경고(warnings)를 활성화합니다.
  -Werror
  : 경고를 모두 오류로 처리하여, 경고 발생 시 컴파일을 중단하게 합니다.
  -g
  : 디버깅 정보를 포함합니다.
  -O0
  : 최적화하지 않습니다(디버깅 시에는 최적화 없이 컴파일하는 것이 유리합니다).

protobuf..
  서버 측:

  서버는 클라이언트로부터 총 26바이트의 데이터를 수신하였습니다.
  19 (1바이트): 필드 번호와 와이어 타입을 포함한 태그 정보.
  0a (1바이트): 문자열의 길이를 나타내는 바이트.
  17 (1바이트): 문자열의 길이인 23을 나타내는 바이트.
  2f 75 73 72 2f 61 61 72 63 68 36 34 2d 6c 69 6e 75 78 2d 67 6e 75 2f (23바이트): /usr/aarch64-linux-gnu/ 경로의 UTF-8 인코딩.



결론부터 말하면, C++ 표준 라이브러리에는 unistd.h, sys/epoll.h, sys/socket.h, netinet/in.h, arpa/inet.h 같은 네트워크 및 시스템 호출 관련 헤더 파일이 없어.
  이 헤더들은 C 기반의 POSIX(Portable Operating System Interface) 표준을 따르는 Unix/Linux 시스템 API야. 따라서, C++에서도 이런 기능을 사용하려면 C의 헤더 파일을 그대로 가져와야 해.

  

https://www.boost.org/doc/libs/1_87_0/more/getting_started/unix-variants.html

https://en.wikipedia.org/wiki/Message_Passing_Interface


https://repology.org/project/rustcat/versions
https://formulae.brew.sh/formula/rustcat#default

https://github.com/robiot/rustcat


🆚 🔹 Proactor vs Reactor
 co_await c++20
  🔹 그럼 Boost.Asio는 어떻게 이벤트를 자동 분배할까?
  Boost.Asio는 내부적으로 작업 큐(Work Queue)와 작업 분배(Work Stealing) 기법을 사용하여 멀티스레드 환경을 관리합니다.

    ✅ 주요 원리

    io_context는 **이벤트 큐(작업 큐)**를 가지고 있음.
    io_context.run()을 실행한 스레드들이 이 큐에서 작업을 하나씩 가져가서 처리.
    대기 중인 스레드가 먼저 이벤트를 가져감 (🪱 Work Stealing 방식).
    한 이벤트를 여러 스레드가 동시에 처리하지 않도록 내부적으로 락(lock)과 동기화가 적용됨.
    스레드 개수를 초기에 지정하지 않아도 되고, run()을 실행한 개수만큼 동적으로 할당 가능.
    - 한 이벤트를 여러 스레드가 동시에 처리하지 않도록 내부적으로 락(lock)과 동기화가 적용됨.
    스레드 개수를 초기에 지정하지 않아도 되고, run()을 실행한 개수만큼 동적으로 할당 가능.


스레드가 많아지면 성능이 저하됨 (수천 개의 연결을 처리하려면 수천 개의 스레드 필요).

(3) 동기 방식에서는 "🪱 C10K 문제" 해결이 어려움
  C10K 문제란? "하나의 서버에서 동시에 10,000개 이상의 클라이언트 연결을 처리하는 문제"
  동기 방식은 클라이언트마다 스레드를 하나씩 사용해야 하므로, 10,000개 이상의 연결을 감당하기 어려움.


📌 (2) I/O 작업이 많은 애플리케이션 (파일 서버, DB 연동 서버)
✅ 예시: 파일 다운로드 서버

비동기 방식은 네트워크 I/O뿐만 아니라 파일 I/O도 비동기적으로 처리 가능.
여러 개의 클라이언트가 파일을 다운로드하는 동안, 블로킹 없이 다른 요청도 처리 가능.

📌 (1) 고성능 네트워크 서버 (웹 서버, API 서버)
✅ 예시: Boost.Asio 비동기 방식 TCP 서버

📌 (2) I/O 작업이 많은 애플리케이션 (파일 서버, DB 연동 서버)
✅ 예시: 파일 다운로드 서버

비동기 방식은 네트워크 I/O뿐만 아니라 파일 I/O도 비동기적으로 처리 가능.
여러 개의 클라이언트가 파일을 다운로드하는 동안, 블로킹 없이 다른 요청도 처리 가능.

https://mariadb.com/downloads/connectors/connectors-data-access/cpp-connector/

📰 TODO: ❓ docker.. container 최적화?.. 바로 꺼지도록 하고 필요할때만 detatch 하기? https://stackoverflow.com/questions/25775266/how-to-keep-docker-container-running-after-starting-services



10시반

❗❗❗❗❗ protobuf cross comile: https://assil.me/2017/10/21/cross-compile-protobuf-arm-zynq.html
https://www.boost.org/build/doc/html/bbv2/tasks/crosscompile.html


Boost를 크로스 컴파일할 때 arm-none-linux-gnueabi-g++ 와 b2 toolset=gcc-arm을 지정하는 방법의 차이를 정리해 줄게.


TODO: 🎯 Target Triple naming
  🛍️ e.g. 
    /opt/protobuf
    ├── x86_64-linux-gnu
    │   ├── debug-shared
    │   ├── release-static
    │   └── release-shared
    └── aarch64-linux-gnu
        └── release-shared

nano
TODO: 빠른 캐싱 시스템... Bazel  사용하는 이유.. 그리고 재현 가능성이 있음. 멀티플랫폼 지원. 


./b2 --debug-configuration


🪱 TODO: glossary
  ⚓ Position-independent code (PIC); https://en.wikipedia.org/wiki/Position-independent_code
  ⚓ The Global Offset Table (GOT) ; https://en.wikipedia.org/wiki/Global_Offset_Table

  
  🚀 PIC의 주요 장점
  장점	설명
    공유 라이브러리 (.so)
      공유 라이브러리는 다양한 프로그램이 동시에 로드할 수 있도록 위치 독립적이어야 함.
      PIC가 없으면 각 프로세스마다 라이브러리를 새로 로드해야 하므로 메모리 낭비 발생.
      공유 라이브러리(.so) 지원	PIC를 사용하면 여러 프로세스가 같은 .so 파일을 공유할 수 있음.
      메모리 절약	PIC를 사용하면 같은 라이브러리를 여러 프로세스에서 공유하므로 RAM 사용량이 줄어듦.
      ASLR (Address Space Layout Randomization)

    **ASLR(주소 공간 레이아웃 난수화)**는 보안 기능으로,
      ASLR(Address Space Layout Randomization) 지원	메모리 보호 기능(보안 강화), 실행 위치를 랜덤으로 변경 가능.
      실행 파일과 라이브러리가 메모리에서 랜덤한 주소에 로드되도록 설정.
      PIC가 없으면 메모리 주소가 고정되어 ASLR 적용이 불가능함 → 해킹에 취약.

    >> ?? 
      리눅스 커널 모듈(.ko)은 공유 라이브러리처럼 동적 로드되지만, 일반적인 실행 파일(vmlinux)과 함께 동작하는 방식이다.
      그러나 커널 모듈은 고정된 메모리 주소에 직접 로드되기 때문에,
      위치 독립 코드(PIC, Position-Independent Code)를 사용하면 커널 코드 모델과 충돌하여 오류가 발생한다
    
    https://askubuntu.com/questions/851433/kernel-doesnt-support-pic-mode-for-compiling
      >> error: code model kernel does not support PIC mode
    https://askubuntu.com/questions/1239564/driver-builds-on-one-machine-but-not-other-code-model-kernel-does-not-support-p?noredirect=1&lq=1

  

베릴로그
  https://www.google.com/search?q=%EB%B2%A0%EB%A6%B4%EB%A1%9C%EA%B7%B8&oq=%EB%B2%A0%EB%A6%B4%EB%A1%9C%EA%B7%B8&gs_lcrp=EgRlZGdlKgkIABBFGDkYgAQyCQgAEEUYORiABDIHCAEQABiABDIHCAIQABiABDIHCAMQABiABDIHCAQQABiABDIHCAUQABiABDIHCAYQABiABDIHCAcQABiABNIBCTExMTAyajBqMagCALACAA&sourceid=chrome&ie=UTF-8


전자 기사 실효

https://grpc.io/docs/platforms/web/basics/
⚓ gRPC -Android ; https://grpc.io/docs/platforms/android/
⚓ gRPC-Web ; https://grpc.io/docs/platforms/web/basics/


⚓ https://en.wikipedia.org/wiki/Search_space

🧮 터미널 클리어 명령.. 단축키
  bind -p | grep "clear-screen"
  cltr+L

  

// https://www.sqlinform.com/buy-vscode-sql-formatter-plugin/

sqlfluff  
  📝 Linter 에 대한 formatter 임.  Human-readable formatter 가 아님. 📅 2025-02-06 22:11:37
  https://github.com/alanmcruickshank/sqlfluff
  https://marketplace.visualstudio.com/items?itemName=dorzey.vscode-sqlfluff
  https://formulae.brew.sh/formula/sqlfluff#default
sqlfmt
  https://formulae.brew.sh/formula/sqlfmt#default
  "shandy-sqlfmt.path": "/home/linuxbrew/.linuxbrew/bin/sqlfmt"
    brew 로 설치한걸 인식을 못하나? 무한pending 상태..

      pipx install shandy-sqlfmt[jinja]
    >> 주석의 경우, 모든 들여쓰기를 제거해버린다. 수정 불가.
      -- phone_number        VARCHAR(20)                       COMMENT '수령자 연락처. 월패드로 정보 전달
  -- 예정',





Thank you ...
… for purchasing a SQLinForm license.
I will send you the registration key via email within 1 day.

If you do not get the key within 24 hours please check my foruThanks For Buying Licensem. Sometimes (rarely) emails are rejected by SPAM filters.

Kind Regards
Guido Thelen
Gu.The Software


https://mariadb.com/kb/en/window-functions/


temp.
  sprintf

🔥 :fire: emoji 용도..

NanoPB.. 무조건 콜백으로 구현해야 함.
  https://stackoverflow.com/questions/69288444/encoding-decoding-optional-string-fields-using-nanopb
  https://github.com/nanopb/nanopb/blob/master/tests/callbacks/decode_callbacks.c

🪱 AI JailBreak;


// 소자의 특성, RLC ghlfh. 
// 🔰 처음 접속할떄 아이디 할당하는 것. 필요?..

// gRPC 를 사용하지 않기 때문에, 해당 요청에 대해서 자동으로 코드를 만들 수 없다. c 에서는 어떻게 해야하지?..


🪱 Return Value Optimization // Clang
TODO: 추가
  https://protobuf.dev/programming-guides/editions/#using-oneof
  https://jpa.kapsi.fi/nanopb/docs/concepts.html#oneof

  https://github.com/nanopb/nanopb/blob/master/generator/proto/google/protobuf/descriptor.proto

https://www.codingwiththomas.com/blog/boost-asio-server-client-example

📰 TODO:asio 만 따로 빌드하기. 다시.. 전체가 아니라. 크로스컴파일도 되도록.
  ⚓🚧 Using, Building, and Configuring Boost.Asio ; https://www.boost.org/doc/libs/1_87_0/doc/html/boost_asio/using.html

📰 TODO ppt..: Reactor pattern (select(), epoll. 동기적 방식.) -> Proactor pattern
  더 높은 처리량(throughput), 성능(performance), 또는 복잡한 요청(request complexity)을 처리해야 하는 경우를 위한, Reactor 패턴에서 발전한 Multi-Reactor 또는 Proactor 같은 변형 패턴
  핸들러가 오래 실행되면 다른 요청이 지연될 수 있다는 단점 개선.

  비동기 방식은 OS 커널이 입출력 처리를 관리하고, 완료되었을 때만 알림을 주는 방식이다.
  즉, 프로그램이 다른 작업을 수행할 수 있으며, 완료 핸들러(Completion Handler)가 실행된다.

운영체제                      기반                                      특징
---------------------------------------------------------------------------------------------
BSD 계열 (BSD-based OS)	      Berkeley Software Distribution (BSD)	   FreeBSD, OpenBSD, NetBSD, macOS 등
Linux 계열 (Linux-based OS)	  Unix-like OS (GNU/Linux 커널 기반)	      Ubuntu, Debian, CentOS, ArchLinux 등

  1. Linux에서 신호를 이벤트 방식으로 감지하는 방법
    📌 Linux는 기본적으로 epoll에서 신호를 감지할 수 없지만, signalfd를 사용하면 가능하다.
    📌 즉, signalfd를 epoll에 등록하여 "비동기 이벤트" 방식으로 신호를 감지할 수 있다.
    🔹 1.1 signalfd를 이용한 신호 감지 (Linux)
    🔹 1.2 eventfd를 이용한 프로세스 간 이벤트 감지

🧩 (퍼즐 조각) → 개별적인 구성 요소들이 모여 하나의 시스템을 이루는 개념 표현
  // 소프트웨어적인 것?
🔩 (볼트와 너트) → 작은 구성 요소들이 함께 결합되어 전체 시스템을 구성하는 의미
  // 하드웨어적인 것?


https://www.codingwiththomas.com/blog/boost-asio-server-client-example

https://googleapis.dev/python/protobuf/latest/google/protobuf/message.html#google.protobuf.message.Message

⚠️ TODO:.. 이거 발표 끝나고 처리하기 하..
  현재 clang++-17을 사용하면서 -stdlib=libc++을 적용하고 있습니다. 하지만 protobuf 및 abseil이 libstdc++로 빌드되었을 가능성이 높습니다.
  이 문제였네.

  ld.lld: error: undefined symbol: std::length_error::length_error(char const*)
  >>> referenced by throw_delegate.cc
  >>>               throw_delegate.cc.o:(absl::lts_20240116::base_internal::ThrowStdLengthError(char const*)) in archive /opt/protobuf/release-static/lib/libabsl_throw_delegate.a

  ld.lld: error: too many errors emitted, stopping now (use --error-limit=0 to see all errors)
  clang++-17: error: linker command failed with exit code 1 (use -v to see invocation)
  ninja: build stopped: subcommand failed.


 protobuf가 libstdc++로 빌드되었으니, Clang에서도 -stdlib=libstdc++을 맞춰주는 게 정답!

 https://cmake.org/cmake/help/latest/command/target_link_libraries.html
    Libraries for a Target and/or its Dependents
    target_link_libraries(<target>
                          <PRIVATE|PUBLIC|INTERFACE> <item>...
                        [<PRIVATE|PUBLIC|INTERFACE> <item>...]...)
      
      https://stackoverflow.com/questions/32161409/how-to-get-protobuf-enum-as-string
How to get protobuf enum as string?
  https://stackoverflow.com/questions/32161409/how-to-get-protobuf-enum-as-string

📰 TODO: reference 찾기.. 공식문서 어디? .code 로 enum 값 받아와야하는거..
      case smart_pkg_delivery::WrapperMsg::kResponse: {
        const auto &response = wrapper_msg.response();
        std::cout << "📩 Response 수신!" << std::endl;
        std::cout << "  - Source: " << response.src_name()
                  << " (ID: " << response.src_id() << ")" << std::endl;
        std::cout << "  - Destination: " << response.dest_name()
                  << " (ID: " << response.dest_id() << ")" << std::endl;

        // ✅ AckStatus에 따라 출력
        std::cout << "  - Ack Status: ";
        switch (response.ack_status().code()) {
        case smart_pkg_delivery::AckStatus::ACK_RECEIVED:
          std::cout << "ACK_INVALID";
          break;
        case smart_pkg_delivery::AckStatus::ACK_INVALID:
          std::cout << "ACK_RECEIVED";
          break;
        default:
          std::cout << "UNKNOWN_ACK_STATUS";
          break;
        }
        std::cout << std:

      
📰 TODO: nanoPB c++ 도 잇녜!
  https://github.com/nanopb/nanopb_cpp





음.. 아니 저렇게 하면 너무 클라이언트를 분류할 수 없는데..
실제 자동차 전장에서나 수십 수백개이상의 소켓통신이 있는 곳에서는 어떤식으로 하는데?
(2025년 기준, 실제 실무 기준/트렌드 기준으로!! )


현재 나는 (.proto)  .proto 를 사실 src type, src_id 를 이렇게 메시지에 함꼐 넣었거든?
근데 그러면 소켓 클라이언트가 src_type 을 변조해서 보낼 수 있다는 문제가 있을거같아.
근데 그렇다고 이를 서버에서 중간에서 받아서 src_type, id, name 을 지정한 소켓 클라이언트에 대해서 수정하는 건 괜찮은건가? 보안상?.. 아니 애초에 서버가 원래 이런 걸 확인해서 자신에게 들어온 소켓 클라이언트의 메시지 소스를 함께 관리하는건가?
나는 소켓 클라이언트가 서버에 처음 접속할때 자신의 src_type, src_id, src_name 을 주고, 서버에서 이를 확인해서 이미 서버에 등록된 것만 허용하게 하려고 해. 흠.. 왜냐면 역할군별로 나눠야해서.. 이건 어떻게 생각해?

enum NodeType {
  UNSPECIFIED = 0;
  SERVER = 1;
  CLIENT_ADDRESS_RECOGNIZER = 2;
  CLIENT_USER = 3;
  CLIENT_DELIVERY_ROBOT = 4;
  CLIENT_ELEVATOR = 5;
}

// 📨 A request message that expects a response from the destination.
message Request {
  NodeType src_type = 1;
  uint32 src_id = 2;
  string src_name = 3;
  NodeType dest_type = 4;
  uint32 dest_id = 5;
  string dest_name = 6;
  oneof request_type {
    // user (c++) ---> server
    GetPkgInfosRequest get_pkg_infos_request = 7;
    // client-delivery_robot (c++) ---> server ---> client-elevator (c)
    SetElevatorStatusRequest set_elevator_status_request = 8;
    // client-user (c++) ---> server ---> client-delivery_robot (c++)
    MoveDeliveryRobotRequest move_delivery_robot_request = 9;
  }
}

📌 1. 클라이언트 ID와 역할을 서버가 직접 관리해야 함
  ✅ 서버가 클라이언트의 src_type, src_id, src_name을 신뢰할 수 없음
  ✅ 클라이언트가 서버에 접속할 때 별도 인증 및 등록 과정이 필요
  ✅ 서버에서 관리하는 ID만 사용 가능하도록 강제

  👉 해결 방법
    클라이언트가 처음 접속할 때 Handshake 요청을 보냄
    서버가 클라이언트의 IP, 포트, 접속 정보를 기반으로 src_type, src_id, src_name을 재지정
    이후 모든 메시지에서 클라이언트가 제공하는 정보는 무시하고, 서버에서 인증된 정보만 사용
    메시지 변조 방지를 위해 HMAC (Hash-based Message Authentication Code) 적용

📌 2. 서버에서 클라이언트 목록을 유지 (클라이언트 등록 시스템)
  서버가 관리하는 "등록된 클라이언트 목록" (whitelist)을 유지해야 합니다.

📍 방법 1: 정적 등록 (Config 파일 or DB)
  자동차 전장 및 로봇 네트워크에서는 사전에 등록된 기기만 접속을 허용하는 것이 일반적.
  JSON, YAML, DB에 인증된 장치 목록을 저장하고 서버가 이를 확인.
  {
    "clients": [
      { "src_id": 1, "src_type": "CLIENT_DELIVERY_ROBOT", "src_name": "Robot_Alpha" },
      { "src_id": 2, "src_type": "CLIENT_ELEVATOR", "src_name": "Elevator_1" },
      { "src_id": 3, "src_type": "CLIENT_USER", "src_name": "User_Terminal" }
    ]
  }

  struct ClientInfo {
      NodeType type;
      std::string name;
  };

  std::unordered_map<uint32_t, ClientInfo> registered_clients = {
      {1, {CLIENT_DELIVERY_ROBOT, "Robot_Alpha"}},
      {2, {CLIENT_ELEVATOR, "Elevator_1"}},
      {3, {CLIENT_USER, "User_Terminal"}}
  };

📍 방법 2: 동적 등록 (클라이언트 인증 후 등록)
  클라이언트가 서버에 REGISTER 요청을 보내고 서버가 인증 후 ID를 할당.
  OAuth, JWT, HMAC, TLS 인증을 활용하여 정당한 클라이언트만 등록.
  IoT, V2X (Vehicle-to-Everything), 스마트 공장 시스템에서 자주 사용됨.

std::nullopt


📍 방법 2: 동적 등록 (클라이언트 인증 후 등록)
클라이언트가 서버에 REGISTER 요청을 보내고 서버가 인증 후 ID를 할당.
OAuth, JWT, HMAC, TLS 인증을 활용하여 정당한 클라이언트만 등록.
IoT, V2X (Vehicle-to-Everything), 스마트 공장 시스템에서 자주 사용됨.

mbedtls_ssl_context ssl;
mbedtls_ssl_init(&ssl);
mbedtls_ssl_setup(&ssl, &conf);
mbedtls_ssl_set_bio(&ssl, &server_fd, mbedtls_net_send, mbedtls_net_recv, NULL);

// TLS Handshake
if (mbedtls_ssl_handshake(&ssl) != 0) {
    printf("TLS Handshake Failed!\n");
}
✅ 실시간성이 중요한 경우 DTLS (Datagram TLS)를 사용하여 UDP 통신 보호
✅ 고속 이동체 (자동차, 로봇)에서는 DTLS를 선호하는 경우도 있음

🚀 일반적인 소켓(TCP/IP)에서 mbedTLS를 사용할 수 있을까?
네, 일반적인 소켓(TCP/IP)에서도 mbedTLS를 사용할 수 있습니다.
mbedTLS는 TLS(Transport Layer Security) 프로토콜을 구현한 라이브러리이므로, 기존 TCP 소켓 위에서 동작할 수 있습니다.

✅ mbedTLS는 TCP 소켓 위에서 TLS(SSL) 계층을 추가하여 보안 통신을 가능하게 해줍니다. ✅ 기본적으로 TCP 소켓을 열고, 그 
위에서 TLS 핸드셰이크를 수행하여 보안 채널을 형성합니다. ✅ 일반적인 웹 서버(HTTPS)와 유사하지만, MQTT, IoT, 로봇, 자동차 전장에서도 TCP 소켓 기반 보안 통신에 사용됩니다.

TODO: ⭕ mbedtls/3.6.2
  mbed TLS makes it trivially easy for developers to include cryptographic and SSL/TLS capabilities in their (embedded) products

  오호.. 그럼 전장같은 분야에서는 소켓에 어떤 방식을 사용해? mbedTLS? 를 자주 사용해? 대부분? 추세도 그렇고?
ChatGPT said:
자동차 전장 분야에서의 통신 보안은 매우 중요한 이슈로 부각되고 있습니다. 특히, 차량 내·외부 통신의 보안 강화를 위해 다양한 프로토콜과 기술이 적용되고 있습니다.

  1. 차량 내부 통신 보안:

    전통적으로 차량 내부 통신에는 CAN(Controller Area Network) 프로토콜이 널리 사용되어 왔습니다. 그러나 CAN 프로토콜은 암호화 기능이 없어 보안에 취약하다는 단점이 있습니다. 이를 보완하기 위해 CAN-FD와 같은 개선된 버전이 개발되었지만, 근본적인 보안 문제를 해결하기 위해서는 추가적인 보안 메커니즘이 필요합니다. 
    XN--3E0BX5E6XZFTAE3GXZPSKHILE.KR

  2. 차량 외부 통신 보안:

    차량과 외부 인프라 간의 통신(V2X: Vehicle-to-Everything)에서는 보안이 더욱 중요합니다. 이를 위해 IEEE 1609.2 표준에서는 메시지의 무결성과 인증을 위한 보안 서비스를 정의하고 있습니다. 또한, 차량용 공개키 기반 구조(SCMS: Security Credential Management System)를 통해 통신의 신뢰성을 확보하고 있습니다. 
    AVSTANDARD.OR.KR

  3. ⭕ mbedTLS의 활용:

    mbedTLS는 경량의 TLS(Transport Layer Security) 라이브러리로, 임베디드 시스템에서도 TLS를 구현할 수 있게 해줍니다. 자동차 전장 분야에서도 차량과 외부 서버 간의 통신에서 TLS를 적용하여 데이터의 기밀성과 무결성을 보장할 수 있습니다. 특히, 차량 내 인포테인먼트 시스템이나 텔레매틱스 장치에서 mbedTLS를 활용하여 안전한 통신을 구현하는 사례가 있습니다.
    ✅ mbedTLS를 사용하면 일반 TCP 소켓에서도 TLS 보안 통신을 적용할 수 있음
    ✅ 자동차 전장, IoT, 로봇, 산업 자동화에서 TLS를 사용하여 보안 통신 구현 가능
    ✅ 일반 TCP의 send() / recv() 대신 mbedtls_ssl_write() / mbedtls_ssl_read() 사용
  4. 최신 동향:

    최근 자동차 산업에서는 차량의 연결성이 증가함에 따라 사이버 보안에 대한 중요성이 더욱 강조되고 있습니다. 이에 따라 UNECE WP.29에서는 차량 사이버 보안 관리 시스템(CSMS: Cyber Security Management System)의 구축을 의무화하는 등 규제를 강화하고 있습니다. 
    KATECHTEST.CO.KR

    요약하면, 자동차 전장 분야에서는 통신 보안을 강화하기 위해 다양한 프로토콜과 기술이 적용되고 있으며, mbedTLS와 같은 경량 TLS 라이브러리도 활용되고 있습니다. 그러나 적용 여부는 시스템의 요구 사항과 자원 제약에 따라 다를 수 있습니다.
  

냅킨 AI
  프로토콜 버퍼/ NanoPB 를 사용함으로서, 클라이언트 (엘레베이터, 사용자, 택배 보관함, OCR 판독기) 의 이점
          

Boost.Asio 라이브러리. 비동기, 멀티쓰레딩 서버
  장점





본인이 시간이 없다면,
  해커스 파랑이 ➡️ 해커스 하양이 ➡️ 해커스 파이널

시간이 많다면,
  해커스 파랑이 ➡️ 해커스 하양이 
  ➡️ 타 출판사 봉투모의고사 ➡️ 해커스 파이널

  ​

  (개인적으로 오류가 많았던 렛유인은 솔직히 비추한다)
  [출처] 최종 합격자의 GSAT 공부법 및 책 추천|작성자 흑제리
  https://blog.naver.com/black_jerri/223146322849


https://en.wikipedia.org/wiki/Vendor_lock-in



아 단위를 보자. "만" 개. 객관식 답변의 단위. 그러니까 식을 세울 때부터 제거해도 된다.
  y = 650 - x
  x*1.1 + 0.85*y = 640

-- 계수부터 보고 계수를 1로 맞추게 만든 후, 실제 스칼라값의 계산은 모아서 하기.




https://marketplace.visualstudio.com/items?itemName=brunnerh.insert-unicode

3²⁰

Unicode Latex
O



<!--
조직 계정생성..
  https://github.com/account/organizations/new?plan=free&ref_cta=Create%2520a%2520free%2520organization&ref_loc=cards&ref_page=%2Forganizations%2Fplan
    Organization name
    :  Intel Edge AI SW Academy 5th Cohort AGV
    // Your URL will be: https://github.com/Intel-Edge-AI-SW-Academy-5th-Cohort, which has been adjusted to comply with our naming rules.
    Username is too long (maximum is 39 characters).


## 브랜치별 권한 관리

Intel Edge AI SW Academy 5th Cohort
  


# 택배 주소 인식 담당자 (조명근)
git checkout -b feature/address_recognizer
git push origin feature/address_recognizer

# 월 패드 담당자 (최정호)
git checkout -b feature/wall_pad
git push origin feature/wall_pad

# 배달 로봇 담당자 (박인혁)
git checkout -b feature/delivery_robot
git push origin feature/delivery_robot


# 엘리베이터 담당자 (정진우 & 정태현)
git checkout -b feature/elevator
git push origin feature/elevator

 -->


 의료기기니까 진짜 마지막 테크는 GE Healthcare인데
  여기는 영어 잘해야돼 최소 AL은 가지고 있어야할걸
GitHub CodeQL


➡️ MCU - APP 동작 프로토콜 설계

!!❓ kubuntu 특수문자 입력: Alt + Space -> kcharselect 입력 후 실행. 

❓ tartube options..
  --download-sections "*0-95"
    2번 download 해야 성공함..

⭕⚓ Unicode Latex .. oijaz.unicode-latex ; https://marketplace.visualstudio.com/items?itemName=oijaz.unicode-latex
  ∀: \forall
  ⋆: \star
  ⊛: \circledast
    Circled Asterisk
  ¬: \neg
    Negation
  ∩: \∩
    Cap


⚓ Contraposition | 대우(對偶) ; https://en.wikipedia.org/wiki/Contraposition
  ¬
⚓ Equivalence relation ; https://en.wikipedia.org/wiki/Equivalence_relation



지수적 대기.. ; https://en.wikipedia.org/wiki/Exponential_backoff
  🔍 6️⃣ 끊긴 연결 복구(Recovery) 전략
  ✅ 1. Session Stickiness(세션 고정)
    클라이언트는 항상 동일한 서버로 연결.
    방법: IP 해시 기반 라우팅 또는 로드밸런서의 세션 고정 기능(Sticky Sessions).
    단점: 특정 서버에 부하 집중 가능.
  ✅ 2. Connection Pooling(커넥션 풀링)
    클라이언트는 기존 연결을 최대한 재사용.
    HTTP/2 및 gRPC에서 기본 제공.
    클라이언트는 동일 서버에 여러 연결을 유지.
    Redis Cluster에서도 Pooled Connection 방식 사용.
  ✅ 3. Session Rehydration(세션 복원)
    클라이언트가 재연결 시 세션 ID를 포함하여 전송.
    서버는 Redis 등에서 세션 상태를 복원.
    로그인 재요청 없이 사용자가 바로 이어서 사용 가능.
    Slack, WhatsApp 같은 서비스가 **대규모 트래


Boost.Asio에서는 socket.set_option(boost::asio::socket_base::keep_alive(true)) 옵션 제공.


⭕ (1) Stateless Server(무상태 서버) + Redis 중앙 세션 관리
  **"Stateless"**란?
  서버 인스턴스에 세션 상태를 저장하지 않는 구조.
  모든 세션은 Redis 같은 중앙 세션 저장소에 저장.
  왜 필요하지?
  수평 확장(Scaling Out) 시 서버 간 세션 공유 문제 해결.
  서버가 다운되더라도 세션이 유지되어 다른 서버가 이어받을 수 있음.
  Redis 클러스터 사용
  단일 Redis는 병목이 될 수 있으니 Redis 클러스터(Redis Cluster) 구성.
  Consistent Hashing 사용으로 데이터를 균등하게 배분.
  🔹 Redis Cluster + Consistent Hashing 개념

Consistent Hashing은 데이터를 특정 서버에 고정하지 않고 해시 기반으로 분산 저장.
클라이언트가 다시 연결 시, 세션 데이터를 분산된 Redis 클러스터에서 가져옴.



🧠 서버에서 동일한 클라이언트임을 인식하는 전략
서버는 소켓 연결이 끊어지고 다시 연결된 클라이언트가 동일 클라이언트인지 스스로 알 수 없습니다.
TCP 소켓은 연결이 끊기면 클라이언트가 누구였는지에 대한 힌트 없이 새 연결로 인식합니다.

따라서 클라이언트 측에서 "내가 누구인지"를 식별할 정보를 전달해야 합니다.
이때 "동일한 클라이언트임"을 서버가 알아차리는 전략이 필요합니다.

🎯 1. 고유 Client ID(Token) 전달 (권장)


추천 접근 방식 (2025년 최신 트렌드)
  클라이언트 식별 ID(client_id) + JWT 인증을 동시에 사용
  Redis로 세션 중앙 관리 + 서버 무상태(stateless) 아키텍처
  TCP Keepalive와 Heartbeat 메시지로 비정상 연결 감지
  클라이언트는 재연결 시 → 이전 client_id 또는 JWT를 전달

TCP 소켓 자체는 JWT 사용을 강제하지 않음.
하지만 애플리케이션 계층에서 JWT를 인증 토큰으로 활용하는 것은 업계에서도 채택하고 있습니다.
대규모 메시징 시스템(예: WhatsApp, Discord)도 TCP 소켓 환경에서 고유 토큰을 세션 복구에 활용.

Redis 기반 "토큰 블랙리스트




TCP 소켓 서버에서는 JWT보다 protobuf를 통한 세션 관리가 훨씬 자연스러움.
JWT는 주로 WebSocket이나 HTTP 업그레이드 기반 통신에서 활용.
Protocol Buffers 메시지 구조에 client_id와 session_token을 포함하여 동일 클라이언트 식별 및 세션 복구 가능.


화이트리스트 기반 인증은 간단하지만,
네트워크 규모가 커질수록 성능과 보안 측면에서 약점을 드러낼 수 있습니다.

📰 TODO:
  🔍 💡 최종 권장 구성:
  Boost.Asio 기반 TCP 소켓 서버에서 mTLS를 필수로 적용하고 (Boost.Asio SSL 스트림으로 TCP 통신 보호),
  NodeType/ID 기반 화이트리스트 인증과 Heartbeat 관리로
  안전하고 효율적인 IoT 서버를 구축할 수 있습니다. 🛠️


  동일한 MCU ID는 동일한 HMAC 생성 → UUID 선점 공격 가능성 존재.
이를 방지하기 위해 서버는 Nonce(일회성 랜덤 값)를 함께 요구해야 안전성 확보 가능.






❓ 소켓 통신은 초기 연결 시 클라이언트 인증을 사후 검증하기 때문에 구조적으로 취약할 수밖에 없습니다.


✅ STM32F411RE는 TLS 지원 가능합니다.
  mbedTLS 또는 wolfSSL 같은 경량 TLS 라이브러리를 사용할 수 있습니다.

⚓ PKI ; https://en.wikipedia.org/wiki/Public_key_infrastructure


그러니까 요청

Active Time Battle (ATB)

⚓ Telegraf  ; https://www.influxdata.com/time-series-platform/telegraf/
  Opensource..
시계열 데이터베이스(Time Series Database) (TSDB) 활용: IoT 환경에서는 센서 데이터와 같은 시계열 데이터가 주를 이루므로, InfluxDB, Apache IoTDB, Google Bigtable과 같은 시계열 데이터베이스를 사용하여 대량의 데이터를 효율적으로 저장하고 쿼리합니다.


 C++에서 InfluxDB용 Query Builde
C++20 Query Object Pattern 
  ✔️ **"Query Object"**은 Martin Fowler의 Patterns of Enterprise Application Architecture에 소개된 mm
  ✔️ C++20 Query Object Pattern은 C++20의 Concepts, Templates, Fluent Interface 패턴을 기반으로 구현한 현대적인 Query Object 설계 방식입니다.
  ✔️ ORM 라이브러리 내부에서는 이미 유사한 설계 패턴이 널리 사용 중입니다.
💡 5. 실제로 TSDB에서는 ORM 대신 이런 방식을 사용하나?
  ✅ 예! 많은 TSDB는 전용 쿼리 언어(InfluxQL, PromQL, IoTDB SQL)를 사용하므로 ORM보다 Query Builder 패턴을 선호합니다.
  ✅ 예를 들어:

  InfluxDB는 **influxdb-client-cpp**와 같은 전용 클라이언트를 제공하며, 쿼리를 Query Object 방식으로 체이닝 지원합니다.
  TimescaleDB는 PostgreSQL 기반이므로 **PostgreSQL ORM(TinyORM, ODB)**과 함께 사용할 수 있습니다.
B. Query를 모듈화하고, 파일 기반으로 관리



!!! 🚀 4. DTO를 사용하는 이유 (왜 Entity만으로는 부족한가?)
  오. DTO 를 사용하는 경우, .execute(raw query) 에 대해서도 대처 가능한가? .field_name 으로 접근 가능하게
  오. DTO 를 사용하는 경우, .execute(raw query) 에 대해서도 대처 가능한가? .field_name 으로 접근 가능하게. emplace_back? 키 확인 안하고 이거를 차례대로 넣어주면 간단히 완성되려나?
  UserDTO dto;
    std::tie(dto.id, dto.name, dto.salary) = std::make_tuple(
        stoi(row[0]), 
        row[1] ? row[1] : "", 
        stod(row[2] ? row[2] : "0")
    );
    dtos.emplace_back(dto);

https://www.codesynthesis.com/products/odb/doc/manual.xhtml

https://www.codesynthesis.com/products/odb/download.xhtml

http://wiki.codesynthesis.com/Using_ODB_on_Android


기본적으로 Vcpkg는 글로벌(Global) 설치 방식이며, 전통적으로는 프로젝트별 버전 관리 기능이 부족했습니다. 하지만, **2021년 이후 'Vcpkg Manifest 모드'**가 도입되면서, 프로젝트별 버전 및 의존성 관리가 가능해졌습니다


======================
manefist 모드..
https://github.com/microsoft/vcpkg

vcpkg update
vcpkg search mariadb

❯ vcpkg install mariadb-connector-cpp:arm64-linux
❯ vcpkg install mariadb-connector-cpp:x64-linux

  Computing installation plan...
  The following packages will be built and installed:
    * libmariadb[core,openssl,ssl]:x64-linux@3.4.1
      mariadb-connector-cpp:x64-linux@1.1.5
    * openssl:x64-linux@3.4.1
    * vcpkg-cmake:x64-linux@2024-04-23
    * vcpkg-cmake-config:x64-linux@2024-05-23
    * vcpkg-cmake-get-vars:x64-linux@2024-09-22
    * zlib:x64-linux@1.3.1

-- Configuring x64-linux-dbg
-- Configuring x64-linux-rel
-- Building x64-linux-dbg
-- Building x64-linux-rel
Total install time: 1.1 min
mariadb-connector-cpp provides CMake targets:

  # this is heuristically generated, and may not be correct
  find_package(unofficial-mariadb-connector-cpp CONFIG REQUIRED)
  target_link_libraries(main PRIVATE unofficial::mariadb-connector-cpp::mariadbcpp)

Completed submission of libmariadb:x64-linux to 1 binary cache(s) in 673 ms

wbfw109v2 in 🌐 iot-04 in vcpkg/installed/x64-linux on  master via 🐍 v3.13.2 (python-study-py3.13) 
❯ fd -e a
  lib/libcrypto.a
  lib/libmariadb.a
  lib/libmariadbclient.a
  lib/libmariadbcpp-static.a
  lib/libmariadbcpp.a
  lib/libssl.a
  lib/libz.a

wbfw109v2 in 🌐 iot-04 in vcpkg/installed/x64-linux on  master via 🐍 v3.13.2 (python-study-py3.13) 
❯ fd -e so
  plugins/libmariadb/client_ed25519.so


cmake_minimum_required(VERSION 3.20)
  project(MyProject LANGUAGES CXX)

  # pkg-config로 Protobuf 찾기
  find_package(PkgConfig REQUIRED)
  pkg_check_modules(Protobuf REQUIRED IMPORTED protobuf)

  message(STATUS "Protobuf CFLAGS: ${Protobuf_CFLAGS}")
  message(STATUS "Protobuf LIBRARIES: ${Protobuf_LIBRARIES}")

  add_executable(myapp main.cpp)
  target_include_directories(myapp PRIVATE ${Protobuf_INCLUDE_DIRS})
  target_link_libraries(myapp PRIVATE ${Protobuf_LIBRARIES})

cmake_minimum_required(VERSION 3.20)
  project(MyProtobufProject LANGUAGES CXX)

  # Protobuf 경로 설정
  set(CMAKE_PREFIX_PATH "/opt/protobuf/release-static")

  # Protobuf 찾기
  find_package(Protobuf CONFIG REQUIRED)

  message(STATUS "Protobuf_INCLUDE_DIRS: ${Protobuf_INCLUDE_DIRS}")
  message(STATUS "Protobuf_LIBRARIES: ${Protobuf_LIBRARIES}")

  add_executable(myapp main.cpp)
  target_link_libraries(myapp PRIVATE protobuf::libprotobuf)

Starting submission of mariadb-connector-cpp:x64-linux to 1 binary cache(s) in the background
Elapsed time to handle mariadb-connector-cpp:x64-linux: 17 s
mariadb-connector-cpp:x64-linux package ABI: 7d2f4d0d21ab804a559d3d498c1a59965adfa35e73c97b77c0c1a2106c5d82d0
Total install time: 1.1 min
mariadb-connector-cpp provides CMake targets:

  # this is heuristically generated, and may not be correct
  find_package(unofficial-mariadb-connector-cpp CONFIG REQUIRED)
  target_link_libraries(main PRIVATE unofficial::mariadb-connector-cpp::mariadbcpp)



>>>>>>>>> dotenv

how can I load environment file (.env) when run cmake command? ; https://stackoverflow.com/questions/68824042/how-can-i-load-environment-file-env-when-run-cmake-command
How do I use CMake presets environment variables in the CMake build step? ; https://stackoverflow.com/questions/78026615/how-do-i-use-cmake-presets-environment-variables-in-the-cmake-build-step



##### 🌀 Title: Load environment file (.env) when run cmake command 📅 2025-02-19 04:22:08
# Reference
#   - https://stackoverflow.com/a/79128191
file(STRINGS ${CMAKE_HOME_DIRECTORY}/.env ENV_FILE)
foreach(VAR ${ENV_FILE})
    string(REGEX MATCH "^[^=]*" KEY ${VAR})
    string(REGEX REPLACE "^[^=]*=" "" VALUE ${VAR})
    set(ENV{${KEY}} ${VALUE})
endforeach()

# Debug
message(STATUS "EXAMPLE_ENV_VAR: $ENV{EXAMPLE_ENV_VAR}")
message(STATUS "VCPKG_ROOT: $ENV{VCPKG_ROOT}")

The following settings can be used temporarily when CMakePresets integration is enabled.
https://github.com/microsoft/vscode-cmake-tools/blob/HEAD/docs/cmake-presets.md

  ❗ CMakePresets.json should be the source of truth for all settings related to configure, build, and test, except for settings that can be used as temporary overrides (see below)
  The following settings in settings.json either duplicate options in CMakePresets.json or no longer apply. These settings will be ignored when CMakePresets.json integration is enabled.
    - cmake.environment         configurePresets.environment

🚨 🚨 🚨 🚨 🚨 🚨 🚨 🚨 🚨 🚨 🚨 🚨 🚨 🚨 🚨 🚨 🚨 🚨 🚨 🚨 🚨 🚨 🚨 🚨 🚨 
🚨 (Issue: Bug (Limitation)) ; https://github.com/microsoft/vscode-cmake-tools/issues/4253
  When configuring a project with a configuration preset, $env{<environment-variable>} is not picking up environment variables defined in extension setting cmake.environment.
    Same result when setting cmake.configureEnvironment
  ... Since when I run AN_ENV_VARIABLE=hello cmake --preset ninja directly from CLI, behavior is as expected (output of message is hello/preset).


    ...
  However the settings we provide like cmake.environment, etc, aren't from Presets, they are from the extension and for context, originate from when the extension only had Kits support a long time ago.

... vscode settings.json 에서 오버라이드하면 안된다. 왜냐하면 이건, 단일 파일에 대해서만 적용
  cmake.configureEnvironment

일단 그건 알고있어? Cmakelists.txt 에서 env 를 파싱해서 가지고 있어봣자, preset.json 이 먼저 해석되므로 별로 의미가 없어. 


🚀 💡 해결 방안: .env + CMakePresets.json 문제 해결하기
💡 방법 1: VSCode에서 cmake.configureArgs를 사용해 .env 로드 (추천)
📝 .vscode/settings.json

# Debug
message(STATUS "VCPKG_ROOT from .env: $ENV{VCPKG_ROOT}")
✅ 효과:
.vscode/settings.json에서 .env 경로를 전달.
CMakePresets.json은 $env{}로 .env 변수 참조 가능.
CMakeLists.txt는 ENV_FILE 값을 전달받아 .env를 로드.


⚠️ 결론: 왜 .vscode/settings.json으로 .env를 전달해야 하나?
CMakePresets.json은 CLI 또는 Preset 내부 environment만 참조
.vscode/settings.json의 cmake.configureEnvironment는 Preset 단계의 $env{}에 영향을 못 줌
cmake.configureArgs를 통해 .env 경로를 전달하는 것이 가장 깔끔함.



📌 🚨 왜 cmake.configureEnvironment는 안 됐나?
CMakePresets.json의 $env{}는 CMakePresets.json의 "environment" 필드나 CLI 환경변수만 참조.
VSCode 확장(cmake.environment/cmake.configureEnvironment)은 CMakePresets 내부 $env{}에는 영향을 주지 않음.
공식적인 해결책은 CMakeUserPresets.json이지만, 다중 상속 문제와 중복 문제로 비효율적.
  "configurePresets": [{
    "cacheVariables": {
      "CMAKE_TOOLCHAIN_FILE": "$env{VCPKG_ROOTa}/scripts/buildsystems/vcpkg.cmake"
    }
  }]

  
❯ ls $VCPKG_ROOT/installed/x64-linux/debug/lib
libcrypto.a  libfmtd.a  libmariadb.a@  libmariadbclient.a  libmariadbcpp.a@  libmariadbcpp-static.a  libssl.a  libz.a  pkgconfig/



https://devblogs.microsoft.com/cppblog/cmake-presets-integration-in-visual-studio-and-visual-studio-code/
  Project-specific information can always be checked in. CMake supports two files: CMakePresets.json and CMakeUserPresets.json. CMakePresets.json is intended to save project-wide presets, while CMakeUserPresets.json is intended for developers to save their own local presets. This ensures project-specific information can always be checked into source control and makes it easier for new team members to get up-and-running. It also makes it easier for teams to synchronize changes to their CMake builds across the entire team. Both CMakePresets.json and CMakeUserPresets.json are supported in Visual Studio and Visual Studio Code.

https://softeer.ai/index

C++ ORM 라이브러리 비교.
📍📍📍📍📍📍📍📍📍📍📍📍
  https://stackoverflow.com/questions/54539682/how-to-set-up-cmake-to-cross-compile-with-clang-for-arm-embedded-on-windows
CMAKE_TRY_COMPILE_TARGET_TYPE은 어디에 필요한 거야?
  try_compile()이 기본적으로 실행 파일(EXECUTABLE)을 만들려고 하는데, 어떤 환경에서는 실행 파일을 만들 수 없는 경우가 있음.

  예를 들면:

    크로스 컴파일러(임베디드 환경)에서는 실행 파일을 만들 수 없음.
    특정 플랫폼에서는 링커가 없어서 실행 파일을 생성하지 못할 수도 있음.
    이럴 때, CMAKE_TRY_COMPILE_TARGET_TYPE을 STATIC_LIBRARY로 설정하면 실행 파일을 만들지 않고, 단순히 "컴파일만 되는지" 확인할 수 있습니다.
      set(CMAKE_TRY_COMPILE_TARGET_TYPE STATIC_LIBRARY)
  이렇게 설정하면 try_compile()이 실행 파일을 만들지 않고, 정적 라이브러리를 생성하는 방식으로 컴파일 테스트를 수행합니다.


  https://stackoverflow.com/a/75784325
https://github.com/microsoft/vscode-cmake-tools/issues/1361


OPI(Oral Proficiency Interview): 약 154,000원
  전화 인터뷰 형식으로 진행되며, 응시료가 상대적으로 높습니다.
OPIc(Oral Proficiency Interview-computer): 약 84,000원
  컴퓨터 기반 시험으로, OPI에 비해 응시료가 저렴합니다.


qemu emulate: https://gist.github.com/cGandom/23764ad5517c8ec1d7cd904b923ad863
Emulating Raspberry Pi 4 with Qemu
  https://gist.github.com/cGandom/23764ad5517c8ec1d7cd904b923ad863
음? 근데 왜 가상화라고 부르는거야? 원래 같은 CPU 아키텍처면 실행되어야 하는거 아닌가? 
  좋은 질문이에요! 가상화(Virtualization)는 단순히 "같은 CPU 아키텍처에서 실행되니까 가상화"가 아니라, 운영체제(OS)와 하드웨어를 분리하여 여러 개의 OS를 동시에 실행할 수 있도록 하는 기술입니다.
  ✔ 가상화(Virtualization)는 단순한 실행이 아니라, OS 격리, 보안, 성능 최적화를 위한 기술이다!
  ✔ 같은 CPU 아키텍처라도, 여러 개의 OS를 동시에 실행하려면 "가상화"가 필요하다.
  ✔ 가상화는 CPU의 특권 명령어, 메모리, I/O를 하이퍼바이저가 관리하는 것이 핵심이다.



5-2. -fno-threadsafe-statics
  C++에서 정적 지역 변수(static local variable) 는 기본적으로 스레드 안전(thread-safe) 을 보장하기 위해 내부적인 락(lock)을 사용합니다.
  하지만 대부분의 경우 싱글 스레드 환경에서 불필요한 오버헤드를 초래할 수 있음.
  -fno-threadsafe-statics를 사용하면 C++의 정적 지역 변수를 스레드 안전하지 않게 최적화할 수 있음.
  🚀 멀티스레드 환경이 아니라면 성능 향상을 위해 사용하는 것이 좋음.


'배달'과 '배송'은 모두 물품을 전달하는 행위를 의미하지만, 그 사용 맥락에 따라 영어 표현이 달라집니다.

배달(配達):
  일반적인 의미: 'Delivery'로 번역되며, 물품이나 음식을 특정 장소로 가져다 주는 행위를 의미합니다.
  예시: "I ordered food delivery." (나는 음식을 배달 주문했다.)
  음식 배달: 'Order in' 또는 'Order takeout'이라는 표현을 사용하여 음식을 배달 주문하는 행위를 나타냅니다.
  예시: "Let's order in tonight." (오늘 밤에 배달 음식 시켜 먹자.)
배송(配送):
  일반적인 의미: 'Shipping' 또는 'Shipment'로 번역되며, 상품이나 물품을 한 장소에서 다른 장소로 운송하는 과정을 의미합니다.
  예시: "The shipment will arrive next week." (배송은 다음 주에 도착할 것입니다.)
  택배: 'Delivery'라는 표현을 사용하여 택배 서비스를 의미합니다.
  예시: "I'm expecting a delivery today." (오늘 택배를 받을 예정입니다.)
  따라서, '배달'은 주로 음식이나 소규모 물품의 직접 전달을 의미하며, '배송'은 상품이나 물품의 운송 과정을 의미합니다.

더 자세한 이해를 위해 아래 영상을 참고하실 수 있습니다.



리눅스 운영체제에서 디바이스 드라이버는 커널과 하드웨어 간의 인터페이스를 제공하여, 응용 프로그램이 하드웨어를 직접 제어하지 않고도 표준화된 방법으로 접근할 수 있도록 합니다. 이를 통해 시스템의 안정성과 보안성을 유지하면서 다양한 하드웨어 장치를 효율적으로 관리할 수 있습니다.
  커널과 사용자 공간 간의 통신은 주로 시스템 호출(System Call)을 통해 이루어집니다. 사용자 공간의 응용 프로그램이 커널의 기능을 필요로 할 때, 시스템 호출을 통해 커널 모드로 전환되어 요청을 처리합니다. 이러한 메커니즘을 통해 사용자 공간과 커널 공간 간의 명확한 경계를 유지하면서도 필요한 데이터와 명령을 안전하게 주고받을 수 있습니다.

또한, ioctl과 같은 인터페이스를 활용하여 사용자 공간에서 디바이스 드라이버에 특정 명령이나 데이터를 전달할 수 있습니다. 이는 표준 입출력 함수로 처리하기 어려운 다양한 제어 명령을 전달하는 데 사용되며, 디바이스 드라이버는 이러한 명령을 해석하여 하드웨어를 제어하거나 상태 정보를 반환합니다.

이러한 구조를 통해 리눅스 시스템은 사용자 공간과 커널 공간 간의 효율적이고 안전한 통신을 구현하며, 디바이스 드라이버는 하드웨어와 소프트웨어 간의 원활한 상호 작용을 지원합니다.



헉.. 이게 혹시 모션 제어가, 단순히 선풍기 모터 (속도 제어) 하는 거도 포함되나?
  네, 모션 제어는 모터나 액추에이터의 움직임을 정밀하게 제어하는 기술을 의미하며, 선풍기 모터의 속도 제어도 모션 제어의 한 형태로 볼 수 있습니다. 특히, 선풍기에서 BLDC(Brushless DC) 모터를 사용하면 발열이 적고 효율이 높아 정밀한 속도 제어가 가능합니다. 
  따라서, 선풍기 모터의 속도 제어는 모션 제어의 범주에 포함되며, 이를 통해 사용자는 원하는 바람 세기와 방향을 정확하게 조절할 수 있습니다.


  Telegraf

Independent software vendor



gcc-aarch64-linux-gnu g++-aarch64-linux-gnu


arm-linux-gnueabihf-gcc

-<env> 가 추가된거구나. ㅇㅇ

음 arm 64비트용과, 모든 


rustc --print target-list | rg "eabi|aarch64|linux|windows"
x86_64-pc-windows-msvc


sudo apt install mingw-w64

xwin
Install command:
brew install xwin
  📋
  Microsoft CRT and Windows SDK headers and libraries loader

https://github.com/Jake-Shadle/xwin


brew install xwin
  xwin은 Rust 기반으로 작성된 Windows 크로스컴파일 지원 도구이며, Homebrew (brew)에서도 설치 가능합니다.
## `xwin` package 📅 2025-02-21 19:49:33
.xwin-cache

xwin --accept-license download

// --help 설명: Allows downloading and repacking the MSVC CRT and Windows SDK for cross compilation
Options:
  --accept-license                       Doesn't display the prompt to accept the license [env: XWIN_ACCEPT_LICENSE=]
🧮 xwin --accept-license download
❯  xwin --accept-license download
  Manifest
  CRT.headers
  CRT.libs.x86_64.desktop
  CRT.libs.x86_64.store
  SDK.headers.all.none
  SDK.headers.all.none
  SDK.headers.all.store
  SDK.headers.all.store
  SDK.headers.x86_64.none
  SDK.libs.x86_64
  SDK.libs.store.all
  SDK.ucrt.all

CRT( C Runtime Library )는 Windows에서 C와 C++ 프로그램이 실행될 때 필수적인 런타임 라이브러리
리눅스에서 stdlib 인가? stdc 인가 glibc 필요한것처럼..

https://github.com/messense/xwin

✅ C 코드(clang)를 컴파일할 때는 -stdlib= 옵션을 사용할 필요가 없음.


%shell> apt-cache show gcc-arm-none-eabi | grep -E "Depends|Recommends"
  >>
    Depends: libc6 (>= 2.38), libgcc-s1 (>= 3.3.1), libgmp10 (>= 2:6.3.0+dfsg), libisl23 (>= 0.15), libmpc3 (>= 1.1.0), libmpfr6 (>= 3.1.3), libstdc++6 (>= 5), zlib1g (>= 1:1.1.4), binutils-arm-none-eabi
    Recommends: libnewlib-arm-none-eabi
%shell> arm-none-eabi-gcc -print-file-name=libc.a
  >> /usr/lib/gcc/arm-none-eabi/13.2.1/../../../arm-none-eabi/lib/libc.a


📰 그럼 Symbol Table은 언제 필요할까?
  💡 ldd가 직접 Symbol Table을 읽지는 않지만, 실행 중에는 동적 링커(Dynamic Linker, ld.so)가 심볼 테이블을 참조할 수도 있어.
  📌 Symbol Table이 필요한 경우
  1️⃣ 동적 링킹(dlsym(), dlopen())
    dlsym()은 동적 심볼 테이블(.dynsym)을 참조해서 필요한 심볼을 찾음.
    따라서 strip으로 심볼을 삭제하면 dlsym()이 실패할 수도 있음.
  2️⃣ PLT/GOT를 통한 심볼 해석
    PLT(Procedure Linkage Table)와 GOT(Global Offset Table)은 실행 중에 동적 라이브러리의 함수를 호출할 때 사용됨.
    실행할 때 처음 호출되는 함수는 PLT/GOT를 통해 실제 심볼 주소를 해석해서 호출됨.
    📌 즉, ldd는 Symbol Table을 직접 사용


Uniform Resource Identifier (URI), formerly Universal Resource Identifier ; https://en.wikipedia.org/wiki/Uniform_Resource_Identifier





📍📍📍📍📍📍📍📍 TRY_COMPILE_TARGET_TYPE 

Universal CRT; https://support.microsoft.com/en-us/topic/update-for-universal-c-runtime-in-windows-c0514201-7fe6-95a3-b0a5-287930f3560c
❓
Collation ;https://en.wikipedia.org/wiki/Collation
  In library, information and computer science, collation is the process of assembling written information into a standard order.



내가 지금 하는거도 RPC 인가? 음.. 흠..

🆚 infer vs deduce
  "infer"는 과정 (추론하는 행위)
  "deduce"는 결과 (유추해서 결론 내린 타입)

Active Record 패턴과 Query Builder를 제공해 ORM 활용이 쉬움.

TinyORM - Modern C++ ORM library
  MIT


커머스 백엔드 개발에서 ORM 활용?
  이커머스 백엔드 개발에서 ORM 사용 여부를 보면, 대부분 ORM을 적극적으로 활용하는 추세..
  🛍️ e.g. 2023년 현대오토에버 공고
  AUTOSAR .. no ORM

흠 그럼 내가 지금 현재 라즈베리파이 서버를 중심으로 사용자 (qt GUI), 배달로봇, 택배보관함 (OCR python), 엘레베이터의 4개의 클라이언트 노드가 통신하는 시스템을 개발중이거든? 메시지는 protobuf, nanopb 로 표준화하기는 했지만, DB 를 ORM 을 넣을지 안넣을지를 모르겟네.
이러한 iot 서버에서는 추세가 어떤 편이야? 하드웨어적인 실시간 처리를 보장하는것까지는 필요가 없어서  ORM 을 쓰는 편이야?

https://en.wikipedia.org/wiki/Reflective_programming
  Reflection(리플렉션) 이란, 프로그램이 실행 중에(런타임) 객체의 타입, 메서드, 필드 등을 동적으로 분석하고 조작하는 기능

🚀 서버에서 ORM을 고려할 핵심 요소
서버에서 ORM을 사용할지 말지는 **"서버가 어떤 역할을 하는지"**에 따라 결정해야 함.
지금 네 IoT 서버는 중앙 데이터 저장소 + API 제공 역할을 하므로, ORM을 충분히 사용할 수 있음.

📌 ORM이 적절한 경우 (서버 내 데이터 관리 용도)

  사용자 계정 관리
  배달 로봇의 상태 로그 저장
  택배 보관함의 패키지 등록/삭제 기록
  엘리베이터 호출 기록 저장
  장비 설정값 저장 및 변경 관리
📌 ORM이 필요 없는 경우 (클라이언트의 실시간 제어)

  배달 로봇의 실시간 네트워크 통신 및 제어 (이건 클라이언트가 알아서)
  엘리베이터의 버튼 입력 감지 및 모터 동작
  택배 보관함의 도어락 개폐
  💡 즉, 서버에서 "데이터베이스 관리 + API 제공" 역할을 한다면 ORM을 사용해도 무방함!

🚀 최종 결론: 네 IoT 서버에서는 ORM을 사용하는 것이 합리적
  서버는 클라이언트(로봇, 보관함 등)의 데이터를 저장하고 관리하는 역할을 하므로 ORM을 사용할 수 있음.
  ORM을 사용하면 유지보수성이 향상되고, 코드의 가독성이 높아져 개발 속도가 빨라짐.
  하지만 성능 최적화를 위해 N+1 문제, 캐싱, Batch Insert 등을 고려해야 함.
  클라이언트 노드에서 실시간 제어를 수행하는 부분과 서버의 ORM 사용은 무관하므로 걱정할 필요 없음.
  결론: 네 IoT 서버는 ORM을 사용하되, 성능이 중요한 부분에서는 원시 SQL과 혼용하는 것이 최적! 🚀
  즉, 서버에서 ORM을 사용하는 것은 충분히 현실적인 선택이며, 실시간 제어 성능과도 무관하므로 걱정할 필요 없음. 😃

장기 보관이 필요한 데이터는 DB가 아니라 NoSQL, TSDB, 분산 로그 시스템을 활용.

✅ 대부분의 데이터가 메시지 큐(Kafka, RabbitMQ, Redis Streams)에서 실시간으로 처리됨.
✅ 장기 보관이 필요한 데이터는 TSDB(InfluxDB, Prometheus)나 분산 로그 시스템(Elasticsearch)으로 저장하는 것이 더 적합함.

ok. 다시 아까 그 주제로 돌아와서, 그럼 애초에 센서데이터에 대한 로그는 ORM 을 통해서 보내는게 아니니까 (당연한 말), 전장 SW 에서도 ORM 을 함께 사용하나?


https://www.reddit.com/r/AskProgramming/comments/1gaw39x/why_would_you_ever_use_an_orm/
https://news.hada.io/topic?id=9523&utm_source=chatgpt.com

vcpkg 모드는 클래식 모드에서만 작동한다.

❯ vcpkg install --dry-run

Fetching registry information from https://github.com/microsoft/vcpkg (HEAD)...
Detecting compiler hash for triplet x64-linux...
Compiler found: /usr/bin/c++
The following packages will be built and installed:
  * abseil:x64-linux@20250127.0 -- /home/wbfw109v2/.cache/vcpkg/registries/git-trees/274bd7ad7d033b67d78f202b33b280904763c5c7
  * fmt:x64-linux@11.0.2#1 -- /home/wbfw109v2/.cache/vcpkg/registries/git-trees/07a73a7565e5de9eb42e90c16c133bdfdfebbcda
    nanopb:x64-linux@0.4.9 -- /home/wbfw109v2/.cache/vcpkg/registries/git-trees/1f5737c00d41a894367cab2acb6ef934043fcd8e
    protobuf:x64-linux@5.29.3 -- /home/wbfw109v2/.cache/vcpkg/registries/git-trees/53c97b927087d1919f2a7ef6c34e4caf1a00cdf9
    spdlog:x64-linux@1.15.1 -- /home/wbfw109v2/.cache/vcpkg/registries/git-trees/7eecd9f58a522cf0ed8f081356617dbd7b4947de
  * utf8-range:x64-linux@5.29.3 -- /home/wbfw109v2/.cache/vcpkg/registries/git-trees/67a0b0ded179b27dc30195bab68549fab519e1e2
  * vcpkg-cmake:x64-linux@2024-04-23 -- /home/wbfw109v2/.cache/vcpkg/registries/git-trees/e74aa1e8f93278a8e71372f1fa08c3df420eb840
  * vcpkg-cmake-config:x64-linux@2024-05-23 -- /home/wbfw109v2/.cache/vcpkg/registries/git-trees/97a63e4bc1a17422ffe4eff71da53b4b561a7841
Additional packages (*) will be modified to complete this operation.


vcpkg install 
boost-redis ; https://www.boost.org/doc/libs/develop/libs/redis/doc/html/index.html
  비동기 기반이면 redis-plus-plus 보다 boost-redis 가 더 낫다는듯. 
  https://www.boost.org/libs/redis
asio 가 두 개가 있네.
🚀 비동기 서버, 멀티스레드 환경


https://think-async.com/Asio/
  https://think-async.com/Asio/Documentation.html
  ⚓ Asio and Boost.Asio ; https://think-async.com/Asio/AsioAndBoostAsio.html
    Asio comes in two variants: (non-Boost) Asio and Boost.Asio. More…​

boost-redis ; https://www.boost.org/doc/libs/1_87_0/libs/redis/doc/html/index.html


brew install redis

📰 실제로 라즈베리파이 구매해서 테스트 필요...
  - 왜냐하면 mariadb, redis 가 호스트에서는 homebrew 를 통해 설치햇엇기 떄문..
  in raspberry pi 
    sudo apt install mariadb-server


%shell> 
brew install redis
brew services start redis

❯ redis-cli INFO | grep -i tcp
  tcp_port:6379
  listener0:name=tcp,bind=127.0.0.1,bind=::1,port=6379


🆚 Deduction > Inference ; https://philosophy.stackexchange.com/questions/57567/what-is-the-difference-between-inference-and-deduction
  Deduction ⊂ Inference





  - PNG와 JPG의 차이점은? ➡️ JPG 는 손실 압축 방식을 사용하고 파일크기가 PNG에 비해 작습니다. PNG 는 무손실 압축 방식을 사용하고 투명도를 지원합니다.
  - Dynamic Programming이란? ➡️ 복잡한 문제를 더 간단한 작은 문제들로 분해하여 단순화하는 것을 의미합니다.
    --> Divide-and-conquer algorithm 랑 비슷한 개념..  다르긴 함
      https://www.google.com/search?q=Divide-and-conquer+same+dynamic+programming%3F&oq=Divide-and-conquer+same+dynamic+programming%3F&aqs=edge..69i57j0i22i30l2j0i15i22i30j0i22i30l3j0i390.3782j0j1&sourceid=chrome&ie=UTF-8
  - Virtual Memory란? ➡️ 기기 내 이용가능한 리소스의 추상화를 제공하는 메모리 관리 기술입니다. 가상 주소 공간은 메모리 관리 장치(MMU)에 의해서 물리 주소로 변환됩니다. 
  - Semaphore란? ➡️ 동시성을 가진 시스템에서 임계 구역의 문제를 피하기 위해, 공용 자원의 접근을 제어하는 데 사용되는 변수나 추상 데이터 타입입니다.
  - Cache란? ➡️ 미래에 데이터의 요청을 빠르게 제공할 수 있도록 데이터를 저장하는 하드웨어나 소프트웨어 구성요소입니다.
  - Garbage Collection이란?  ➡️ 프로그램이 할당했지만 더 이상 참조하지 않는 메모리를 회수하는 자동 메모리 관리 형태입니다.
  - Database Index 추가의 장단점은?
    https://mangkyu.tistory.com/96
  - NoSQL의 장단점은?
  - 공유기의 원리는? ISP 업체로부터 할당된 IP 주소(공인 주소)를 공유기에 설정하고 그 공유기에 각 컴퓨터를 연결하면, 컴퓨터에 각각의 IP 주소(가상 주소)가 자동 할당되어 각 컴퓨터가 공유기를 거쳐 동시에 인터넷에 접속되는 것이다.
  - 비대칭 암호화란?
  - Node.js의 특징은? -> 잘 모르겠음.
  - HDD, SSD, DRAM 각각의 성능은? ➡️ NAND 플래시 메모리가 적용된 SSD 는 순수 전자식으로 작동하므로 기계식인 HDD 보다 빠르고, DRAM 보다는 느립니다.
  - Memory Leak 디버깅은? ➡️ 동적 메모리의 할당과 할당 해제와 관련된 버그로 나타나는 메모리 유출을 발견하고 해결하기 위한 프로세스입니다.
  - GIT의 장점은? ➡️ 버전 관리를 할 수 있어 협업에 유리하고, 백업과 이슈 트래킹을 쉽게 할 수 있습니다.
  - Base64 인코딩이란?
    binary-to-text 인코딩 방식으로 주로 웹에서 이미지 파일을 포함시킬 때 사용합니다.
  - 사용자 패스워드를 전송/보관하는 방법은?
    솔트라는 암호화 방식을 사용하여 동일한 비밀번호라도 키값에 따라 해시값이 달라져 안전한 것만 숙지하고 있습니다.
  - system call이란?
    운영체제에서 커널을 통해 작업을 수행하도록 지시하는 호출방법으로, 파일 입출력, 프로세스 관리 등에 사용됩니다.
  - .so와 .a 파일의 차이는?      
    둘 모두 Unix-like 운영체제에서 사용되며
    .so 는 shared object 의 약자로 윈도우에서 DLL 과 비슷한 동적 라이브러리에 사용되는 파일을,
    .a 는 archive 의 약자로 정적 라이브러리에 사용되는 파일입니다.
  - MySQL과 MongoDB의 차이점은?
    MySQL 은 Relational-DBMS 중 하나로 데이터 무결성과 키 값에 의한 접근이 중요한 프로젝트에서 사용되고,
    MongoDB 는 Non-Relational DBMS 중 하나인 NoSQL 의 문서 지향 DB로, 비정형화된 데이터를 저장하여 컨텐츠 관리나 빅데이터/머신러닝이 필요한 프로젝트에서 사용됩니다.
  - HTTP/2의 특징은?
    TLS 프로토콜을 사용하여 HTTPS 를 지원하고, 파일 전송시 다중 스트림과 우선순위를 지정 가능합니다.
    현재 HTTP/3 까지 발표됐고, 주요 특징은 UDP 대신, 구글이 만들고 현재 검색엔진에 사용되고 있는 QUIC 프로토콜을 사용하는 것으로 알고 있습니다.
  - Firewall의 동작 원리는?
    OSI 2계층 데이터 계층에서 3계층 네트워크 계층으로 전달되는 패킷을 가로채서 패킷에 지정된 IP 와 포트를 비교하여 필터링하는 방식으로 동작합니다.
  - Docker와 Virtual Machine의 차이점은?
    VM 은 하이퍼바이저 위 Guest OS 위에서 프로그램이 작동하고, Docker 는 도커 엔진 위에서 프로그램이 작동하여 Docker 가 더 가볍습니다.
    도커는 컨테이너라는 프로그램 실행에 필요한 코드를 패키징한 유닛을 사용하여 플랫폼 독립적으로 사용이 가능합니다.
    단, 윈도우 컨테이너는 윈도우에서만 사용이 가능합니다.
  - AMD와 Intel CPU의 차이점은?   -> 잘 모르겠습니다. https://tgd.kr/s/handongsuk/22217464
  - CRDT란?       -> 잘 모르겠습니다. 피그마에서 사용하는 알고리즘.
  - CORS란?
    웹 상의 리소스를 출처가 다른 도메인으로부터 호출을 허용하게 하는 것입니다.
    종종 프론트엔드/벡앤드가 분리된 환경에서 동일한 출처로부터 리소스를 사용하는 경우에 사용됩니다.
  - 동시 사용자 1만명을 지원하는 채팅 서버를 어떻게 만들겠는가?
    MQTT 프로토콜를 사용하여 클라이언트/구독 형태로 메시지 브로커를 만들어 구현할 것입니다.
  - 최근 사회적 이슈가 된 보안 관련 사고 몇가지의 원인과 대책은?
    log4j 사태: JNDI, LDAP 가 원인. 대책은 log4j 에서 JNDI 파싱을 하지 못하게 막는 것으로,
    간단한 대처방안인 log4j 를 최신 버전으로 업데이트하거나 최신버전의 Logback 으로 교체하는 대책만 숙지하고 있습니다.
  - 대용량 로그 시스템을 구축한다면 어떻게 하겠는가?
    이벤트 처리 플랫폼인 Kafka 를 선택하여 NoSQL 과 같은 비관계형 DB 에 저장되도록 하고,
    서비스는 도커를 사용하여 컨테이너 형태로 배포하고, 대용량의 데이터의 전달을 로드밸런싱하기 위해 쿠버네티스를 사용할 것입니다.

  - Sigmoid의 단점은? ➡️
  - Validation 세트, Test 세트의 각각의 역할은? ➡️
  - Auto Encoder란?
  - Dropout의 효과는? ➡️
  - CNN의 장점은? ➡️
  - Word2Vec의 원리는?
  - Adam Optimizer의 동작은? ➡️
  - Batch Normalization의 동작은? ➡️
  - CycleGAN이란?
  - Loss Surface란? ➡️
  - Attention이란?
  - Transformer란?
  - Collaborative filtering이란?
  - Few-Shot Learning이란?
  - Federated Learning이란?
  - SVD란? ➡️
  - 중심극한정리란?
  정규화... https://en.wikipedia.org/wiki/Normalization_(statistics)

  **0. 보통의 경우에는 항상 다음 질문으로 시작합니다.**
    c. 마지막으로 어떤 개발 환경이나 도구를 좋아하시나요?
      ➡️ 개발 환경은 집에서 익숙하게 사용하는 WSL2를 좋아하고, 그 안에서 VS code 를 사용하여 작업하는 것을 좋아합니다.
      작업하는데 필요한 확장 프로그램을 선택해서 설치하고 원하지 않으면 삭제할 수 있어서 가볍기 때문입니다.        
      그 외 브라우저는 엣지를 선호하는데, 그룹으로 나눌 수 있고 Sleeping Tab 기능으로 사용하지 않는 탭은 비활성화되어 메모리 관리에 도움이 되기 때문입니다.

    OSI 7 layers
    https://en.wikipedia.org/wiki/Data_science
    CS? DS?
    Algorithm?
    운영체제 Windows  vs.  Unix-like ?
    Non-RDB vs. RDB
    Network? TCP vs. UDP? OSI 7 layers?
    100GB 파일을 Server to Server로 복사하면 얼마나 걸릴까.
    NAS 전송 파일 단위 전송        
    신경망 학습시킬 때 가중치 초기값이 0 이면 어떻게 할 것인가.. 
    • React란?
    • Web Browser 의 프로세싱 중 Reflow란?
    • 함수형 프로그래밍 패러다임이란?
    • Callback hell이란?
    • async I/O란?
    • 프로세스 간 통신(IPC)이란?
    • C++ 에서 다형성이란?
    • 그래픽카드를 이용한 하드웨어 가속이란?
    UTF-8이란?
    AES 암호화 통신? overlay network?
  #️⃣ BDD, cucumber, tex 수학 표기법..




🧪 Test..
  #include <boost/asio.hpp>
  #include <boost/redis.hpp>
  #include <mariadb/conncpp.hpp>
  #include <iostream>
  #include <memory>
  #include <thread>
  #include <unordered_map>
  #include <string>

  namespace net = boost::asio;
  using boost::redis::connection;
  using boost::redis::request;
  using boost::redis::response;
  using boost::asio::ip::tcp;

  // ✅ 각 스레드별 MariaDB 및 Redis Connection을 관리 (thread_local)
  thread_local std::unique_ptr<sql::Connection> thread_db_conn;
  thread_local std::unique_ptr<connection> thread_redis_conn;

  // ✅ MariaDB Connection을 가져오는 함수
  sql::Connection* get_db_connection() {
      if (!thread_db_conn) {
          sql::Driver* driver = sql::mariadb::get_driver_instance();
          sql::Properties properties({{"user", "my_user"}, {"password", "my_password"}});
          thread_db_conn = std::unique_ptr<sql::Connection>(driver->connect("jdbc:mariadb://localhost:3306/my_database", properties));
      }
      return thread_db_conn.get();
  }

  // ✅ Redis Connection을 가져오는 함수
  connection* get_redis_connection(net::io_context& io) {
      if (!thread_redis_conn) {
          thread_redis_conn = std::make_unique<connection>(io);
          thread_redis_conn->async_run({}, net::detached);
      }
      return thread_redis_conn.get();
  }

  // 🎱 Session class: Handles client requests (with Redis + MariaDB)
  class Session : public std::enable_shared_from_this<Session> {
  public:
      explicit Session(tcp::socket socket, net::io_context& io)
          : socket_(std::move(socket)), io_context_(io) {}

      void start() { doRead(); }

  private:
      tcp::socket socket_;
      net::io_context& io_context_;
      char buffer_[1024];

      // 📌 (1) 비동기적으로 MariaDB에서 데이터를 가져오고 Redis에 캐싱
      boost::asio::awaitable<std::string> async_fetch_data_from_db(int id) {
          auto db_conn = get_db_connection();
          std::unique_ptr<sql::PreparedStatement> stmt(db_conn->prepareStatement("SELECT name FROM users WHERE id = ?"));
          stmt->setInt(1, id);

          std::unique_ptr<sql::ResultSet> res(stmt->executeQuery());
          if (res->next()) {
              std::string name = res->getString("name");

              // 🔹 (1-1) 가져온 데이터를 Redis에 캐싱
              auto redis_conn = get_redis_connection(io_context_);
              request req;
              req.push("SET", "user:" + std::to_string(id), name, "EX", "60"); // 60초 TTL

              response<boost::redis::ignore_t> resp;
              co_await redis_conn->async_exec(req, resp, net::use_awaitable);

              co_return name;
          }
          co_return "NOT FOUND";
      }

      // 📌 (2) Redis에서 캐싱된 데이터 조회
      boost::asio::awaitable<std::string> async_get_data(int id) {
          auto redis_conn = get_redis_connection(io_context_);

          // 🔹 (2-1) Redis 조회
          request req;
          req.push("GET", "user:" + std::to_string(id));

          response<std::optional<std::string>> resp;
          co_await redis_conn->async_exec(req, resp, net::use_awaitable);

          if (resp.value()) {
              co_return *resp.value();
          } else {
              // 🔹 (2-2) Redis에 없으면 DB에서 가져오기
              co_return co_await async_fetch_data_from_db(id);
          }
      }

      // 📌 (3) 클라이언트 요청 처리 (Redis -> DB 순서로 조회)
      void doRead() {
          auto self(shared_from_this());
          socket_.async_read_some(
              boost::asio::buffer(buffer_),
              [this, self](boost::system::error_code ec, std::size_t length) {
                  if (!ec) {
                      std::string request(buffer_, length);
                      int user_id = std::stoi(request); // 요청에서 사용자 ID 파싱

                      // 🔹 (3-1) 비동기적으로 DB/Redis 조회 수행
                      boost::asio::co_spawn(io_context_, async_get_data(user_id), 
                          [this, self](std::string data) {
                              doWrite(data);
                          });
                  }
              });
      }

      // 📌 (4) 클라이언트 응답 전송
      void doWrite(const std::string& response) {
          auto self(shared_from_this());
          boost::asio::async_write(
              socket_, boost::asio::buffer(response),
              [this, self](boost::system::error_code ec, std::size_t) {
                  if (!ec) {
                      doRead();
                  }
              });
      }
  };

  // 🎱 Server class: Accepts client connections and creates a new Session
  class Server {
  public:
      Server(net::io_context& io_context, short port)
          : acceptor_(io_context, tcp::endpoint(tcp::v4(), port)) {
          doAccept();
      }

  private:
      tcp::acceptor acceptor_;

      void doAccept() {
          acceptor_.async_accept(
              [this](boost::system::error_code ec, tcp::socket socket) {
                  if (!ec) {
                      std::make_shared<Session>(std::move(socket), acceptor_.get_executor().context())->start();
                  }
                  doAccept();
              });
      }
  };

  // 🎱 Start IoT Server (멀티스레드 지원)
  void start_iot_server() {
      try {
          net::io_context io_context;
          Server server(io_context, 1234);

          unsigned int thread_count = std::thread::hardware_concurrency();
          thread_count = (thread_count > 1) ? (thread_count / 2) : 1;

          std::vector<std::thread> threads;
          for (unsigned int i = 0; i < thread_count; ++i) {
              threads.emplace_back([&io_context]() {
                  io_context.run();
              });
          }

          for (auto& t : threads) {
              t.join();
          }
      } catch (std::exception& e) {
          std::cerr << "Exception: " << e.what() << "\n";
      }
  }


동기화 (synchronization) 란 여러 개의 쓰레드(thread) 또는 프로세스(process)가 동시에 실행될 때, 올바른 실행 순서를 유지하고 예상치 못한 경쟁 조건(race condition)이 발생하지 않도록 조정하는 과정이다.

✅ 멀티스레딩 안에서 각 스레드에서 코루틴 기법을 사용할 수 있는가?
  ✔ 네, 가능합니다!
  멀티스레딩 환경에서도 각 스레드에서 독립적으로 C++ 코루틴을 실행할 수 있습니다.
  각 스레드는 독립적으로 실행되며, 각 스레드 내에서 co_await를 사용하여 비동기 실행이 가능합니다.


1. Imperative (명령형) 프로그래밍
  명령형 프로그래밍은 "어떻게 (How)" 수행할 것인지에 초점을 맞춥니다. 즉, 프로그램이 수행해야 할 일련의 명령(절차, 과정) 을 순서대로 기술하는 방식입니다.

2. Declarative (선언형) 프로그래밍
  선언형 프로그래밍은 "무엇을 (What)" 수행할 것인지에 초점을 맞춥니다. 즉, 프로그램이 해야 할 결과를 정의하는 방식 이며, "어떻게" 수행할지는 내부 구현에 맡깁니다.

https://namu.wiki/w/%EB%A1%A0%20%ED%8A%B8%EB%A0%88%EC%9D%BC
명일방주 lonetrail kristen
명일방주 UnderTides Quintus


프로세스 컨텍스트 스위칭은 실행 컨텍스트(레지스터, 스택)뿐만 아니라 메모리 주소 공간(Page Table), TLB 캐시까지 변경해야 하므로 오버헤드가 크고, TLB 플러싱으로 캐싱 효율이 급감한다.
반면, 스레드는 같은 주소 공간을 공유하므로 실행 컨텍스트(레지스터, 스택)만 교체하면 되어, 메모리 재할당이나 TLB 플러싱이 없어 훨씬 빠르다
  - 레지스터는 현재 실행 중인 연산 상태(PC, SP, 연산 결과 등)를 저장해야 해서 포함됨.
  - 스택은 함수 호출 정보(지역 변수, 리턴 주소)를 저장하며, 컨텍스트 스위칭 후 다시 돌아왔을 때 실행을 이어가기 위해 반드시 포함되어야 함.
  https://en.wikipedia.org/wiki/Translation_lookaside_buffer



stack 이 거꾸로 성장한다? x64 에서는 그렇다는데.
  Memory - Stack Organization                    | Grows from high to low addresses  
이게 무슨 의미? 왜?


❓ Reason why CFS scheduler using red black tree?
  https://stackoverflow.com/questions/33191110/reason-why-cfs-scheduler-using-red-black-tree



❓ 면접 준비 red-black tree
  리눅스 커널 run queue 에서 사용하는 구조..



# Stackful vs. Stackless Coroutine

| Feature                            | Stackful Coroutine                                       | Stackless Coroutine                                                                   |
| ---------------------------------- | -------------------------------------------------------- | ------------------------------------------------------------------------------------- |
| Stack Usage                        | Allocates a separate stack for all operations            | Uses the regular thread stack, with separate memory allocation for asynchronous calls |
| Memory Allocation                  | Pre-allocates the entire stack (potential memory waste)  | Allocates only as needed (Heap Allocation Elision possible)                           |
| Suspendability in Nested Functions | ✅ Yes (Can suspend even inside regular functions)        | ❌ No (Only coroutine-marked functions can suspend)                                    |
| Context Switching                  | Saves and restores stack and instruction pointer (IP)    | Saves and restores coroutine frame separately                                         |
| CPU Cache Efficiency               | ✅ High (Contiguous memory access)                        | ❌ Lower (Heap fragmentation possible)                                                 |
| Performance Overhead               | Higher context switching cost (stack saving & restoring) | Heap allocation overhead (can be optimized)                                           |
| Execution Flow Preservation        | ✅ Maintains regular function call stack                  | ❌ Does not preserve the call stack, execution flow is split                           |
| Use Cases                          | Game engines, network servers, OS internals              | Asynchronous I/O, event loops                                                         |

### Key Difference in State Storage
- Stackful Coroutine: Stores execution state in a separate stack (stores function call information, local variables, and return addresses).
- Stackless Coroutine: Stores execution state in a coroutine frame (stores only necessary local variables and state information, not the entire call stack).
  Refernece
    https://news.ycombinator.com/item?id=37104591
    https://stackoverflow.com/questions/57163510/are-stackless-c20-coroutines-a-problem

📰 iot_server.cpp
  현재 콜백 기반 코드가 이미 충분히 효율적임.
    추가적인 CPU 바운드 연산이 없기 때문에 코루틴을 통해 얻는 성능 향상이 미미할 수 있음.


📰❓ why stack grows downwards

  (높은 주소) ───────────────────
              | Heap           |
              | (위로 성장)     |
              ────────────────
              | Stack          |
              | (아래로 성장)   |
  (낮은 주소) ───────────────────

  https://en.wikipedia.org/wiki/Stack-based_memory_allocation
  https://stackoverflow.com/a/54391533
  https://eli.thegreenplace.net/2011/02/04/where-the-top-of-the-stack-is-on-x86/
  스택이 하향 성장(높은 주소 → 낮은 주소) 하면, 최근에 push한 값이 더 낮은 주소에 저장됩니다.
    즉, ESP + offset의 **offset이 "양수(positive)"**이므로 양수 인덱싱을 사용할 수 있음.
  스택에서 값을 제거할 때는 "음수 인덱싱"을 직접 참조하지 않고, 대신 pop 명령을 사용하여 값을 자동으로 가져온 후 스택 포인터를 증가시키는 방식으로 처리됩니다.

  힙(Heap)은 스택과 다르게 "스택 포인터" 같은 레지스터를 기준으로 동작하지 않기 때문에, 양의 오프셋이나 인덱싱 방식이 큰 의미가 없습니다.


📰 해야 할 것..
  redis, mariadb 연결 테스트.


(1) "대기" 와 "Blocking"의 차이
  co_await 을 사용하면 현재 코루틴은 "대기(suspend)"하지만, 다른 코루틴이나 이벤트 루프는 계속 실행됩니다.
  Blocking이란?
프로그램 전체가 CPU에서 다른 작업을 수행하지 못하고 대기하는 것.
  예: std::this_thread::sleep_for() → CPU가 다른 작업을 못함.
  Non-blocking이란?
현재 코루틴은 중단되지만, 이벤트 루프는 계속 동작하고 다른 작업을 수행할 수 있음.
  


async_run() 자체가 비동기 함수이므로, 호출한 순간 즉시 반환되며, 코루틴이 이 함수를 기다리지 않고 계속 진행합니다.
3) consign(detached, redis_connection) 은 객체가 유지되도록 보장
  boost::asio::consign(handler, object) 는 특정 객체(redis_connection)를 핸들러와 함께 유지하도록 보장합니다.
  즉, 이 핸들러(비동기 작업)가 끝날 때까지 redis_connection이 소멸되지 않도록 함.
  detached를 사용하여, 이 핸들러의 완료 처리를 별도로 하지 않고, 백그라운드에서 실행되도록 설정.

  boost::asio::consign(boost::asio::detached, redis_connection)


# ROS 2 
  HID


⚓ Write once, run anywhere (WORA) ; https://en.wikipedia.org/wiki/Write_once,_run_anywhere


--> C++ 특징 4가지?
  추상화, 캡슐화, 다형성, 상속, C의 특징을 내려받앗다는 점?
--> 업계 이슈 아느냐
  온디바이스 
    기존의 임베디드는 c++ 를 사용해서 디바이스 제어와, 와이파이 통신?을 거쳣는데
    ❓   >> 클라우드 도 최근 추세인 것으로 알고 있음. 그러니까 회사에서 중앙 "서버"가 개별적으로 존재해서 운영했던 추세에서 바뀐 거 아닌가?
    ❓ 온디바이스의 정의는 "서버나 클라우드에 연결할 필요 없이 모바일 기기 자체적으로 정보를 처리할 수 있다는 것을 의미합니다" 임. 
Windows를 HMI(Human-Machine Interface)로 사용하는 이유
  대부분의 산업용 HMI(Human-Machine Interface) 시스템은 Windows 기반
  많은 기존 산업용 소프트웨어(HMI, 진단툴, SCADA 시스템 등)가 Windows 기반


TCN (철도차량)
  철도차량 내 제어 장치 간 통신 표준화
  대표적인 네트워크: MVB(차량 내부), WTB(차량 간)
AUTOSAR (자동차)
  자동차 내 ECU 간 통신 표준화
  대표적인 네트워크: CAN, LIN, FlexRay, Ethernet
  데이터 전송 방식: 이벤트 기반 & 주기적 데이터 전송	주기적 데이터 전송 (필드버스 기반)
주소 할당 방식	일부 정적/일부 동적	MVB(정적), WTB(동적)
확장성	ECU 추가 가능하지만 차량 구조 변경이 필요	차량 추가 가능 (WTB 사용)
표준화 기관	AUTOSAR 컨소시엄	IEC 61375 (국제 표준)


| Feature                 | AUTOSAR (Automotive)                                | TCN (Train Communication Network)                      |
| ----------------------- | --------------------------------------------------- | ------------------------------------------------------ |
| Purpose                 | Standardized communication between ECUs             | Standardized communication between train control units |
| Representative Networks | CAN, LIN, FlexRay, Ethernet                         | MVB, WTB, Ethernet                                     |
| Data Transmission       | Event-based & periodic                              | Periodic (fieldbus-based)                              |
| Address Allocation      | Partially static/dynamic                            | MVB (static), WTB (dynamic)                            |
| Scalability             | ECUs can be added, but may require vehicle redesign | Train cars can be added (WTB)                          |
| Standardization Body    | AUTOSAR Consortium                                  | IEC 61375                                              |
| Functional Safety       | ISO 26262                                           | IEC 61375 + EN 50128                                   |

  - AUTOSAR: Low-speed LIN (sensors) ↔ High-speed CAN/FlexRay (ECUs) ↔ Ethernet (high-speed data)
  - TCN: MVB (intra-vehicle devices) ↔ WTB (inter-vehicle communication) ↔ Ethernet (high-speed data)





⚓ AUTOSAR (AUTomotive Open System ARchitecture) ; https://en.wikipedia.org/wiki/AUTOSAR
  AUTOSAR is a global development partnership founded in 2003 by ...
  Its purpose is to develop and establish an open and standardized software architecture for automotive electronic control units (ECUs).

⚓ Train Communication Network (TCN) ; https://en.wikipedia.org/wiki/Train_communication_network
  🗒️ Contents
    TCN is a hierarchical combination of two 🪱 fieldbus networks for data transmission within trains.
    The TCN components have been standardized in IEC 61375.

    #️⃣🪱 Multifunction Vehicle Bus (MVB); https://en.wikipedia.org/wiki/Train_communication_network#Multifunction_vehicle_bus_(MVB)
      MVB was derived from the P215 bus developed by ..., incorporating the 🪱 publisher/subscriber principle from early field busses (DATRAS). ...
      The 🪱 MVB frames are not compatible with IEC 61158-2 fieldbus frames as it omits most of the 🪱 preamble synchronization.
    #️⃣🪱 Wire Train Bus (WTB) ; https://en.wikipedia.org/wiki/Train_communication_network#Wire_train_bus_(WTB)
      A unique property of the WTB is the 🪱 train inauguration in which the newly connected vehicles receive an address in sequence and can identify the 🚣 vehicle side.
        The WTB operates cyclically to provide deterministic operation, with a 🚣 period of ⚖️ 5 ms, used mainly for the traction control

⚓ Fieldbus ; << https://en.wikipedia.org/wiki/Fieldbus


 Fieldbus = 산업용 디지털 네트워크이고, PLC는 그 네트워크를 사용할 수도 있는 하나의 장치일 뿐이야!
  TCN (MVB, WTB), CAN, Profibus, Modbus, EtherCAT 등
주기적 전송구간(Periodic Phase): 이 구간에서는 프로세스 데이터와 같이 실시간으로 주기적인 전송이 필요한 데이터를 전송합니다. 이러한 데이터는 정해진 주기에 따라 지속적으로 전송되어야 하므로, 주기적 전송구간에서 처리됩니다.​

비주기적 전송구간(Sporadic Phase): 이 구간에서는 트레이스 데이터처럼 발생 빈도가 낮고, 전송 시점이 불규칙한 데이터를 처리합니다. 이러한 데이터는 발생 시점에 따라 비주기적으로 전송되며, 비주기적 전송구간에서 처리됩니다.

    IEC 61375

✅ 웹 표준(RFC, W3C, IETF 등)은 인터넷이 누구나 접근해야 하는 공공 인프라이므로 무료로 제공됨.
✅ 철도, 전력, 자동차 표준(IEC, ISO 등)은 산업체와 기업이 주로 사용하는 기술이므로 유료로 제공됨.
 즉, 웹 표준은 개방성(Open Access)이 중요한 반면, 철도 표준은 산업적 활용을 위한 라이선스가 필요하기 때문!

 CHF = 스위스 프랑(Swiss Franc)
✅ IEC(국제전기기술위원회)는 스위스에 본부가 있기 때문에 표준 문서의 가격이 스위스 프랑(CHF) 단위로 표시됨.


📍 RSS updates 란



https://www.autosar.org/
https://autosar.org/

⚓ ISO 26262: Road vehicles – Functional safety ; https://www.iso.org/publication/PUB200262.html
  https://en.wikipedia.org/wiki/ISO_26262
  🔒 Not free
⚓ ISO/SAE 21434:2021: Road vehicles — Cybersecurity engineering ; https://www.iso.org/standard/70918.html
  🔒 Not free

⚓ ISO 21217:2020: Intelligent transport systems — Station and communication architecture ; https://www.iso.org/standard/80257.html
  🔒 Not free

# IEC 61375: ... https://webstore.iec.ch/en/iec-search/result?q=Train%20communication%20network
  ⚓ TCN ; https://en.wikipedia.org/wiki/Train_communication_network
⚓ IEC 61375-1  ; https://webstore.iec.ch/en/publication/5397
  Electronic railway equipment - Train communication network (TCN) - Part 1: General architecture
⚓ IEC Technical Specification 61375-2-4 ; https://webstore.iec.ch/en/publication/31865
  it covers the application profile for functions belonging to the 🪱 Train Control and Monitoring System (TCMS).



In computer networks, a syncword, sync character, sync sequence or preamble is used to synchronize a data transmission by indicating the end of header information and the start of data.[citation needed] The syncword is a known sequence of data used to identify the start of a frame, and is also called reference signal or midamble in wireless communications.

Prefix codes allow unambiguous identification of synchronization sequences and may serve as self-synchronizing code.2. MVB 가 Manchester 를 사용한다는 인용문을 줘. (내가 준 텍스트 중에서) 그리고 Manchester  가 뭔지 설명해줘. 

시분할 다중방식(Time-Division Multiplexing, TDM)
논리주소 (LA, Logical Address)	소프트웨어적으로 설정된 주소 (데이터를 보낼 목적지를 논리적으로 지정)
물리주소 (DA, Device Address)	하드웨어 장치 자체의 고유 주소 (MVB 네트워크에 연결된 실제 장치의 주소)


"Sampling is the selection of a subset of individuals to estimate cha

"Polling, or interrogation, refers to actively sampling the status of an external device by a client program as a synchronous activity."
🚀 해석: 폴링(Polling), 또는 인터로게이션(Interrogation, 질의)은 클라이언트 프로그램이 외부 장치의 상태를 동기적으로 "샘플링(Sampling)"하는 것을 의미한다.racteristics."
(샘플링이란 모집단의 특성을 추정하기 위해 개체들의 부분 집합을 선택하는 것이다.)

-------------- Unmanned

# ISO 21384:...: Unmanned aircraft systems






 다원시스는 아시아 시장, 특히 인도네시아에서 철도 전장품 공급 계약을 체결하며 해외 시장 진출을 확대하고 있습니다. 



최근 다원시스의 뉴스를 종합해 보면, 이번 전원장치 SW(Embedded, 펌웨어) 모집 공고는 철도차량 및 핵융합 사업과 연관될 가능성이 가장 높습니다.

1. 철도차량 관련 가능성 (가장 유력)
2024/12/24 뉴스: https://www.dawonsys.com/kr/promotion/news.php?bbs_data=aWR4PTU5NSZzdGFydFBhZ2U9MCZsaXN0Tm89MTY2JnRhYmxlPWNzX2Jic19kYXRhJmNvZGU9bm90aWNlJnNlYXJjaF9pdGVtPSZzZWFyY2hfb3JkZXI9||&bgu=view
다원시스가 서울지하철 9호선 신형 전동차(400억 원 규모) 사업을 수주
신규 전동차에는 전력 시스템 및 전원장치가 필수적
전동차의 전력 변환 시스템, 제어 시스템 등에 Embedded SW 및 펌웨어 개발이 필요할 가능성이 큼
👉 철도차량용 전원장치의 SW 개발 및 펌웨어 설계/개발이 필요한 인력을 충원할 가능성이 높음

2. 핵융합 관련 가능성
2024/11/18 뉴스: https://www.dawonsys.com/kr/promotion/news.php?bbs_data=aWR4PTU5MyZzdGFydFBhZ2U9MCZsaXN0Tm89MTY2JnRhYmxlPWNzX2Jic19kYXRhJmNvZGU9bm90aWNlJnNlYXJjaF9pdGVtPSZzZWFyY2hfb3JkZXI9||&bgu=view
다원시스가 일본의 Helical Fusion과 핵융합 협력 MOU 체결
핵융합 발전에 필요한 초전도 코일 전원 공급 장치 및 고전압 DC 전원장치 공급 예정
핵융합 장비에는 Embedded 시스템과 펌웨어가 필요
👉 핵융합 사업 확장을 위한 고전압 전원장치 및 제어 시스템 개발 인력 충원 가능성도 있음

결론
📌 이번 전원장치 SW(Embedded, 펌웨어) 모집은 철도차량과 핵융합 관련 프로젝트를 진행하기 위한 인력 충원일 가능성이 가장 큼

철도차량 분야: 서울 9호선 전동차 사업 수주로 인한 전원장치 및 제어 시스템 관련 인력 확보
핵융합 분야: Helical Fusion과의 협업으로 핵융합 발전 관련 전원공급장치 및 제어 SW 개발 인력 필요


🏷️ "전원장치"를 "전장"이라고 줄여서 말하나?
"전장(電裝)"은 "전기전자 장비"라는 뜻으로 주로 자동차에서 사용되는 표현이야.
🚗 전장(電裝, Automotive Electronics) = 자동차의 전기/전자 부품 (배터리, 전기모터, ECU 등)

👉 하지만 "전원장치"는 그냥 "전장"이라고 줄여서 말하지는 않아.
👉 대신 "전력 시스템"이나 "파워 시스템" 같은 용어를 쓸 때가 많아!



⚡ 전원장치의 종류 (어디서 쓰는지?)
전원장치는 산업, 차량, 반도체 등 다양한 분야에서 사용돼!

1️⃣ 철도차량 (🚆 지하철, 기차, 전동차) → 가능성 높음!

전동차에는 전력을 변환하는 인버터, 컨버터, 배터리 관리 시스템(BMS) 등이 필요
이걸 Embedded SW(펌웨어)로 제어해야 함
최근 다원시스가 서울 9호선 전동차를 수주했으니까, 이와 관련된 전원장치 SW를 개발할 가능성이 큼
2️⃣ 핵융합 장치 (⚛️ ITER, Helical Fusion) → 가능성 있음

핵융합 발전 장치는 초고전압 DC 전원공급 시스템이 필요
초전도 코일을 안정적으로 작동시키기 위해 정확한 전력 제어 및 모니터링 SW가 필요
다원시스가 일본 Helical Fusion과 협력하고 있기 때문에, 핵융합 관련 전원장치 SW 개발도 있을 가능성 있음
3️⃣ 반도체/디스플레이 장비 (🖥️ 공정장비, 클린룸 장비)

반도체 생산장비에는 초정밀 전원 공급 시스템이 필요
다원시스가 반도체 사업도 하고 있어서, 이쪽 관련 전원장치 SW도 가능성 있음

✅ 2. 어떤 방식으로 TCN과 연결될까?
① 전원장치 SW에서 TCN을 통해 주고받는 데이터
📡 전원장치 종류	🔄 TCN 통신 내용
배터리 관리 시스템(BMS)	배터리 충전 상태(SOC), 온도, 전압, 이상 상태
인버터(전력 변환기)	입력/출력 전압, 주파수, 에러 코드
주 전원 공급 장치	전력 공급 상태, 전류량, 고장 감지
에너지 회생 시스템	제동 시 회생 전력량, 효율
📌 즉, 전원장치는 TCN을 통해 실시간 데이터를 중앙 제어 시스템으로 전달해야 하고, 네가 개발하는 SW가 이 통신을 처리할 가능성이 큼!s


개발할 전원장치 SW에서 TCN을 다루게 될 가능성은?
🚀 네가 맡을 가능성이 있는 역할
1️⃣ 전원장치의 펌웨어 개발 (임베디드 SW)

전력 변환기, 배터리, 인버터 제어 SW 개발
전원 상태를 측정하고, TCN을 통해 데이터를 송신
2️⃣ TCN과의 연동 기능 개발

전원장치의 데이터를 CAN/MVB를 통해 중앙 제어 시스템으로 보내는 기능
TCN을 통한 원격 제어 명령 처리 (예: 배터리 충전 제어, 전원 ON/OFF)
3️⃣ 전원장치의 실시간 모니터링 시스템과 연동

전원장치의 상태를 중앙 관제 시스템(TCMS)에서 볼 수 있도록 하는 데이터 인터페이스 개발
TCN을 통한 로그 데이터 전송 및 오류 감지 기능 구현
📌 즉, 네가 맡게 될 전원장치 SW 개발은 TCN을 반드시 활용할 가능성이 높음!
📌 특히, TCN을 통해 데이터를 주고받아야 하므로, 네가 TCN을 이해하고 있으면 큰 강점이 될 것!


A central control unit (CCU) is a device in a train that controls and monitors the train's electrical equipment and status. It's a key part of a train's control and monitoring system (TCMS). 

⚓ https://webstore.iec.ch/en/publication/31865
  Train communication network (TCN) - Part 2-4: TCN application profile

⚓ IEC TS 61375-2-4:2017
  TCMS

  https://www.jobkorea.co.kr/Recruit/GI_Read/44890423


사진을 텍스트와 겹치게 하는 방법..
File - Options - Advanced -Cut, copy, and paperswithcode
  - Insert/paste picture as: ✔️ In front of text
    https://support.microsoft.com/ko-kr/office/%EC%9D%B4%EB%AF%B8%EC%A7%80%EC%97%90-%EB%8C%80%ED%95%9C-%EA%B8%B0%EB%B3%B8-%ED%85%8D%EC%8A%A4%ED%8A%B8-%EC%A4%84-%EB%B0%94%EA%BF%88-%EC%84%A4%EC%A0%95-%EB%B3%80%EA%B2%BD-3f9f0e39-9114-4138-90f9-5c3e528862bb

📰 Proator 패턴?.. Reacotr 패턴 둘 다? 
  Inversion of Control
    콜백 함수(핸들러)를 통해 이벤트를 처리 (역제어: Inversion of Control

| Feature | **Reactor Pattern** | **Proactor Pattern** |
|------|----------------|----------------|
| **I/O Handling Method** | **Synchronous + Non-blocking I/O** | **Asynchronous + Non-blocking I/O** |
| **Event Detection Method** | Uses `select()`, `epoll()`, `poll()` to **monitor I/O readiness** and calls `read()` when ready | OS kernel performs **fully asynchronous I/O** and triggers a **completion handler** when finished |
| **Who Handles Data Processing?** | **User code explicitly calls `read()` or `write()`** | **OS kernel processes data asynchronously and automatically triggers the handler upon completion** |
| **Blocking Behavior** | `select()` enables Non-blocking I/O multiplexing, but `read()` remains synchronous | Uses `aio_read()`, `io_uring`, etc., for **fully asynchronous (Non-blocking + Asynchronous) I/O** |
| **Callback Execution Timing** | `select()` detects ready FDs and then `read()` is manually executed | OS completes the I/O operation and **automatically triggers the Completion Handler (callback)** |
| **Example APIs** | `select()`, `poll()`, `epoll()` + `read()`/`write()` | `aio_read()`, `io_uring`, Windows IOCP (Completion Port) |

 📰🆚 (comparsion) ; context switch in (multi-thread, multi-processing), ..


⚓ TSS (TaskState segment) ;  https://en.wikipedia.org/wiki/Task_state_segment

Datagram nomenclature
OSI layer	Name
Layer 4	TCP segment
Layer 3	Network packet
Layer 2
  Ethernet frame (IEEE 802.3)
  Wireless LAN frame (IEEE 802.11)
Layer 1	Chip (CDMA)




translation lookaside buffer (TLB) ; https://en.wikipedia.org/wiki/Translation_lookaside_buffer
process control block (PCB) ; https://en.wikipedia.org/wiki/Process_control_block

논문 읽는 방법 정리

  1. 논문을 읽기 전에 알아야 할 것
    - 두괄식 구조: 대부분의 논문은 문단의 첫 문장에 핵심 내용을 담고 있음.
    - 목적 설정: 논문을 읽는 목적에 따라 읽어야 할 부분이 달라짐.
      - 연구 동향 파악
      - 연구 알고리즘 파악
      - 연구 결과 파악

  2. 논문을 읽는 방법

    1) 연구 동향 파악
      - Introduction(서론) 집중  
        - 논문의 연구 주제 및 관련 배경 설명.
        - 많은 참고 문헌(Reference) 인용됨 → 이전 연구 동향을 파악 가능.
      - 서론 읽는 법
        - 문단의 첫 문장들만 먼저 읽고 핵심 내용을 파악.
        - 필요한 문단만 집중적으로 읽기.
        - 마지막 문단은 논문의 연구 방향 설명 → 주의 깊게 읽기.

    2) 연구 알고리즘 파악
      - Conclusion(결론) 또는 Result(결과) 먼저 읽기  
        - 연구의 핵심 내용을 요약해 둔 부분.
        - 논문 전체의 흐름을 빠르게 이해할 수 있음.
      - 결론 읽는 법
        - 결론이 짧다면 중요한 부분만 캐치 후 본문으로 이동.
        - 결론이 길다면 첫 번째 문단(논문 요약)과 나머지 문단을 구분하여 읽기.
      - 본문 읽는 법
        - 키워드를 추출 후 본문에서 해당 내용 찾기.
        - "Proposed Method"나 "Algorithm" 섹션을 중점적으로 읽기.

    3) 연구 결과 파악
      - 본문에서 실험 결과 부분 집중
        - 일반적으로 본론은 두 가지로 구성됨:
          1. 연구 알고리즘 설명
          2. 연구 알고리즘 검증(실험 내용)
        - 연구 결과를 확인하려면 두 번째 부분(실험 결과)만 집중적으로 보기.
      - 그래프, 표, 그림 활용
        - 실험 결과는 주로 그래프와 표로 제공됨.
        - 우선 그림과 그래프를 빠르게 보고 핵심 정보 파악.
        - 이후 관심 있는 그래프, 표에 대한 설명을 본문에서 찾기.

  3. 핵심 요약
    ✅ 문단의 첫 문장을 먼저 읽고 핵심 내용 파악  
    ✅ 읽는 목적에 따라 필요한 부분만 읽기  
    ✅ 서론 → 결론 → 본문 순으로 읽으면 효율적  
    ✅ 그래프와 표를 먼저 보고 본문을 읽으면 빠르게 이해 가능  


TI Embedded Debug for VS Code
https://marketplace.visualstudio.com/items?itemName=ti-development-tools.ti-embedded-development

⚓ Task state segment (TSS) ; https://en.wikipedia.org/wiki/Task_state_segment
  ... is a structure on x86-based computers which holds information about a task. 
📈
  Reactor 패턴에서는 read()를 직접 호출해야 하므로 커널 ↔ 유저 공간 전환이 빈번함.
  I/O 처리를 커널이 독립적인 흐름에서 수행하고, 완료되면 한 번만 유저 공간으로 결과를 전달하기 때문.
  Proactor 패턴은 OS가 I/O를 직접 처리하고 결과를 전달하는 방식이므로, Reactor 패턴보다 훨씬 더 적은 컨텍스트 스위칭이 발생하며 성능이 향상된다!

⚓ Virtual thread ; https://en.wikipedia.org/wiki/Virtual_thread
⚓ Green thread ; https://en.wikipedia.org/wiki/Green_thread
  #️⃣ Green threads in other languages ; https://en.wikipedia.org/wiki/Green_thread#Green_threads_in_other_languages
    - Go implements so called goroutines

  go-scheduler가 goroutine을 한 queue에서 다른 queue로 옮기는 것을 work stealing ... 
⚓ Work stealing ; https://en.wikipedia.org/wiki/Work_stealing

⚓ instructions per cycle (IPC) | instructions per clock ;  https://en.wikipedia.org/wiki/Instructions_per_cycle



fieldbus ??
  필드버스(fieldbus)는 실시간 분산 제어를 위해 사용되는 산업용 컴퓨터 네트워크 프로토콜 집합의 통칭으로서, 현재 IEC 61158로 표준화되어 있다.




1. TI microprocessor 

PIC (Peripheral Interface Controller)
  PIC MCU는 다양한 주변 장치와의 연결을 위해 여러 인터페이스를 제공함.
  대표적인 인터페이스: UART, SPI, I²C, CAN, USB, GPIO 등

⚓ Processor (computing) ; https://en.wikipedia.org/wiki/Processor_(computing)
  ⚓ Computer architecture ; https://en.wikipedia.org/wiki/Computer_architecture
    ⚓ Von Neumann architecture ; https://en.wikipedia.org/wiki/Von_Neumann_architecture
    ⚓ Harvard architecture ; https://en.wikipedia.org/wiki/Harvard_architecture
    ⚓ Modified Harvard architecture ; https://en.wikipedia.org/wiki/Modified_Harvard_architecture
PC
  폰 노이만(Neumann) 아키텍처를
    프로그램 코드와 데이터를 하나의 메모리에서 저장하고 하나의 버스로 접근
    메모리를 유동적으로 사용할 수 있음 (ex. 프로그램 실행 중에 코드 메모리를 동적으로 변경 가능)
    코드를 쉽게 수정하고 업데이트 가능
    
    // 명령어와 데이터 동시 처리 가능 → 빠른 속도
    // 일반 PC, x86 & ARM CPU, 서버, 스마트폰
  하버드(Harvard) 아키텍처
    프로그램 코드와 데이터를 분리된 메모리에 저장하고, 각각의 버스로 접근
    메모리 구조가 복잡해지고, 하드웨어 비용이 증가
    메모리 낭비가 발생할 가능성 → 명령어 메모리가 남아도 데이터 메모리가 부족할 수도 있고, 반대로 데이터 공간이 남아도 코드 메모리가 부족할 수도 있음.

    // 메모리 효율적, 범용 OS와 호환, 소프트웨어 개발 용이
    // 임베디드 시스템, DSP(디지털 신호 처리), 마이크로컨트롤러    


코드 메모리 (Code Memory)
  역할: 실행할 프로그램의 명령어(Instructions)를 저장하는 공간
데이터 메모리 (Data Memory)
  역할: 실행 중에 생성되고 변경되는 데이터(변수, 스택 등)를 저장하는 공간


1. 어떤 움직이는 물체에 RF 신호를 주어 도플러효과?반사파?를 사용해서 FFT 변환해서? DMA? 인터럽트? 방식으로 ADC 를 구현했다. 라고 하던데.. 
  ❓ 이게 문장이 뭔소린지도 모르겟고 각 용어도 하나도 모르겟어: ❓ RF 신호, ❓ 도플러효과, ❓ FFT 변환, ❓ DMA/인터럽트 방식? ❓ ADC? 
2. ❓ RS 232, 482, 485 이런게 뭐지? 그리고 어떤 것들에 대해 jig1 ~ jig8 까지 있는데. ❓ jig 는 뭐지?
  각 jig 는 6개의 시리얼 포트가 있는데, 이거를 stm32 에 연결해서 이 각 시리얼에서 오는 신호(이름..이 있나? 구분가능한가 이름으로? ❓ udev?) 를 패킷으로 만들어서 PC 에 전송해야 해.
  ❓ 그래서 최소 6개의 입력 시리얼 포트 + 출력 + 내장 디버깅 포트/모듈이 있는 stm32 제품 추천해줘. (2025년 기준)
  ❓ 그리고 패킷 이거.. 무결성 유지하려면 어떻게 만들어서 전송해야하지? 시리엁 통신? TCP? syncword? 
3. ❓ rtsp vs webrtc 중에 뭐가 더빠르지? 스트리밍해야하는데.. 아니면 또다른 최신 (2025년 기준) 프로토콜이 있나?
  지연이 없어야 해. 
  그리고 ❓ overshoot ? 뭐라고하던데? 카메라 포착중에 다른것을 포착하도록 해야할때 카메라가 급작스럽게 변하지 않도록 하는 용어가.. 뭐더라.
  
Tapered 


그러면 송신 측과 수신 측의 CRC 테이블이 같아야 할까?
  ✅ 맞다. 송신 측과 수신 측이 동일한 CRC 알고리즘과 테이블을 사용해야 동일한 결과가 나온다.



CRC8, CRC16, CRC32 등의 숫자는 CRC의 다항식 길이를 의미합니다.

CRC8: 8비트 (1바이트)로 표현되는 CRC 값 (ex: 0x07)
CRC16: 16비트 (2바이트)로 표현되는 CRC 값 (ex: 0x1021)
CRC32: 32비트 (4바이트)로 표현되는 CRC 값 (ex: 0x04C11DB7)



CRC-8 CCITT 표준

>> QT 가 비동기코드가 필요한가?
6 쓰레드?
윈도우 Comport 로 들어가나 이게?
엑셀기능.
 
?소켓통신인가 이거 머지? serial print 에 한 거를  어떻게 가능한가


- 광택 있는 테이퍼드 팬츠
- 새틴 나일론 슬림핏 팬츠
- 고급스러운 광택 팬츠 남성 / 실키한 남자 바지
- 셔츠랑 어울리는 슬림핏 나일론 팬츠
- 슬림핏 새틴 팬츠 / 광택 나는 슬림핏 조거
- 샤이니 나일론 테이퍼드 팬츠
- 미니멀 조거 팬츠 / 테이퍼드 핏 나일론 팬츠
- 세미 정장 느낌 나는 트랙팬츠
- 캐주얼 사원복 바지 남성

⚓ Change Request | Change Control Request (CCR) ; https://en.wikipedia.org/wiki/Change_request



uint8_t calculate_crc8(uint8_t *data, int length) {
    uint8_t crc = 0x00; // 초기값
    for (int i = 0; i < length; i++) {
        crc = crc8_table[crc ^ data[i]];  // ❓ 근데 왜 crc ^ data[i] 에 대한 index 에 해당되는 cc8_table 의 값을 crc 에 할당함?
    }
    return crc;
}


다음 너가 써준 것에 대해서 실제 예시로 열려줘. 어떻게 진행되는지 각 루프에서..
```
(crc & 0x80) 조건의 의미
CRC 계산은 비트 단위 연산을 수행하는데,
데이터를 처리할 때 **비트가 왼쪽으로 한 칸씩 이동(shift)**하면서 나눗셈을 진행합니다.

if (crc & 0x80)
    crc = (crc << 1) ^ polynomial;
else
    crc <<= 1;
(crc & 0x80)는 가장 왼쪽 비트(최상위 비트)가 1인지 확인하는 조건입니다.
최상위 비트가 1이면, CRC 연산 중 다항식(polynomial)을 XOR 합니다.
→ 다항식으로 나누는 과정에서 나머지를 조정하는 과정.
최상위 비트가 0이면, 그냥 crc <<= 1 해서 다음 비트로 진행합니다.
→ 이 경우, 특별한 조정 없이 그냥 이동만 합니다.
💡 왜 0x80을 체크할까?

CRC8은 8비트 연산을 하므로 최상위 비트(8번째 비트)가 1인지 확인해야 함.
만약 1이면 다항식을 XOR하여 보정해야 올바른 CRC 값이 나옴.
```


#️⃣ Introduction ; https://en.wikipedia.org/wiki/Cyclic_redundancy_check#Introduction
  Specification of a CRC code requires definition of a so-called 🪱 generator polynomial.
  This polynomial becomes the 🪱 divisor in a polynomial long division
    , which takes the message as the dividend and in which the quotient is discarded and the remainder becomes the result.
#️⃣ Polynomial representations ; https://en.wikipedia.org/wiki/Cyclic_redundancy_check
  - 🪱 CRC-8-CCITT

📍 이진수에서는 XOR이 뺄셈 역할을 한다
  1 - 1 = 0
  1 - 0 = 1
  0 - 1 = 1 (이진수에서는 반대로 되기 때문에, XOR로 해결)


2️⃣ CRC 계산 과정 (다항식 나눗셈)
  이진수에서는 나눗셈을 할 때,
    첫 번째 비트가 1이면 나누는 다항식과 XOR 연산을 수행한다.
    첫 번째 비트가 0이면 XOR을 하지 않고 그냥 다음 비트를 추가한다.
  ### **즉, 이진수에서는 다항식을 다항식 그대로 나누는 것이 아니라, 다항식의 계수를 XOR 연산하여 처리한다!**

다항식의 나눗셈; https://golbanglibrary.tistory.com/20
  ---📰 2진수의 나눗셈.

❗ crc8 알고리즘?.. 실제 사례 찾아보기
  uint8_t crc8_bitwise(uint8_t *data, int length) {
      uint8_t crc = 0x00; // 초기값
      uint8_t polynomial = 0x07; // CRC-8 표준 다항식

      for (int i = 0; i < length; i++) {
          crc ^= data[i]; // 데이터 바이트 XOR
          for (int j = 0; j < 8; j++) { // 비트 단위 연산
              if (crc & 0x80)  // 최상위 비트가 1이면
                  crc = (crc << 1) ^ polynomial;
              else
                  crc <<= 1;
          }
      }
      return crc;
  }

CRC는 오류를 검출만 하지만, FEC는 수정까지 가능.

추가적인 오버헤드 (Redundancy Overhead)
  FEC는 데이터와 함께 오류 정정을 위한 추가 정보(패리티 비트, ECC 등)를 삽입해야 하므로, 전체 데이터 크기가 증가함.
  CRC는 단순히 몇 바이트의 검사 코드만 추가하는 반면, FEC는 수십 % 이상의 추가 데이터가 필요할 수도 있음.
복잡한 연산 (Computational Complexity)
FEC 알고리즘(특히 LDPC, 터보 코드 등)은 수학적으로 복잡하며, 고속 연산이 필요함.
  하드웨어에서 구현 시 더 강력한 프로세서나 전용 회로(ASIC, FPGA 등)가 필요.
  저전력 장치(예: IoT, 센서 네트워크)에서는 CRC처럼 간단한 방법이 더 유리할 수 있음.
심각한 오류에는 무용지물
  FEC는 일정한 비율의 오류만 수정 가능(정정 한계를 넘으면 데이터 복구 불가능).
  예를 들어, Reed-Solomon 코드는 최대 2t개의 오류를 수정할 수 있지만, 2t를 초과하는 오류가 발생하면 데이터가 손상됨.
  심각한 데이터 손상(예: 패킷 전체가 손실됨)이 발생하면 CRC처럼 추가적인 오류 검출 기법과 함께 사용해야 함.
모든 환경에서 효과적이지 않음
  데이터 손실률이 낮거나 신호가 안정적인 네트워크에서는 불필요한 오버헤드가 발생할 수 있음.
  TCP/IP 기반의 네트워크에서는 오류 검출 후 **재전송(ARQ: Automatic Repeat reQuest)**이 더 효율적일 수도 있음.


⚓ Error correction code ; https://en.wikipedia.org/wiki/Error_correction_code
  🪱 Forward error correction (FEC)
  #️⃣ List of error-correcting codes ; https://en.wikipedia.org/wiki/Error_correction_code#List_of_error-correcting_codes

⚓ Error detection and correction ; https://en.wikipedia.org/wiki/Error_detection_and_correction
  #️⃣ Types of error correction ; https://en.wikipedia.org/wiki/Error_detection_and_correction#Types_of_error_correction
  #️⃣ Types of error detection ; https://en.wikipedia.org/wiki/Error_detection_and_correction#Types_of_error_detection
    ⚓ Cyclic redundancy check (CRC); https://en.wikipedia.org/wiki/Cyclic_redundancy_check


⭕ 위키백과에서 **"Error correction code (ECC)"**가 **"Forward Error Correction (FEC)"**으로 리다이렉트되는 이유는
  , 현대적인 오류 정정 방식에서 FEC가 가장 일반적으로 사용되는 기법이기 때문입니다. 즉, **"오류 정정 코드(ECC)"**라는 개념이 이제는 대부분 FEC와 동의어처럼 취급되고 있다는 의미입니다.

ℹ️ (About); Why ECC Redirects to FEC on Wikipedia

  In modern computing, telecommunication, and information theory, the term **Error Correction Code (ECC)** is often treated as synonymous with **Forward Error Correction (FEC)**. This is why Wikipedia redirects "Error Correction Code" to "Forward Error Correction." The reason for this shift lies in the evolution of data transmission and storage technologies, where **FEC has become the dominant method for error correction**.

  
  **🔍 Why is ECC = FEC in modern systems?**

    1. **Avoiding Retransmissions (ARQ is Inefficient)**
      - Traditional error detection techniques like CRC (Cyclic Redundancy Check) identify errors but require retransmission (ARQ - Automatic Repeat reQuest) to recover lost data.
      - In real-time applications such as **satellite communication, 5G networks, streaming services, and IoT**, retransmissions can cause excessive delays or may not even be possible.
      - **FEC allows errors to be corrected at the receiver without needing a retransmission**, making it ideal for these applications.

    2. **ECC is a Broad Term, but FEC is the Most Common Approach**
      - ECC encompasses various techniques for error handling, including both error **detection** (e.g., CRC, checksums) and **correction** (e.g., Hamming codes, Reed-Solomon, LDPC, Turbo Codes).
      - However, in most modern use cases, **error correction codes (ECC) refer to FEC methods**, as they proactively correct errors without requiring sender intervention.

    3. **FEC is Essential in Modern Communication & Storage Systems**
      - **5G, fiber optics, Wi-Fi, satellite links, and SSDs/RAM** all rely heavily on FEC-based ECC for maintaining data integrity.
      - Examples of widely used **FEC codes**:
        - **LDPC (Low-Density Parity-Check Codes)** → Used in **5G, Wi-Fi, SSDs, and satellite communications**
        - **Turbo Codes** → Used in **4G/5G networks and deep-space communication**
        - **Polar Codes** → A newer FEC method adopted in **5G standardization**
        - **Reed-Solomon Codes** → Common in **CDs, DVDs, QR codes, and storage devices**

    4. **CRC is Still Used, But Only for Error Detection**
      - **CRC is fast and simple, but it cannot correct errors—only detect them.**
      - Because of this limitation, CRC is still useful in **Ethernet, file integrity checks, and embedded systems**, but not for scenarios where self-correction is required.
      - Instead of relying solely on CRC, modern systems integrate **FEC for stronger error correction capabilities**.

  **📌 Conclusion**

    - **ECC has evolved to favor FEC methods because of their ability to correct errors without retransmission.**
    - **Wikipedia redirects "Error Correction Code" to "Forward Error Correction" because, in most modern applications, ECC means FEC.**
    - **CRC remains relevant for error detection, but robust systems now favor FEC for actual error correction.**
    - **The future of error correction is increasingly focused on LDPC, Turbo Codes, and Polar Codes, especially in high-speed communication technologies.**

재무 안정성 🏦
🏢 재무평가란? (한국 기준)
  재무평가는 기업의 재무 건전성, 수익성, 성장성, 안정성 등을 종합적으로 평가한 지표야. 보통 신용평가 기관이나 금융권에서 기업 신용등급을 매길 때 활용되며, 주요 지표는 다음과 같아.
📊 주요 평가 요소
  수익성 📈
    매출액, 영업이익, 당기순이익 등의 비율을 분석.
    영업이익률, 순이익률이 높을수록 우수함.
  재무 안정성 🏦
    부채비율(총부채/자기자본), 유동비율(유동자산/유동부채) 등이 포함됨.
    부채비율이 낮고 유동비율이 높을수록 재무 안정성이 좋음.
  성장성 🚀
    매출 증가율, 이익 증가율 등이 평가됨.
    지속적인 매출 성장과 이익 증가가 중요.
  활동성 🔄
    자산 대비 매출액, 재고 회전율 등을 분석하여 기업의 자원 활용 효율성을 측정.

✅ (how); Install self-managed GitLab
  %shell>
    ### https://about.gitlab.com/install/#ubuntu
    ## 1. Install and configure the necessary dependencies
    sudo apt update &&	sudo apt install -y curl openssh-server ca-certificates tzdata perl
    ## (Optional) install Postfix (or Sendmail) to send notification emails
    # sudo apt install -y postfix
    ## 2. Add the GitLab package repository and install the package
    curl https://packages.gitlab.com/install/repositories/gitlab/gitlab-ee/script.deb.sh | sudo bash
    sudo EXTERNAL_URL="https://gitlab.internal.dst.com" apt install -y gitlab-ee
    # List available versions: apt-cache madison gitlab-ee
    # Specifiy version: sudo EXTERNAL_URL="https://gitlab.example.com" apt-get install gitlab-ee=16.2.3-ee.0
    # Pin the version to limit auto-updates: sudo apt-mark hold gitlab-ee
    # Show what packages are held back: sudo apt-mark showhold

  Reference
    Install GitLab with the Linux package ; https://docs.gitlab.com/omnibus/installation/
    Configuring a Linux package installation ; https://docs.gitlab.com/omnibus/settings/



# cp 명령어로 ./dataset 폴더를 제외하고 현재 폴더의 모든 파일 및 폴더 복사하는 방법
rsync -av --progress --exclude=dataset ./ /복사할_디렉토리/

TODO
  - Gitlab self-hosting with TLS and DNS resolve
  - QT crosscompile in Pure ubuntu or WSL to target Native Windows (not using MinGW).



📰 셔츠는 뭘 입어야 하는거지? 주변 사람 패션 확인 필요
  Full Tuck
  French Tuck
  Half Tuck
  Untucked


Com0com ; https://com0com.sourceforge.net/
  🗑️ Laste updated date: 2017.02.06
Free Virtual Serial Ports
VSPE (Virtual Serial Port Emulator)


Hercules SETUP utility
  https://luckygg.tistory.com/310
  https://www.hw-group.com/software/hercules-setup-utility



그러니까 음. 장치 A <--RS-232(or 485)-to-usb --> B (PC) 를 통신 테스트하기위해서
이 모델을 가상화하는거야.
그래서 나는 실제 물리적인 장치연결 없이 PC에서 통신테스트할 수 있게.

내가 해야 하는것. (QT6)
  - QT 에서 "가상 com port 를 인식하고 통신을 실제 com port 처럼 통신할 수 있어야 한다"
    그러니까 PC 에서 이 3개의 자세한 통신방법까지 구현해서 시뮬레이션하려는게 아니라, 양방향 데이터 전송, 수신을 하려는 것.
    RS-232 to USB of PC, USB to USB of PC 의 경우에는 1:1 이니까 그냥 송수신하면 되나? RS-485 to USB of PC 만 추가 처리하면 되고?

    - RS-232 to USB of PC
    - RS-485 to USB of PC
      1 : 2 인 상태인데 상대 2개에서 오는 메시지를 (출처를) 개별적으로 인식 가능하낙?
    - USB to USB of PC

줄바꿈문자, 인코딩.. 상태 정의..


RS-232는 기본적으로 저속 통신(수 Kbps~수십 Kbps)에 적합한 프로토콜.
최신 인터페이스(RS-422, RS-485, Ethernet)와 비교하면 매우 느린 속도.
예를 들어, RS-485는 수 Mbps(1~10 Mbps) 속도도 지원 가능함.

# Technical and de facto standards for wired computer buses


⚓📎 Arbiter (electronics) ; https://en.wikipedia.org/wiki/Arbiter_(electronics)
  Arbiters are electronic devices that allocate access to shared resources.
⚓ Relay ; https://en.wikipedia.org/wiki/Relay
  A relay is an electrically operated switch.
⚓ Data rate | Data transfer rate ; https://en.wikipedia.org/wiki/Data_rate
⚓⭕ Modbus ; https://en.wikipedia.org/wiki/Modbus
  📝📰 with protocol buffers? 시나리오? 그럼 내 이전 프로젝트에서는.. 단순하게 그렇게 사용하면 안됫나..?? 🆚 Field bus vs modbus
    - Modbus 장비(센서, PLC) → Gateway(중계기) → 클라우드 서버
    - Modbus 데이터(레지스터 값)를 수집한 후, Protobuf로 변환하여 MQTT/HTTP 등의 클라우드 서비스로 전송
    - 즉, Modbus는 저수준 통신을 담당하고, Protobuf는 상위 시스템에서 데이터를 관리하는 역할
    Modbus RTU, Modbus ASICI, Modbus TCP/IP
      Modbus는 시리얼 통신을 포함하는 산업용 통신 프로토콜이야.
      💡 하지만, 꼭 시리얼(RS-232, RS-485)만 사용하는 건 아니고, 네트워크(TCP/IP) 기반에서도 사용할 수 있어!
      1. 속도만 보면 일반 시리얼(UART, RS-485)이 압도적으로 빠름
        Modbus: 10~100ms (느림)
        일반 시리얼: 1ms 이하 (빠름, 경우에 따라 마이크로초 단위)
      2. 하지만 Modbus는 다중 장치 & 표준 프로토콜로 안정적
        Modbus는 여러 개의 슬레이브(센서, 모터 등)와 안정적인 데이터 교환이 가능
        CRC 오류 검출 및 다중 장치 관리 가능
        산업 자동화에서 표준으로 사용됨
      3. 그러면 언제 Modbus, 언제 일반 시리얼을 써야 할까?
        ✔ 실시간 응답이 필요하고, 한 개의 장치와 빠르게 통신해야 한다면?
          → UART/RS-232/RS-485 (일반 시리얼) 사용!

        ✔ 여러 개의 장치와 통신하고, 산업 표준이 필요하다면?
          → Modbus 사용!
    ❗ https://doc.qt.io/qt-6/qtprotobuf-sensors-example.html
      이런 예제도 있었네


  ...become a de facto standard communication protocol for communication between industrial electronic devices in a wide range of buses and networks.


❔ Qt License
  ⚓ Qt for Small Business ; https://www.qt.io/pricing/qt-for-small-business
    - Qt for Device Creation Professional (DCP-SB)
    - Qt for Application Development Enterprise (ADE-SB)
    # Are You Eligible?
      Small business pricing is limited to companies with an annual revenue and/or funding of max 1 Million EUR. (~15억)
  ⚓ Qt Licensing ; https://www.qt.io/qt-licensing
    - Qt Community Edition
    - Qt for Application Development Professional
    - Qt for Application Development Enterprise
  🔓 QT; 배포하지 않고 기업 내부에서 사용 한다던가 서비스 형태로 사용한다면 의무사항 자체가 발생하지 않는다. (GPL 포함) ; https://www.etnews.com/20200402000270
    라이센스를 3개 제공한다. https://www.qt.io/qt-licensing?utm_campaign=Qt%20Installer%202019&utm_source=IN#:~:text=Community%20vs.%20Commercial%20License
    - Open Source License: GPL
      무료, 소스 코드 공개 필요.
    - Open Source License: LGPL
      무료, QT 를 동적 링크를 사용해야 배포 시, 소스 코드 공개 의무 없음.
    - Qt Commercial License
      유료, 소스 코드 공개 의무 없음. 배포 시 정적 링크 사용 가능.

user settings.json
  "sonarlint.disableTelemetry": true
user settings.json (Windows)
  "terminal.integrated.defaultProfile.windows": "PowerShell"
  "sonarlint.pathToNodeExecutable": "C:\\Program Files\\Volta\\node.exe"

  "C_Cpp.intelliSenseEngine": "default",
  "C_Cpp.debugShortcut": true,  // 🔗 Can't see the run and debug button after installing C/C++ extension ; https://github.com/microsoft/vscode-cpptools/issues/12004
    // C/C++ MS extension 버전 문제로 보임. 이상하게 pre-release 버전으로 작동하고 있었다..
  
  "terminal.integrated.env.windows": {
    "VCPKG_ROOT": "${env:USERPROFILE}/vcpkg",
    "PATH": "${env:USERPROFILE}/vcpkg;${env:PATH}"
  }

🚧 required? ? "sonarlint.pathToNodeExecutable": "/home/linuxbrew/.linuxbrew/bin/node"



>>> ..회사 환경에서도 scoop 써야할듯, winget, chocolatey 단점이 너무 큼.. 📅 2025-03-12 05:15:17
🔥 결론: Scoop은 공식 패키지를 제공하는가?
  ✅ 네, main 버킷은 공식 패키지입니다!
  ❌ 하지만 extras 같은 버킷은 신뢰성이 100% 보장되지 않으므로, 필요하면 검토 후 사용해야 합니다.

  즉, Scoop의 main 버킷을 사용하면 최신 버전을 안전하게 유지할 수 있는 공식 패키지 관리자로 활용할 수 있습니다! 🚀
  scoop bucket add main
  scoop install main/vulkan
  qt를 사용하는 Cmake 프로젝트  configure 하면  다음과 같이 나오는데, vulkan_include_dir? ...
    [main] Configuring project: AddressBook 
    [proc] Executing command: "C:\Program Files\CMake\bin\cmake.EXE" -DCMAKE_BUILD_TYPE:STRING=Debug -DCMAKE_EXPORT_COMPILE_COMMANDS:BOOL=TRUE -DCMAKE_TOOLCHAIN_FILE:FILEPATH=C:\Qt\6.8.2\msvc2022_64\lib\cmake\Qt6\qt.toolchain.cmake -DQT_QML_GENERATE_QMLLS_INI:STRING=ON --no-warn-unused-cli -SC:/Users/USER/repo/dst/AddressBook -Bc:/Users/USER/repo/dst/AddressBook/build -G Ninja
    [cmake] Not searching for unused variables given on the command line.
    [cmake] -- 🚧 
    [cmake] --   - CMAKE_TOOLCHAIN_FILE is set to: C:/Qt/6.8.2/msvc2022_64/lib/cmake/Qt6/qt.toolchain.cmake
    [cmake] --   - VCPKG_TARGET_TRIPLET is set to: x64-windows
    [cmake] -- Could NOT find WrapVulkanHeaders (missing: Vulkan_INCLUDE_DIR) 
    [cmake] -- Configuring done (0.2s)
    [cmake] -- Generating done (0.2s)
    [cmake] -- Build files have been written to: C:/Users/USER/repo/dst/AddressBook/build


https://doc.qt.io/qt-6/qdebug.html

🚀 결론: NDEBUG가 설정되면 qDebug()는 작동하지 않는다!
  ✅ Qt는 qDebug()를 NDEBUG와 연동하여 릴리즈 빌드에서 자동 비활성화함.
  ✅ 릴리즈 빌드에서도 qDebug()를 활성화하려면 QT_NO_DEBUG_OUTPUT=0을 설정하거나 NDEBUG를 제거해야 함.
  ✅ 이 기능을 활용하면 디버깅 로그를 쉽게 제어할 수 있으며, 불필요한 로그 출력으로 인한 성능 저하를 방지할 수 있음! 🚀


  why a developer use spdlog and qt debug together
    https://stackoverflow.com/questions/66531834/get-log-from-spdlog-in-qtextedit-object-from-qt

#️⃣ Environment Variables Recognized by Qt
  🪱 QT_WIN_DEBUG_CONSOLE

  🚀 QT_WIN_DEBUG_CONSOLE은 DEBUG 매크로(NDEBUG)와 자동 연동되지 않는다!